{"openapi":"3.1.0","info":{"title":"Multi-RAG","summary":"大模型底座接口","description":"\nMulti-RAG API helps you do awesome stuff. 🚀\n\n## 本项目旨在构建一个多层次的系统，整合各类大语言模型（LLMs）、工具和服务，支持应用开发和API开放。\n","termsOfService":"https://cake-doom-0c6.notion.site/4b6c4b3a5338497494620b3dd82e4acc?pvs=4","contact":{"name":"DuXiaolong","url":"https://github.com/yuehong136?tab=repositories","email":"du13013901711@163.com"},"license":{"name":"Apache 2.0","url":"https://www.apache.org/licenses/LICENSE-2.0.html"},"version":"0.0.1"},"paths":{"/v1/mcp_server/list":{"post":{"tags":["mcp_server"],"summary":"获取MCP服务器列表","description":"### POST `/list` 获取MCP服务器列表\n\n**功能描述**:\n此接口用于获取MCP服务器列表，支持分页查询、关键词搜索和排序功能。\n用户可以查看自己有权限访问的所有MCP服务器，或指定特定的MCP服务器。\n支持按名称关键词过滤，并提供灵活的排序和分页选项。\n\n---\n### 请求体 (Request Body)\n| 字段      | 类型          | 必填 | 描述                         |\n|-----------|---------------|------|------------------------------|\n| `mcp_ids` | `list[string]` | 否   | 指定MCP服务器ID列表，为空时查询所有可访问的服务器 |\n\n### 查询参数 (Query Parameters)\n| 参数        | 类型      | 必填 | 默认值      | 描述                         |\n|-------------|-----------|------|-------------|------------------------------|\n| `keywords`  | `string`  | 否   | \"\"          | 搜索关键词，用于模糊匹配服务器名称 |\n| `page`      | `integer` | 否   | 0           | 页码，0表示不分页            |\n| `page_size` | `integer` | 否   | 0           | 每页显示的记录数，0表示不分页 |\n| `orderby`   | `string`  | 否   | \"create_time\" | 排序字段               |\n| `desc`      | `boolean` | 否   | true        | 是否降序排列             |\n\n**请求示例**:\n```json\n{\n    \"mcp_ids\": [\"uuid-server-id-1\", \"uuid-server-id-2\"]\n}\n```\n\n---\n### 响应 (Response)\n#### 成功响应 (200)\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": {\n        \"mcp_servers\": [\n            {\n                \"id\": \"uuid-server-id-1\",\n                \"name\": \"智能客服MCP服务器\",\n                \"server_type\": \"http\",\n                \"url\": \"https://api.example.com/mcp\",\n                \"description\": \"用于客服场景的MCP服务器\",\n                \"variables\": {\n                    \"timeout\": 30\n                },\n                \"update_date\": \"2024-07-16T10:00:00\"\n            }\n        ],\n        \"total\": 1\n    }\n}\n```","operationId":"list_mcp_v1_mcp_server_list_post","security":[{"LoginManager":[]}],"parameters":[{"name":"keywords","in":"query","required":false,"schema":{"type":"string","description":"关键词搜索","default":"","title":"Keywords"},"description":"关键词搜索"},{"name":"page","in":"query","required":false,"schema":{"type":"integer","description":"页码","default":0,"title":"Page"},"description":"页码"},{"name":"page_size","in":"query","required":false,"schema":{"type":"integer","description":"每页数量","default":0,"title":"Page Size"},"description":"每页数量"},{"name":"orderby","in":"query","required":false,"schema":{"type":"string","description":"排序字段","default":"create_time","title":"Orderby"},"description":"排序字段"},{"name":"desc","in":"query","required":false,"schema":{"type":"boolean","description":"是否降序","default":true,"title":"Desc"},"description":"是否降序"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListMCPServerRequest"}}}},"responses":{"200":{"description":"成功获取MCP服务器列表","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/mcp_server/detail":{"get":{"tags":["mcp_server"],"summary":"获取MCP服务器详情","description":"### GET `/detail` 获取MCP服务器详情\n\n**功能描述**:\n此接口用于获取指定MCP服务器的详细信息。系统会验证用户对该MCP服务器的访问权限，\n确保用户只能查看有权限的MCP服务器详情，包括服务器的基本信息、配置参数和元数据。\n\n---\n### 请求参数 (Query Parameters)\n| 参数      | 类型     | 必填 | 描述               |\n|-----------|----------|------|--------------------|\n| `mcp_id`  | `string` | 是   | MCP服务器的唯一标识符 |\n\n**请求示例**:\n```\nGET /detail?mcp_id=uuid-server-id\n```\n\n---\n### 响应 (Response)\n#### 成功响应 (200)\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": {\n        \"id\": \"uuid-server-id\",\n        \"name\": \"智能客服MCP服务器\",\n        \"server_type\": \"http\",\n        \"url\": \"https://api.example.com/mcp\",\n        \"description\": \"用于客服场景的MCP服务器\",\n        \"variables\": {\n            \"api_key\": \"your-api-key\",\n            \"timeout\": 30\n        },\n        \"headers\": {\n            \"Content-Type\": \"application/json\"\n        },\n        \"tenant_id\": \"tenant-uuid\",\n        \"create_time\": \"2024-07-16T10:00:00\",\n        \"update_time\": \"2024-07-16T10:00:00\"\n    }\n}\n```\n\n#### 错误响应\n- **MCP服务器不存在**:\n```json\n{\n    \"retcode\": 404,\n    \"retmsg\": \"NOT_FOUND\",\n    \"data\": null\n}\n```","operationId":"detail_v1_mcp_server_detail_get","security":[{"LoginManager":[]}],"parameters":[{"name":"mcp_id","in":"query","required":true,"schema":{"type":"string","description":"MCP服务器ID","title":"Mcp Id"},"description":"MCP服务器ID"}],"responses":{"200":{"description":"成功获取MCP服务器详情","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/mcp_server/create":{"post":{"tags":["mcp_server"],"summary":"创建MCP服务器","description":"### POST `/create` 创建MCP服务器\n\n**功能描述**:\n此接口用于创建新的MCP服务器配置。用户可以通过提供服务器名称、类型、URL和其他配置信息来创建MCP服务器。\n系统会自动检查名称重复性、验证用户权限，并为MCP服务器分配唯一标识符。\n\n---\n### 请求体 (Request Body)\n| 字段          | 类型     | 必填 | 描述                                               |\n|---------------|----------|------|----------------------------------------------------|\n| `name`        | `string` | 是   | MCP服务器名称，不能为空，长度不能超过255字节        |\n| `server_type` | `string` | 是   | MCP服务器类型，必须是有效的MCP服务器类型           |\n| `url`         | `string` | 是   | MCP服务器的访问地址                                |\n| `description` | `string` | 否   | MCP服务器描述信息，用于说明服务器的用途和功能        |\n| `variables`   | `object` | 否   | MCP服务器变量配置，JSON格式                        |\n| `headers`     | `object` | 否   | 额外的HTTP请求头配置，JSON格式                      |\n\n**请求示例**:\n```json\n{\n    \"name\": \"智能客服MCP服务器\",\n    \"server_type\": \"http\",\n    \"url\": \"https://api.example.com/mcp\",\n    \"description\": \"用于客服场景的MCP服务器\",\n    \"variables\": {\n        \"api_key\": \"your-api-key\",\n        \"timeout\": 30\n    },\n    \"headers\": {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer token\"\n    }\n}\n```\n\n---\n### 响应 (Response)\n#### 成功响应 (200)\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": {\n        \"id\": \"uuid-generated-id\"\n    }\n}\n```\n\n#### 错误响应\n- **不支持的服务器类型**:\n```json\n{\n    \"retcode\": 400,\n    \"retmsg\": \"Unsupported MCP server type.\",\n    \"data\": null\n}\n```\n- **无效的服务器名称**:\n```json\n{\n    \"retcode\": 400,\n    \"retmsg\": \"Invalid MCP name or length is xxx which is large than 255.\",\n    \"data\": null\n}\n```\n- **租户未找到**:\n```json\n{\n    \"retcode\": 400,\n    \"retmsg\": \"Tenant not found.\",\n    \"data\": null\n}\n```","operationId":"create_v1_mcp_server_create_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateMCPServerRequest"}}},"required":true},"responses":{"200":{"description":"成功创建MCP服务器","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/mcp_server/update":{"post":{"tags":["mcp_server"],"summary":"更新MCP服务器","description":"### POST `/update` 更新MCP服务器\n\n**功能描述**:\n此接口用于更新现有的MCP服务器配置信息。支持更新服务器名称、类型、URL、描述和配置参数。\n系统会验证用户权限、检查服务器类型有效性，并合并配置参数，保留现有配置的同时应用新的设置。\n\n---\n### 请求体 (Request Body)\n| 字段          | 类型     | 必填 | 描述                                               |\n|---------------|----------|------|----------------------------------------------------|\n| `mcp_id`      | `string` | 是   | 要更新的MCP服务器ID                                |\n| `name`        | `string` | 否   | 新的MCP服务器名称                                  |\n| `server_type` | `string` | 否   | 新的MCP服务器类型                                  |\n| `url`         | `string` | 否   | 新的MCP服务器URL                                   |\n| `description` | `string` | 否   | 新的MCP服务器描述                                  |\n| `variables`   | `object` | 否   | 新的变量配置，会与现有配置合并                      |\n| `headers`     | `object` | 否   | 新的请求头配置，会与现有配置合并                    |\n\n**请求示例**:\n```json\n{\n    \"id\": \"uuid-server-id\",\n    \"name\": \"增强版智能客服MCP服务器\",\n    \"server_type\": \"websocket\",\n    \"url\": \"wss://api.example.com/mcp\",\n    \"description\": \"升级版的客服MCP服务器，支持WebSocket\",\n    \"variables\": {\n        \"api_key\": \"new-api-key\",\n        \"timeout\": 60\n    },\n    \"headers\": {\n        \"User-Agent\": \"MultiRAG/1.0\"\n    }\n}\n```\n\n---\n### 响应 (Response)\n#### 成功响应 (200)\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": {\n        \"id\": \"uuid-server-id\",\n        \"name\": \"增强版智能客服MCP服务器\",\n        \"server_type\": \"websocket\",\n        \"url\": \"wss://api.example.com/mcp\",\n        \"description\": \"升级版的客服MCP服务器，支持WebSocket\",\n        \"variables\": {\n            \"api_key\": \"new-api-key\",\n            \"timeout\": 60\n        },\n        \"headers\": {\n            \"Content-Type\": \"application/json\",\n            \"User-Agent\": \"MultiRAG/1.0\"\n        },\n        \"tenant_id\": \"tenant-uuid\",\n        \"create_time\": \"2024-07-16T10:00:00\",\n        \"update_time\": \"2024-07-16T11:30:00\"\n    }\n}\n```\n\n#### 错误响应\n- **更新失败**:\n```json\n{\n    \"retcode\": 400,\n    \"retmsg\": \"Failed to update MCP server.\",\n    \"data\": null\n}\n```\n- **服务器不存在**:\n```json\n{\n    \"retcode\": 400,\n    \"retmsg\": \"Failed to fetch updated MCP server.\",\n    \"data\": null\n}\n```","operationId":"update_v1_mcp_server_update_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateMCPServerRequest"}}},"required":true},"responses":{"200":{"description":"成功更新MCP服务器","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/mcp_server/get_multiple":{"post":{"tags":["mcp_server"],"summary":"批量获取MCP服务器","description":"### POST `/get_multiple` 批量获取MCP服务器\n\n**功能描述**:\n此接口用于根据ID列表批量获取MCP服务器详情。用户可以通过提供MCP服务器ID列表，\n一次性获取多个MCP服务器的详细信息。系统会验证用户对每个MCP服务器的访问权限。\n\n---\n### 请求体 (Request Body)\n| 字段      | 类型          | 必填 | 描述                     |\n|-----------|---------------|------|--------------------------|\n| `id_list` | `list[string]` | 是   | MCP服务器ID列表           |\n\n**请求示例**:\n```json\n{\n    \"id_list\": [\"uuid-server-id-1\", \"uuid-server-id-2\", \"uuid-server-id-3\"]\n}\n```\n\n---\n### 响应 (Response)\n#### 成功响应 (200)\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": [\n        {\n            \"id\": \"uuid-server-id-1\",\n            \"name\": \"智能客服MCP服务器\",\n            \"server_type\": \"http\",\n            \"url\": \"https://api.example.com/mcp\",\n            \"description\": \"用于客服场景的MCP服务器\",\n            \"variables\": {\n                \"timeout\": 30\n            },\n            \"update_date\": \"2024-07-16T10:00:00\"\n        }\n    ]\n}\n```","operationId":"get_multiple_v1_mcp_server_get_multiple_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetMultipleMCPServerRequest"}}},"required":true},"responses":{"200":{"description":"成功批量获取MCP服务器","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/mcp_server/rm":{"post":{"tags":["mcp_server"],"summary":"删除MCP服务器","description":"### POST `/rm` 删除MCP服务器\n\n**功能描述**:\n此接口用于删除指定的MCP服务器。执行的是软删除操作，即将MCP服务器状态标记为已删除，\n而不是物理删除数据。系统会验证用户对该MCP服务器的删除权限，确保只有授权用户才能执行删除操作。\n\n---\n### 请求体 (Request Body)\n| 字段      | 类型          | 必填 | 描述                     |\n|-----------|---------------|------|--------------------------|\n| `mcp_ids` | `list[string]` | 是   | 要删除的MCP服务器ID列表   |\n\n**请求示例**:\n```json\n{\n    \"mcp_ids\": [\"uuid-server-id-1\", \"uuid-server-id-2\"]\n}\n```\n\n---\n### 响应 (Response)\n#### 成功响应 (200)\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": true\n}\n```\n\n#### 错误响应\n- **删除失败**:\n```json\n{\n    \"retcode\": 400,\n    \"retmsg\": \"Failed to delete MCP servers ['uuid-server-id-1', 'uuid-server-id-2']\",\n    \"data\": null\n}\n```","operationId":"rm_v1_mcp_server_rm_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RemoveMCPServerRequest"}}},"required":true},"responses":{"200":{"description":"成功删除MCP服务器","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/mcp_server/import":{"post":{"tags":["mcp_server"],"summary":"批量导入MCP服务器","description":"### POST `/import` 批量导入MCP服务器\n\n**功能描述**:\n此接口用于批量导入多个MCP服务器配置。支持从外部配置文件或其他系统导入MCP服务器设置。\n系统会自动处理重名冲突，确保每个导入的服务器都有唯一的名称。\n\n---\n### 请求体 (Request Body)\n| 字段         | 类型     | 必填 | 描述                             |\n|--------------|----------|------|----------------------------------|\n| `mcpServers` | `object` | 是   | MCP服务器配置对象，键为服务器名称 |\n\n**请求示例**:\n```json\n{\n    \"mcpServers\": {\n        \"客服MCP服务器\": {\n            \"type\": \"http\",\n            \"url\": \"https://api.example.com/mcp\",\n            \"authorization_token\": \"token123\",\n            \"tool_configuration\": {\n                \"timeout\": 30\n            }\n        },\n        \"知识库MCP服务器\": {\n            \"type\": \"websocket\",\n            \"url\": \"wss://kb.example.com/mcp\",\n            \"authorization_token\": \"token456\",\n            \"tool_configuration\": {\n                \"max_connections\": 10\n            }\n        }\n    }\n}\n```\n\n---\n### 响应 (Response)\n#### 成功响应 (200)\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": {\n        \"results\": [\n            {\n                \"server\": \"客服MCP服务器\",\n                \"success\": true,\n                \"action\": \"created\",\n                \"id\": \"uuid-generated-id-1\",\n                \"new_name\": \"客服MCP服务器\"\n            },\n            {\n                \"server\": \"知识库MCP服务器\",\n                \"success\": true,\n                \"action\": \"created\",\n                \"id\": \"uuid-generated-id-2\",\n                \"new_name\": \"知识库MCP服务器_0\",\n                \"message\": \"Renamed from '知识库MCP服务器' to avoid duplication\"\n            }\n        ]\n    }\n}\n```","operationId":"import_multiple_v1_mcp_server_import_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ImportMCPServerRequest"}}},"required":true},"responses":{"200":{"description":"成功批量导入MCP服务器","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/mcp_server/export":{"post":{"tags":["mcp_server"],"summary":"批量导出MCP服务器","description":"### POST `/export` 批量导出MCP服务器\n\n**功能描述**:\n此接口用于批量导出指定的MCP服务器配置。用户可以将MCP服务器配置导出为标准格式，\n便于备份、迁移或与其他系统集成。导出的配置包含服务器的所有关键信息。\n\n---\n### 请求体 (Request Body)\n| 字段      | 类型          | 必填 | 描述                     |\n|-----------|---------------|------|--------------------------|\n| `mcp_ids` | `list[string]` | 是   | 要导出的MCP服务器ID列表   |\n\n**请求示例**:\n```json\n{\n    \"mcp_ids\": [\"uuid-server-id-1\", \"uuid-server-id-2\"]\n}\n```\n\n---\n### 响应 (Response)\n#### 成功响应 (200)\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": {\n        \"mcpServers\": {\n            \"智能客服MCP服务器\": {\n                \"type\": \"http\",\n                \"url\": \"https://api.example.com/mcp\",\n                \"name\": \"智能客服MCP服务器\",\n                \"authorization_token\": \"token123\",\n                \"tool_configuration\": {\n                    \"timeout\": 30\n                }\n            },\n            \"知识库MCP服务器\": {\n                \"type\": \"websocket\",\n                \"url\": \"wss://kb.example.com/mcp\",\n                \"name\": \"知识库MCP服务器\",\n                \"authorization_token\": \"token456\",\n                \"tool_configuration\": {\n                    \"max_connections\": 10\n                }\n            }\n        }\n    }\n}\n```\n\n#### 错误响应\n- **无MCP服务器ID**:\n```json\n{\n    \"retcode\": 400,\n    \"retmsg\": \"No MCP server IDs provided.\",\n    \"data\": null\n}\n```","operationId":"export_multiple_v1_mcp_server_export_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExportMCPServerRequest"}}},"required":true},"responses":{"200":{"description":"成功批量导出MCP服务器","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/mcp_server/list_tools":{"post":{"tags":["mcp_server"],"summary":"获取MCP服务器工具列表","description":"### POST `/list_tools` 获取MCP服务器工具列表\n\n**功能描述**:\n此接口用于获取指定MCP服务器的工具列表。通过连接到MCP服务器并查询其可用工具，\n返回每个工具的详细信息，包括工具名称、描述、参数等。支持批量查询多个MCP服务器的工具。\n\n---\n### 请求体 (Request Body)\n| 字段      | 类型          | 必填 | 描述                         |\n|-----------|---------------|------|------------------------------|\n| `mcp_ids` | `list[string]` | 是   | MCP服务器ID列表               |\n| `timeout` | `float`       | 否   | 连接超时时间（秒），默认10.0   |\n\n**请求示例**:\n```json\n{\n    \"mcp_ids\": [\"uuid-server-id-1\", \"uuid-server-id-2\"],\n    \"timeout\": 15.0\n}\n```\n\n---\n### 响应 (Response)\n#### 成功响应 (200)\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": {\n        \"uuid-server-id-1\": [\n            {\n                \"name\": \"search_web\",\n                \"description\": \"Search the web for information\",\n                \"inputSchema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"query\": {\n                            \"type\": \"string\",\n                            \"description\": \"Search query\"\n                        }\n                    },\n                    \"required\": [\"query\"]\n                }\n            },\n            {\n                \"name\": \"get_weather\",\n                \"description\": \"Get weather information\",\n                \"inputSchema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"location\": {\n                            \"type\": \"string\",\n                            \"description\": \"Location to get weather for\"\n                        }\n                    },\n                    \"required\": [\"location\"]\n                }\n            }\n        ],\n        \"uuid-server-id-2\": [\n            {\n                \"name\": \"translate_text\",\n                \"description\": \"Translate text between languages\",\n                \"inputSchema\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"text\": {\n                            \"type\": \"string\",\n                            \"description\": \"Text to translate\"\n                        },\n                        \"target_language\": {\n                            \"type\": \"string\",\n                            \"description\": \"Target language code\"\n                        }\n                    },\n                    \"required\": [\"text\", \"target_language\"]\n                }\n            }\n        ]\n    }\n}\n```\n\n#### 错误响应\n- **无MCP服务器ID**:\n```json\n{\n    \"retcode\": 400,\n    \"retmsg\": \"No MCP server IDs provided.\",\n    \"data\": null\n}\n```\n- **连接超时**:\n```json\n{\n    \"retcode\": 500,\n    \"retmsg\": \"Connection timeout or server error\",\n    \"data\": null\n}\n```\n\n---\n### 主要流程\n1. 验证请求参数，确保提供了MCP服务器ID列表\n2. 遍历每个MCP服务器ID，验证用户权限\n3. 为每个有效的MCP服务器创建工具调用会话\n4. 并行查询所有MCP服务器的工具列表\n5. 关闭所有会话连接并返回结果\n\n---\n### 注意事项\n- **权限验证**: 只能查询用户有权限的MCP服务器工具\n- **超时设置**: 建议根据网络状况调整timeout参数\n- **资源管理**: 系统会自动关闭MCP连接，避免资源泄漏\n- **批量处理**: 支持同时查询多个MCP服务器的工具\n- **错误处理**: 单个服务器连接失败不会影响其他服务器的查询","operationId":"list_tools_v1_mcp_server_list_tools_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListToolsRequest"}}},"required":true},"responses":{"200":{"description":"成功获取MCP服务器工具列表","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/mcp_server/test_tool":{"post":{"tags":["mcp_server"],"summary":"测试MCP工具","description":"### POST `/test_tool` 测试MCP工具\n\n**功能描述**:\n此接口用于测试指定MCP服务器的特定工具。通过连接到MCP服务器并调用指定工具，\n返回工具执行结果。主要用于验证工具功能、调试工具参数或演示工具能力。\n\n---\n### 请求体 (Request Body)\n| 字段        | 类型     | 必填 | 描述                         |\n|-------------|----------|------|------------------------------|\n| `mcp_id`    | `string` | 是   | MCP服务器ID                   |\n| `tool_name` | `string` | 是   | 要测试的工具名称               |\n| `arguments` | `object` | 是   | 工具参数，JSON对象格式         |\n| `timeout`   | `float`  | 否   | 执行超时时间（秒），默认10.0   |\n\n**请求示例**:\n```json\n{\n    \"mcp_id\": \"uuid-server-id\",\n    \"tool_name\": \"search_web\",\n    \"arguments\": {\n        \"query\": \"Claude AI assistant\",\n        \"max_results\": 5\n    },\n    \"timeout\": 30.0\n}\n```\n\n---\n### 响应 (Response)\n#### 成功响应 (200)\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": {\n        \"content\": [\n            {\n                \"type\": \"text\",\n                \"text\": \"Found 5 results for 'Claude AI assistant':\\n\\n1. Claude - Anthropic's AI Assistant\\n   Description: Claude is an AI assistant created by Anthropic...\\n   URL: https://claude.ai\\n\\n2. Introduction to Claude AI\\n   Description: Learn about Claude's capabilities...\\n   URL: https://docs.anthropic.com\"\n            }\n        ],\n        \"isError\": false\n    }\n}\n```\n\n#### 错误响应\n- **无MCP服务器ID**:\n```json\n{\n    \"retcode\": 400,\n    \"retmsg\": \"No MCP server ID provided.\",\n    \"data\": null\n}\n```\n- **缺少工具信息**:\n```json\n{\n    \"retcode\": 400,\n    \"retmsg\": \"Require provide tool name and arguments.\",\n    \"data\": null\n}\n```\n- **服务器未找到**:\n```json\n{\n    \"retcode\": 400,\n    \"retmsg\": \"Cannot find MCP server uuid-server-id for user user-id\",\n    \"data\": null\n}\n```\n- **工具执行失败**:\n```json\n{\n    \"retcode\": 500,\n    \"retmsg\": \"Tool execution failed\",\n    \"data\": {\n        \"content\": [\n            {\n                \"type\": \"text\",\n                \"text\": \"Error: Invalid parameters provided to tool\"\n            }\n        ],\n        \"isError\": true\n    }\n}\n```\n\n---\n### 主要流程\n1. 验证请求参数，确保提供了必要的工具信息\n2. 查找指定的MCP服务器，验证用户权限\n3. 创建MCP工具调用会话\n4. 执行指定工具并传入参数\n5. 关闭会话连接并返回执行结果\n\n---\n### 注意事项\n- **权限验证**: 只能测试用户有权限的MCP服务器工具\n- **参数验证**: 工具参数必须符合工具定义的schema\n- **超时设置**: 建议根据工具复杂度调整timeout参数\n- **错误处理**: 工具执行错误会在响应中标明isError状态\n- **资源管理**: 系统会自动关闭MCP连接\n- **安全性**: 工具执行在受控环境中，但仍需注意参数安全","operationId":"test_tool_v1_mcp_server_test_tool_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TestToolRequest"}}},"required":true},"responses":{"200":{"description":"成功测试MCP工具","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/mcp_server/cache_tools":{"post":{"tags":["mcp_server"],"summary":"缓存MCP工具配置","description":"### POST `/cache_tools` 缓存MCP工具配置\n\n**功能描述**:\n此接口用于缓存MCP服务器的工具配置信息。将工具列表保存到MCP服务器的variables中，\n用于后续快速访问工具信息，避免重复查询MCP服务器。支持工具的启用/禁用状态管理。\n\n---\n### 请求体 (Request Body)\n| 字段      | 类型          | 必填 | 描述                           |\n|-----------|---------------|------|--------------------------------|\n| `mcp_id`  | `string`      | 是   | MCP服务器ID                     |\n| `tools`   | `list[object]` | 是   | 工具列表，每个工具包含name字段   |\n\n**请求示例**:\n```json\n{\n    \"mcp_id\": \"uuid-server-id\",\n    \"tools\": [\n        {\n            \"name\": \"search_web\",\n            \"description\": \"Search the web for information\",\n            \"enabled\": true,\n            \"inputSchema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"query\": {\n                        \"type\": \"string\",\n                        \"description\": \"Search query\"\n                    }\n                },\n                \"required\": [\"query\"]\n            }\n        },\n        {\n            \"name\": \"get_weather\",\n            \"description\": \"Get weather information\",\n            \"enabled\": false,\n            \"inputSchema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"location\": {\n                        \"type\": \"string\",\n                        \"description\": \"Location to get weather for\"\n                    }\n                },\n                \"required\": [\"location\"]\n            }\n        }\n    ]\n}\n```\n\n---\n### 响应 (Response)\n#### 成功响应 (200)\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": {\n        \"search_web\": {\n            \"name\": \"search_web\",\n            \"description\": \"Search the web for information\",\n            \"enabled\": true,\n            \"inputSchema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"query\": {\n                        \"type\": \"string\",\n                        \"description\": \"Search query\"\n                    }\n                },\n                \"required\": [\"query\"]\n            }\n        },\n        \"get_weather\": {\n            \"name\": \"get_weather\",\n            \"description\": \"Get weather information\",\n            \"enabled\": false,\n            \"inputSchema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"location\": {\n                        \"type\": \"string\",\n                        \"description\": \"Location to get weather for\"\n                    }\n                },\n                \"required\": [\"location\"]\n            }\n        }\n    }\n}\n```\n\n#### 错误响应\n- **无MCP服务器ID**:\n```json\n{\n    \"retcode\": 400,\n    \"retmsg\": \"No MCP server ID provided.\",\n    \"data\": null\n}\n```\n- **服务器未找到**:\n```json\n{\n    \"retcode\": 400,\n    \"retmsg\": \"Cannot find MCP server uuid-server-id for user user-id\",\n    \"data\": null\n}\n```\n- **更新失败**:\n```json\n{\n    \"retcode\": 400,\n    \"retmsg\": \"Failed to update MCP server.\",\n    \"data\": null\n}\n```\n\n---\n### 主要流程\n1. 验证请求参数，确保提供了MCP服务器ID和工具列表\n2. 查找指定的MCP服务器，验证用户权限\n3. 将工具列表转换为以工具名称为键的字典格式\n4. 更新MCP服务器的variables字段，保存工具缓存\n5. 返回缓存的工具配置信息\n\n---\n### 注意事项\n- **权限验证**: 只能缓存用户有权限的MCP服务器工具\n- **数据格式**: 工具列表会被转换为字典格式存储\n- **数据持久化**: 缓存的工具信息会保存到数据库中\n- **配置合并**: 工具缓存会与现有variables合并\n- **性能优化**: 缓存可以减少对MCP服务器的重复查询\n- **状态管理**: 支持工具的启用/禁用状态配置","operationId":"cache_tools_v1_mcp_server_cache_tools_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CacheToolsRequest"}}},"required":true},"responses":{"200":{"description":"成功缓存MCP工具配置","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/mcp_server/test_mcp":{"post":{"tags":["mcp_server"],"summary":"测试MCP连接","description":"### POST `/test_mcp` 测试MCP连接\n\n**功能描述**:\n此接口用于测试MCP服务器连接，验证配置是否正确。不会将MCP服务器信息保存到数据库中，\n仅用于连接测试和工具获取验证。支持各种MCP服务器类型的连接测试。\n\n---\n### 请求体 (Request Body)\n| 字段          | 类型     | 必填 | 描述                                     |\n|---------------|----------|------|------------------------------------------|\n| `url`         | `string` | 是   | MCP服务器的URL地址                       |\n| `server_type` | `string` | 是   | MCP服务器类型                            |\n| `timeout`     | `float`  | 否   | 连接超时时间（秒），默认10.0             |\n| `headers`     | `object` | 否   | 连接头部信息                             |\n| `variables`   | `object` | 否   | 环境变量配置                             |\n\n**请求示例**:\n```json\n{\n    \"url\": \"http://localhost:8080\",\n    \"server_type\": \"stdio\",\n    \"timeout\": 15.0,\n    \"headers\": {\n        \"Authorization\": \"Bearer token123\"\n    },\n    \"variables\": {\n        \"ENV\": \"test\"\n    }\n}\n```\n\n---\n### 响应 (Response)\n#### 成功响应 (200)\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": [\n        {\n            \"name\": \"tool1\",\n            \"description\": \"Tool 1 description\",\n            \"inputSchema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"param1\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    ]\n}\n```\n\n#### 错误响应\n- **连接失败**:\n```json\n{\n    \"retcode\": 400,\n    \"retmsg\": \"MCP list tools error: Connection timeout\",\n    \"data\": null\n}\n```\n\n---\n### 主要流程\n1. 验证请求参数的有效性\n2. 创建临时的MCP服务器实例（不保存到数据库）\n3. 使用MCPToolCallSession建立连接\n4. 尝试获取可用工具列表\n5. 返回工具列表信息\n\n---\n### 注意事项\n- **临时连接**: 测试连接不会保存服务器信息到数据库\n- **超时设置**: 建议设置合理的超时时间避免长时间等待\n- **资源清理**: 连接测试完成后会自动清理资源\n- **错误处理**: 提供详细的错误信息便于调试","operationId":"test_mcp_v1_mcp_server_test_mcp_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TestMCPRequest"}}},"required":true},"responses":{"200":{"description":"成功测试MCP连接","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/file2document/convert":{"post":{"tags":["file2document"],"summary":"转换文件","description":"转换文件。\n\n参数:\n- kb_ids: 知识库ID列表。\n- file_ids: 文件ID列表。\n\n返回:\n- JSON: 文件转换结果的JSON响应。","operationId":"convert_v1_file2document_convert_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Body_convert_v1_file2document_convert_post"}}},"required":true},"responses":{"200":{"description":"成功转换文件","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/file2document/rm":{"post":{"tags":["file2document"],"summary":"删除文件","description":"删除文件。\n\n参数:\n- file_ids: 文件ID列表。\n\n返回:\n- JSON: 文件删除结果的JSON响应。","operationId":"rm_v1_file2document_rm_post","requestBody":{"content":{"application/json":{"schema":{"items":{"type":"string"},"type":"array","title":"File Ids"}}},"required":true},"responses":{"200":{"description":"成功删除文件","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/guard_dimension/create":{"post":{"tags":["guard_dimension"],"summary":"创建检测维度","description":"创建检测维度\n\nArgs:\n    request: 创建维度请求参数\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 创建结果","operationId":"create_dimension_v1_guard_dimension_create_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateDimensionRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Create Dimension V1 Guard Dimension Create Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/guard_dimension/list":{"get":{"tags":["guard_dimension"],"summary":"获取维度列表","description":"获取维度列表\n\nArgs:\n    enabled_only: 是否只返回启用的维度\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 维度列表","operationId":"list_dimensions_v1_guard_dimension_list_get","security":[{"LoginManager":[]}],"parameters":[{"name":"enabled_only","in":"query","required":false,"schema":{"type":"boolean","default":false,"title":"Enabled Only"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response List Dimensions V1 Guard Dimension List Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/guard_dimension/update":{"put":{"tags":["guard_dimension"],"summary":"更新检测维度","description":"更新检测维度\n\nArgs:\n    request: 更新维度请求参数\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 更新结果","operationId":"update_dimension_v1_guard_dimension_update_put","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateDimensionRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Update Dimension V1 Guard Dimension Update Put"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/guard_dimension/{dimension_id}":{"delete":{"tags":["guard_dimension"],"summary":"删除检测维度","description":"删除检测维度\n\nArgs:\n    dimension_id: 维度ID\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 删除结果","operationId":"delete_dimension_v1_guard_dimension__dimension_id__delete","security":[{"LoginManager":[]}],"parameters":[{"name":"dimension_id","in":"path","required":true,"schema":{"type":"string","title":"Dimension Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Delete Dimension V1 Guard Dimension  Dimension Id  Delete"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/guard_dimension/stats":{"get":{"tags":["guard_dimension"],"summary":"获取维度统计","description":"获取维度统计信息\n\nArgs:\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 统计信息","operationId":"get_dimension_stats_v1_guard_dimension_stats_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Dimension Stats V1 Guard Dimension Stats Get"}}}}},"security":[{"LoginManager":[]}]}},"/v1/guard_dimension/init":{"post":{"tags":["guard_dimension"],"summary":"初始化默认维度","description":"初始化默认维度\n\nArgs:\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 初始化结果","operationId":"init_default_dimensions_v1_guard_dimension_init_post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Init Default Dimensions V1 Guard Dimension Init Post"}}}}},"security":[{"LoginManager":[]}]}},"/v1/workflow_v2/run":{"post":{"tags":["workflow_v2"],"summary":"Run","operationId":"run_v1_workflow_v2_run_post","requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_run_v1_workflow_v2_run_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/workflow_v2/component-run":{"post":{"tags":["workflow_v2"],"summary":"Component Run","operationId":"component_run_v1_workflow_v2_component_run_post","requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_component_run_v1_workflow_v2_component_run_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/workflow_v2/workflow/events/{workflow_id}":{"get":{"tags":["workflow_v2"],"summary":"Workflow Events","description":"SSE端点，用于接收工作流状态更新\n\nArgs:\n    workflow_id: 工作流ID\n    request: FastAPI请求对象\n\nReturns:\n    EventSourceResponse: SSE事件流","operationId":"workflow_events_v1_workflow_v2_workflow_events__workflow_id__get","parameters":[{"name":"workflow_id","in":"path","required":true,"schema":{"type":"string","title":"Workflow Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/ai_translate/ai-translate":{"post":{"tags":["ai_translate"],"summary":"翻译中文文本","description":"AI翻译接口\n\n此接口接收中文文本和指定的语言模型名称，返回对应的英文翻译。\n\n参数:\n- body: AITranslateReqBody\n  - zh_text: 待翻译的中文文本\n  - llm_name: 使用的语言模型名称\n- db: 数据库会话，由FastAPI依赖注入\n- user: 当前用户，由FastAPI依赖注入\n\n返回:\n- ResponseSchema对象，包含:\n  - status: 操作状态（成功/失败）\n  - data: 包含原中文文本和翻译后的英文文本","operationId":"ai_translate_v1_ai_translate_ai_translate_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AITranslateReqBody"}}},"required":true},"responses":{"200":{"description":"成功返回英文翻译结果","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/ai_translate/ai-batch-translate":{"post":{"tags":["ai_translate"],"summary":"批量翻译中文文本","description":"AI批量翻译接口\n\n此接口接收多个中文文本和指定的语言模型名称，返回对应的英文翻译列表。\n\n参数:\n- body: AIBatchTranslateReqBody\n  - zh_text_list: 待翻译的中文文本列表\n  - llm_name: 使用的语言模型名称\n- db: 数据库会话，由FastAPI依赖注入\n- user: 当前用户，由FastAPI依赖注入\n\n返回:\n- ResponseSchema对象，包含:\n  - status: 操作状态（成功/失败）\n  - data: 包含原中文文本列表和翻译后的英文文本列表","operationId":"ai_translate_v1_ai_translate_ai_batch_translate_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AIBatchTranslateReqBody"}}},"required":true},"responses":{"200":{"description":"成功返回英文翻译结果列表","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/user/login/channels":{"get":{"tags":["user"],"summary":"获取登录渠道","description":"获取所有支持的认证渠道\n\n该接口用于获取系统支持的所有OAuth登录渠道信息。\n\n返回:\n- 成功时返回包含所有渠道信息的JSON结果\n- 失败时返回错误信息","operationId":"get_login_channels_v1_user_login_channels_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/v1/user/login":{"post":{"tags":["user"],"summary":"登录","description":"登录\n\n该接口用于用户登录。\n\n参数:\n- request: LoginRequest对象，包含用户的登录信息\n    - username: str 用户名，通常是用户的电子邮件地址\n    - password: str 用户的密码\n\n返回:\n- 成功时返回包含访问令牌和用户信息的JSON结果\n- 失败时返回错误信息","operationId":"login_v1_user_login_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/user/github_callback":{"get":{"tags":["user"],"summary":"GitHub 回调","description":"**Deprecated**, Use `/oauth/callback/<channel>` instead.\n\nGitHub 回调\n\n该接口用于处理GitHub OAuth登录回调。\n\n参数:\n- code: str 从GitHub获取的授权码\n\n返回:\n- 成功时返回包含访问令牌的JSON结果\n- 失败时返回错误信息","operationId":"github_callback_v1_user_github_callback_get","parameters":[{"name":"code","in":"query","required":true,"schema":{"type":"string","title":"Code"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/user/feishu_callback":{"get":{"tags":["user"],"summary":"飞书回调","description":"飞书回调\n\n该接口用于处理飞书OAuth登录回调。\n\n参数:\n- code: str 从飞书获取的授权码\n\n返回:\n- 成功时返回包含访问令牌的JSON结果\n- 失败时返回错误信息","operationId":"feishu_callback_v1_user_feishu_callback_get","parameters":[{"name":"code","in":"query","required":true,"schema":{"type":"string","title":"Code"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/user/logout":{"get":{"tags":["user"],"summary":"退出登录","description":"退出登录\n\n该接口用于用户退出登录。\n\n返回:\n- 成功时返回成功退出的JSON结果","operationId":"log_out_v1_user_logout_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}},"security":[{"LoginManager":[]}]}},"/v1/user/login/{channel}":{"get":{"tags":["user"],"summary":"OAuth登录入口","description":"OAuth登录入口\n\n该接口用于启动指定渠道的OAuth登录流程。\n\n参数:\n- channel: str OAuth渠道名称（如github、feishu等）\n\n返回:\n- 重定向到OAuth授权页面","operationId":"oauth_login_v1_user_login__channel__get","parameters":[{"name":"channel","in":"path","required":true,"schema":{"type":"string","title":"Channel"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/user/oauth/callback/{channel}":{"get":{"tags":["user"],"summary":"OAuth回调处理","description":"OAuth回调处理\n\n该接口用于处理各种OAuth/OIDC渠道的回调，动态处理不同渠道的认证流程。\n\n参数:\n- channel: str OAuth渠道名称\n- code: str 从OAuth提供商获取的授权码\n- state: str 可选的状态参数，用于防止CSRF攻击\n\n返回:\n- 成功时重定向到主页并携带认证信息\n- 失败时重定向到错误页面","operationId":"oauth_callback_v1_user_oauth_callback__channel__get","parameters":[{"name":"channel","in":"path","required":true,"schema":{"type":"string","title":"Channel"}},{"name":"code","in":"query","required":true,"schema":{"type":"string","title":"Code"}},{"name":"state","in":"query","required":false,"schema":{"type":"string","title":"State"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/user/setting":{"post":{"tags":["user"],"summary":"设置用户信息","description":"**功能描述**:\n此接口用于更新用户的个人信息，如密码、邮箱、状态等字段。用户可以通过此接口更新自身信息，密码更新时需验证旧密码。\n\n### 请求体 (Request Body):\n- **UserUpdateRequest (模型)**: 包含以下字段：\n    - `password` (str, 可选): 用户的旧密码，用于验证身份。\n    - `new_password` (str, 可选): 用户的新密码，需在验证旧密码后才能更新。\n    - `email` (str, 可选): 用户的电子邮件地址，用于更新联系信息。\n    - `status` (str, 可选): 用户的账户状态，例如激活或停用。\n    - `is_superuser` (bool, 可选): 标识用户是否为超级用户。\n    - `login_channel` (str, 可选): 用户使用的登录渠道，例如电子邮件、Google等。\n\n### 响应 (Response):\n- **成功响应 (200)**:\n    - `data` (bool): 表示更新操作是否成功。\n    - `retcode` (int): 响应码，成功时为200，失败时为其他错误码。\n    - `retmsg` (str): 响应信息，如操作成功或失败时的详细说明。\n\n### 错误响应:\n- **401: Authentication Error**:\n    - 当用户提供的旧密码验证失败时，返回此错误。\n- **500: Update Failure**:\n    - 当更新操作失败时，返回此错误，具体错误信息会记录在日志中。\n\n### 主要流程:\n1. 从请求体中提取用户提供的信息（如旧密码、新密码、邮箱等）。\n2. 如果提供了旧密码，首先进行密码验证，验证通过后才能进行新密码更新。\n3. 过滤允许更新的字段，并构建更新字典。\n4. 调用数据库服务更新用户信息，如果更新成功则返回成功响应，否则返回失败响应。\n\n### 注意事项:\n- **密码更新逻辑**:\n    - 系统会先验证用户输入的旧密码，只有在验证通过的情况下才能更新为新密码。新密码会通过加密后存储。\n- **允许更新的字段**:\n    - 只有在预定义的允许更新字段列表中的字段才能被更新，确保系统的安全性和一致性。\n    - 允许更新的字段包括 `password`, `email`, `status`, `is_superuser`, `login_channel` 等。\n- **异常处理**:\n    - 如果更新操作失败，会记录异常信息并返回通用的失败响应，防止敏感信息泄露。","operationId":"setting_user_v1_user_setting_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserUpdateRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/user/info":{"get":{"tags":["user"],"summary":"获取用户信息","description":"获取用户信息\n\n该接口用于获取当前登录用户的信息。\n\n返回:\n- 成功时返回包含用户信息的JSON结果","operationId":"user_profile_v1_user_info_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}},"security":[{"LoginManager":[]}]}},"/v1/user/register":{"post":{"tags":["user"],"summary":"注册用户","description":"注册用户\n\n该接口用于注册新用户。\n\n参数:\n- request: RegisterRequest对象，包含用户的注册信息\n    - email: str 用户的电子邮件地址\n    - nickname: str 用户的昵称\n    - password: str 用户的密码\n\n返回:\n- 成功时返回包含访问令牌和用户信息的JSON结果\n- 失败时返回错误信息","operationId":"user_add_v1_user_register_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegisterRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/user/tenant_info":{"get":{"tags":["user"],"summary":"获取租户信息","description":"获取租户信息\n\n该接口用于获取当前登录用户的租户信息。\n\n返回:\n- 成功时返回包含租户信息的JSON结果","operationId":"tenant_info_v1_user_tenant_info_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}},"security":[{"LoginManager":[]}]}},"/v1/user/set_tenant_info":{"post":{"tags":["user"],"summary":"设置租户信息","description":"设置租户信息\n\n该接口用于更新租户信息。\n\n参数:\n- request: SetTenantInfoRequest对象，包含租户的更新信息\n    - tenant_id: str 租户的唯一标识符\n    - name: Optional[str] 租户的名称\n    - llm_id: Optional[str] 大语言模型的ID\n    - embd_id: Optional[str] 嵌入模型的ID\n    - asr_id: Optional[str] 语音识别模型的ID\n    - img2txt_id: Optional[str] 图像转文本模型的ID\n    - rerank_id: Optional[str] 重新排序模型的ID\n    - tts_id: Optional[str] 文本转语音模型的ID\n\n返回:\n- 成功时返回更新成功的JSON结果\n- 失败时返回错误信息","operationId":"set_tenant_info_v1_user_set_tenant_info_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SetTenantInfoRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/tenant/list":{"get":{"tags":["tenant"],"summary":"获取租户列表","description":"获取当前用户关联的租户列表。\n\n此接口返回用户为成员的租户列表，以及距离上次更新的时间差。\n\n返回:\n    JSON 响应，其中包含租户列表以及每个租户距离上次更新的时间差（秒）。","operationId":"tenant_list_v1_tenant_list_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Tenant List V1 Tenant List Get"}}}}},"security":[{"LoginManager":[]}]}},"/v1/tenant/<tenant_id>/user/list":{"get":{"tags":["tenant"],"summary":"获取租户下用户列表","description":"获取特定租户下的用户列表。\n\n参数:\n   - tenant_id (str): 租户 ID。\n\n返回:\n    JSON 响应，其中包含租户下的用户列表，以及每个用户距离上次更新的时间差（秒）。","operationId":"user_list_v1_tenant__tenant_id__user_list_get","security":[{"LoginManager":[]}],"parameters":[{"name":"tenant_id","in":"query","required":true,"schema":{"title":"Tenant Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response User List V1 Tenant  Tenant Id  User List Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/tenant/<tenant_id>/user":{"post":{"tags":["tenant"],"summary":"新增租户下用户","description":"添加新用户到指定租户。\n\n此接口根据用户邮箱添加用户到租户中。如果用户未找到或已是团队成员，将返回相应提示信息。\n\n参数:\n   - tenant_id (str): 租户 ID。\n   - email (str): 要添加的用户邮箱。\n\n返回:\n    JSON 响应，其中包含成功添加的用户信息。","operationId":"create_v1_tenant__tenant_id__user_post","security":[{"LoginManager":[]}],"parameters":[{"name":"tenant_id","in":"query","required":true,"schema":{"title":"Tenant Id"}},{"name":"email","in":"query","required":true,"schema":{"title":"Email"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Create V1 Tenant  Tenant Id  User Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/tenant/<tenant_id>/user/<user_id>":{"delete":{"tags":["tenant"],"summary":"删除租户下用户","description":"从租户中删除指定用户。\n\n此接口从指定租户中删除指定用户。\n\n参数:\n   - tenant_id (str): 租户 ID。\n   - user_id (str): 要删除的用户 ID。\n\n返回:\n    JSON 响应，指示操作是否成功。","operationId":"rm_v1_tenant__tenant_id__user__user_id__delete","security":[{"LoginManager":[]}],"parameters":[{"name":"tenant_id","in":"query","required":true,"schema":{"title":"Tenant Id"}},{"name":"user_id","in":"query","required":true,"schema":{"title":"User Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Rm V1 Tenant  Tenant Id  User  User Id  Delete"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/tenant/agree/<tenant_id>":{"put":{"tags":["tenant"],"summary":"同意加入租户","description":"同意加入租户。\n\n此接口用于用户接受加入租户的邀请。\n\n参数:\n   - tenant_id (str): 要加入的租户 ID。\n\n返回:\n    JSON 响应，指示操作是否成功。","operationId":"agree_v1_tenant_agree__tenant_id__put","security":[{"LoginManager":[]}],"parameters":[{"name":"tenant_id","in":"query","required":true,"schema":{"title":"Tenant Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Agree V1 Tenant Agree  Tenant Id  Put"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/plugin/run-plugin-script":{"post":{"tags":["plugin"],"summary":"运行插件脚本","operationId":"run_plugin_script_v1_plugin_run_plugin_script_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RunPluginScriptRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/plugin/install-dep":{"post":{"tags":["plugin"],"summary":"安装插件依赖","operationId":"install_dep_v1_plugin_install_dep_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InstallDepRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/plugin/uninstall-dep":{"post":{"tags":["plugin"],"summary":"卸载插件依赖","operationId":"uninstall_dep_v1_plugin_uninstall_dep_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UninstallDepRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/plugin/llm_tools":{"get":{"tags":["plugin"],"summary":"获取LLM工具列表","operationId":"llm_tools_v1_plugin_llm_tools_get","responses":{"200":{"description":"成功获取LLM工具列表","content":{"application/json":{"schema":{}}}}},"security":[{"LoginManager":[]}]}},"/v1/guard_label/create":{"post":{"tags":["guard_label"],"summary":"创建检测标签","description":"创建检测标签\n\nArgs:\n    request: 创建标签请求参数\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 创建结果","operationId":"create_label_v1_guard_label_create_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateLabelRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Create Label V1 Guard Label Create Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/guard_label/list":{"get":{"tags":["guard_label"],"summary":"获取标签列表","description":"获取标签列表\n\nArgs:\n    dimension_id: 维度ID过滤\n    enabled_only: 是否只返回启用的标签\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 标签列表","operationId":"list_labels_v1_guard_label_list_get","security":[{"LoginManager":[]}],"parameters":[{"name":"dimension_id","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Dimension Id"}},{"name":"enabled_only","in":"query","required":false,"schema":{"type":"boolean","default":false,"title":"Enabled Only"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response List Labels V1 Guard Label List Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/guard_label/dimensions":{"get":{"tags":["guard_label"],"summary":"获取维度列表","description":"获取可用维度列表（用于标签创建）\n\nArgs:\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 维度列表","operationId":"get_dimensions_for_labels_v1_guard_label_dimensions_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Dimensions For Labels V1 Guard Label Dimensions Get"}}}}},"security":[{"LoginManager":[]}]}},"/v1/guard_label/update":{"put":{"tags":["guard_label"],"summary":"更新检测标签","description":"更新检测标签\n\nArgs:\n    request: 更新标签请求参数\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 更新结果","operationId":"update_label_v1_guard_label_update_put","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateLabelRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Update Label V1 Guard Label Update Put"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/guard_label/{label_id}":{"delete":{"tags":["guard_label"],"summary":"删除检测标签","description":"删除检测标签\n\nArgs:\n    label_id: 标签ID\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 删除结果","operationId":"delete_label_v1_guard_label__label_id__delete","security":[{"LoginManager":[]}],"parameters":[{"name":"label_id","in":"path","required":true,"schema":{"type":"string","title":"Label Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Delete Label V1 Guard Label  Label Id  Delete"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["guard_label"],"summary":"获取标签详情","description":"获取标签详情\n\nArgs:\n    label_id: 标签ID\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 标签详情","operationId":"get_label_detail_v1_guard_label__label_id__get","security":[{"LoginManager":[]}],"parameters":[{"name":"label_id","in":"path","required":true,"schema":{"type":"string","title":"Label Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Label Detail V1 Guard Label  Label Id  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/guard_label/stats":{"get":{"tags":["guard_label"],"summary":"获取标签统计","description":"获取标签统计信息\n\nArgs:\n    dimension_id: 维度ID过滤\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 统计信息","operationId":"get_label_stats_v1_guard_label_stats_get","security":[{"LoginManager":[]}],"parameters":[{"name":"dimension_id","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Dimension Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Label Stats V1 Guard Label Stats Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/guard_label/init":{"post":{"tags":["guard_label"],"summary":"初始化默认标签","description":"初始化默认标签\n\nArgs:\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 初始化结果","operationId":"init_default_labels_v1_guard_label_init_post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Init Default Labels V1 Guard Label Init Post"}}}}},"security":[{"LoginManager":[]}]}},"/v1/guard_label/batch/enable":{"post":{"tags":["guard_label"],"summary":"批量启用标签","description":"批量启用标签\n\nArgs:\n    label_ids: 标签ID列表\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 操作结果","operationId":"batch_enable_labels_v1_guard_label_batch_enable_post","requestBody":{"content":{"application/json":{"schema":{"items":{"type":"string"},"type":"array","title":"Label Ids"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Batch Enable Labels V1 Guard Label Batch Enable Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/guard_label/batch/disable":{"post":{"tags":["guard_label"],"summary":"批量禁用标签","description":"批量禁用标签\n\nArgs:\n    label_ids: 标签ID列表\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 操作结果","operationId":"batch_disable_labels_v1_guard_label_batch_disable_post","requestBody":{"content":{"application/json":{"schema":{"items":{"type":"string"},"type":"array","title":"Label Ids"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Batch Disable Labels V1 Guard Label Batch Disable Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/file/upload":{"post":{"tags":["file"],"summary":"上传文件","description":"上传文件。\n\n参数:\n- parent_id: 父文件夹ID。\n- files: 上传的文件列表。\n\n返回:\n- JSON: 上传文件结果的JSON响应。","operationId":"upload_v1_file_upload_post","security":[{"LoginManager":[]}],"parameters":[{"name":"parent_id","in":"query","required":true,"schema":{"type":"string","title":"Parent Id"}}],"requestBody":{"required":true,"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_upload_v1_file_upload_post"}}}},"responses":{"200":{"description":"成功上传文件","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/file/create":{"post":{"tags":["file"],"summary":"创建文件或文件夹","description":"创建文件或文件夹。\n\n参数:\n- request_body: 请求体，包含创建文件或文件夹的信息。\n\n返回:\n- JSON: 创建结果的JSON响应。","operationId":"create_v1_file_create_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateRequest"}}},"required":true},"responses":{"200":{"description":"成功创建文件或文件夹","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/file/list":{"get":{"tags":["file"],"summary":"列出文件或文件夹","description":"列出文件或文件夹。\n\n参数:\n- parent_id: 父文件夹ID。\n- keywords: 搜索关键字。\n- page: 页码。\n- page_size: 每页显示数量。\n- orderby: 排序字段。\n- desc: 是否降序排列。\n\n返回:\n- JSON: 列出结果的JSON响应。","operationId":"list_files_v1_file_list_get","security":[{"LoginManager":[]}],"parameters":[{"name":"parent_id","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Parent Id"}},{"name":"keywords","in":"query","required":false,"schema":{"type":"string","default":"","title":"Keywords"}},{"name":"page","in":"query","required":false,"schema":{"type":"integer","default":1,"title":"Page"}},{"name":"page_size","in":"query","required":false,"schema":{"type":"integer","default":15,"title":"Page Size"}},{"name":"orderby","in":"query","required":false,"schema":{"type":"string","default":"create_time","title":"Orderby"}},{"name":"desc","in":"query","required":false,"schema":{"type":"boolean","default":true,"title":"Desc"}}],"responses":{"200":{"description":"成功列出文件或文件夹","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/file/root_folder":{"get":{"tags":["file"],"summary":"获取根文件夹","description":"获取根文件夹。\n\n返回:\n- JSON: 根文件夹的JSON响应。","operationId":"get_root_folder_v1_file_root_folder_get","responses":{"200":{"description":"成功获取根文件夹","content":{"application/json":{"schema":{}}}}},"security":[{"LoginManager":[]}]}},"/v1/file/parent_folder":{"get":{"tags":["file"],"summary":"获取父文件夹","description":"获取父文件夹。\n\n参数:\n- file_id: 文件ID。\n\n返回:\n- JSON: 父文件夹的JSON响应。","operationId":"get_parent_folder_v1_file_parent_folder_get","security":[{"LoginManager":[]}],"parameters":[{"name":"file_id","in":"query","required":true,"schema":{"type":"string","title":"File Id"}}],"responses":{"200":{"description":"成功获取父文件夹","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/file/all_parent_folder":{"get":{"tags":["file"],"summary":"获取所有父文件夹","description":"获取所有父文件夹。\n\n参数:\n- file_id: 文件ID。\n\n返回:\n- JSON: 所有父文件夹的JSON响应。","operationId":"get_all_parent_folders_v1_file_all_parent_folder_get","security":[{"LoginManager":[]}],"parameters":[{"name":"file_id","in":"query","required":true,"schema":{"type":"string","title":"File Id"}}],"responses":{"200":{"description":"成功获取所有父文件夹","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/file/rm":{"post":{"tags":["file"],"summary":"删除文件或文件夹","description":"删除文件或文件夹。\n\n参数:\n- request_body: 请求体，包含删除文件或文件夹的信息。\n\n返回:\n- JSON: 删除结果的JSON响应。","operationId":"rm_v1_file_rm_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api__apps__file__RemoveRequest"}}},"required":true},"responses":{"200":{"description":"成功删除文件或文件夹","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/file/rename":{"post":{"tags":["file"],"summary":"重命名文件或文件夹","description":"重命名文件或文件夹。\n\n参数:\n- request_body: 请求体，包含重命名文件或文件夹的信息。\n\n返回:\n- JSON: 重命名结果的JSON响应。","operationId":"rename_v1_file_rename_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api__apps__file__RenameRequest"}}},"required":true},"responses":{"200":{"description":"成功重命名文件或文件夹","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/file/get/{file_id}":{"get":{"tags":["file"],"summary":"获取文件","description":"获取文件。\n\n参数:\n- file_id: 文件ID。\n\n返回:\n- 响应对象: 文件内容的响应。","operationId":"get_file_v1_file_get__file_id__get","security":[{"LoginManager":[]}],"parameters":[{"name":"file_id","in":"path","required":true,"schema":{"type":"string","title":"File Id"}}],"responses":{"200":{"description":"成功获取文件","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/file/mv":{"post":{"tags":["file"],"summary":"移动文件或文件夹","description":"移动文件或文件夹。\n\n参数:\n- request_body: 请求体，包含移动文件或文件夹的信息。\n\n返回:\n- JSON: 移动结果的JSON响应。","operationId":"move_v1_file_mv_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MoveRequest"}}},"required":true},"responses":{"200":{"description":"成功移动文件或文件夹","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/docx2zjform/convert":{"post":{"tags":["docx2zjform"],"summary":"转换Word文档到竹简表单","description":"Word文档转换接口\n\n此接口接收一个.docx文件，解析其内容并返回竹简表单数据。\n\n参数:\n- file: UploadFile，上传的.docx文件\n- db: 数据库会话，由FastAPI依赖注入\n- user: 当前用户，由FastAPI依赖注入\n\n返回:\n- ResponseSchema对象，包含:\n  - status: 操作状态（成功/失败）\n  - message: 状态信息\n  - data: 竹简表单数据","operationId":"convert_v1_docx2zjform_convert_post","requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_convert_v1_docx2zjform_convert_post"}}},"required":true},"responses":{"200":{"description":"成功解析文档内容","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseSchema"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/conversation/set":{"post":{"tags":["conversation"],"summary":"设置会话","description":"设置会话\n\n该接口用于创建或更新会话信息。\n\n参数:\n- request: SetConversationRequest对象，包含会话的配置信息\n    - conversation_id: 会话的唯一标识符，如果为空则表示创建新会话\n    - dialog_id: 对话的唯一标识符\n    - name: 会话的名称\n    - is_new: 是否为新建会话\n\n返回:\n- 成功时返回包含会话信息的JSON结果\n- 失败时返回错误信息","operationId":"set_conversation_v1_conversation_set_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SetConversationRequest"}}},"required":true},"responses":{"200":{"description":"成功设置会话","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/conversation/get":{"get":{"tags":["conversation"],"summary":"获取会话","description":"获取会话\n\n该接口用于获取指定会话的信息。\n\n参数:\n- conversation_id: str 会话的唯一标识符\n\n返回:\n- 成功时返回包含会话信息的JSON结果\n- 失败时返回错误信息","operationId":"get_v1_conversation_get_get","security":[{"LoginManager":[]}],"parameters":[{"name":"conversation_id","in":"query","required":true,"schema":{"type":"string","title":"Conversation Id"}}],"responses":{"200":{"description":"成功获取会话","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/conversation/getsse/{dialog_id}":{"get":{"tags":["conversation"],"summary":"获取对话信息（支持SSE）","description":"获取对话信息（支持SSE）\n\n该接口用于根据对话ID获取对话信息，并校验Authorization Token。\n\n参数:\n- dialog_id: str 对话的唯一标识符\n- request: Request 请求对象，用于获取Authorization头部信息\n\n返回:\n- 成功时返回包含对话信息的JSON结果\n- 失败时返回错误信息","operationId":"getsse_v1_conversation_getsse__dialog_id__get","parameters":[{"name":"dialog_id","in":"path","required":true,"schema":{"type":"string","title":"Dialog Id"}}],"responses":{"200":{"description":"成功获取对话信息","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/conversation/rm":{"post":{"tags":["conversation"],"summary":"删除会话","description":"删除会话\n\n该接口用于删除指定的会话。\n\n参数:\n- request: RemoveConversationRequest对象，包含要删除的会话ID列表\n    - conversation_ids: List[str] 要删除的会话ID列表\n\n返回:\n- 成功时返回成功删除的JSON结果\n- 失败时返回错误信息","operationId":"rm_v1_conversation_rm_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RemoveConversationRequest"}}},"required":true},"responses":{"200":{"description":"成功删除会话","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/conversation/list":{"get":{"tags":["conversation"],"summary":"列出会话","description":"列出会话\n\n该接口用于列出指定对话的所有会话。\n\n参数:\n- dialog_id: str 对话所说应用id\n\n返回:\n- 成功时返回包含会话列表的JSON结果\n- 失败时返回错误信息","operationId":"list_conversation_v1_conversation_list_get","security":[{"LoginManager":[]}],"parameters":[{"name":"dialog_id","in":"query","required":true,"schema":{"type":"string","title":"Dialog Id"}}],"responses":{"200":{"description":"成功列出会话","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/conversation/completion":{"post":{"tags":["conversation"],"summary":"生成对话","description":"完成会话\n\n该接口用于完成指定会话，生成对话内容。\n\n参数:\n- request: CompletionRequest对象，包含会话的详细信息\n    - conversation_id: str 会话的唯一标识符\n    - messages: List[dict] 消息列表，每个消息包含角色和内容\n    - quote: Optional[bool] 是否引用，默认值为 False\n    - stream: Optional[bool] 是否使用流式响应，默认值为 True\n    - filter_condition: Optional[dict] 过滤条件\n\n返回:\n- 成功时返回生成的对话内容\n- 失败时返回错误信息","operationId":"completion_v1_conversation_completion_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api__apps__conversation__CompletionRequest"}}},"required":true},"responses":{"200":{"description":"成功生成对话","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/conversation/tts":{"post":{"tags":["conversation"],"summary":"文本转语音","description":"文本转语音\n\n该接口用于将输入的文本内容转换为语音，并以音频流的方式返回。\n\n参数:\n- request: TTSRequest对象，包含要转换的文本内容和可选的TTS模型名称\n    - text: str 要转换为语音的文本内容\n    - llm_name: Optional[str] TTS模型名称，如果提供则优先使用此模型\n\n返回:\n- 成功时返回包含音频流的响应\n- 失败时返回错误信息\n\n逻辑说明:\n- 首先，根据用户ID获取租户信息。如果租户信息不存在，返回404错误。\n- 优先使用请求中的llm_name参数作为TTS模型，如果没有提供则使用租户默认TTS模型ID。\n- 使用该模型将文本逐段转化为语音流，并逐段返回。\n- 若在转换过程中出现错误，则返回错误信息。\n\n注意事项:\n- 文本内容不应为空。\n- 如果没有提供llm_name且租户未设置默认TTS模型，将返回错误。\n- 返回结果为MPEG音频流，可供下载或直接播放。","operationId":"tts_v1_conversation_tts_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TTSRequest"}}},"required":true},"responses":{"200":{"description":"成功文本转语音","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/conversation/asr":{"post":{"tags":["conversation"],"summary":"语音识别","description":"语音识别\n\n该接口用于将输入的音频文件转换为文本。\n\n参数:\n- request: ASRRequest对象，包含音频文件的路径和可选的ASR模型名称\n    - audio_file_path: str 音频文件的路径\n    - llm_name: Optional[str] ASR模型名称，如果提供则优先使用此模型\n\n返回:\n- 成功时返回包含识别文本的JSON结果\n- 失败时返回错误信息\n\n逻辑说明:\n- 根据用户ID获取租户信息，确保租户存在。\n- 优先使用请求中的llm_name参数作为ASR模型，如果没有提供则使用租户默认ASR模型ID。\n- 使用该ASR模型处理音频文件，返回识别的文本。\n- 若在处理过程中出现错误，则返回错误信息。\n\n注意事项:\n- 音频文件路径应为有效路径。\n- 如果没有提供llm_name且租户未设置默认ASR模型，将返回错误。","operationId":"asr_v1_conversation_asr_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ASRRequest"}}},"required":true},"responses":{"200":{"description":"成功识别语音","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/conversation/asr_upload":{"post":{"tags":["conversation"],"summary":"语音识别上传","description":"语音识别上传\n\n该接口用于上传音频文件并将其转换为文本。\n\n参数:\n- file: UploadFile 上传的音频文件\n- llm_name: Optional[str] ASR模型名称，如果提供则优先使用此模型（作为查询参数传递）\n\n返回:\n- 成功时返回包含识别文本的JSON结果\n- 失败时返回错误信息\n\n逻辑说明:\n- 将上传的音频文件保存到临时路径，并验证用户和模型信息。\n- 优先使用传递的llm_name参数作为ASR模型，如果没有提供则使用租户默认ASR模型ID。\n- 使用该ASR模型识别音频文件内容，并将识别结果返回。\n- 若在处理过程中出现错误，则返回错误信息。\n\n注意事项:\n- 确保上传文件格式为有效的音频格式（如mp3）。\n- 如果没有提供llm_name且租户未设置默认ASR模型，将返回错误。","operationId":"asr_upload_v1_conversation_asr_upload_post","security":[{"LoginManager":[]}],"parameters":[{"name":"llm_name","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Llm Name"}}],"requestBody":{"required":true,"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_asr_upload_v1_conversation_asr_upload_post"}}}},"responses":{"200":{"description":"成功识别语音","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/conversation/delete_msg":{"post":{"tags":["conversation"],"summary":"删除信息","description":"删除消息\n\n该接口用于删除指定会话中的某条消息及其关联的参考信息。\n\n参数:\n- request: DeleteMsgRequest对象，包含会话ID和消息ID\n    - conversation_id: str 会话的唯一标识符\n    - message_id: List[dict] 消息ID列表\n\n返回:\n- 成功时返回更新后的会话信息的JSON结果\n- 失败时返回错误信息\n\n逻辑说明:\n- 首先，根据会话ID查找会话。如果会话不存在，返回错误信息。\n- 如果找到会话，遍历会话中的消息列表，找到与给定消息ID匹配的消息。\n- 删除匹配的消息及其后续消息和对应的参考信息。\n- 更新会话信息，并将结果返回。","operationId":"delete_msg_v1_conversation_delete_msg_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteMsgRequest"}}},"required":true},"responses":{"200":{"description":"成功删除信息","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/conversation/thumbup":{"post":{"tags":["conversation"],"summary":"点赞","description":"点赞接口\n\n该接口用于为特定会话中的消息点赞或取消点赞，并添加反馈信息。\n\n参数:\n- request: ThumbupRequest对象，包含点赞的详细信息\n    - conversation_id: str 会话的唯一标识符\n    - message_id: str 消息的唯一标识符\n    - set: Optional[bool] 点赞状态（True表示点赞，False表示取消点赞）\n    - feedback: str 反馈信息，当取消点赞时可以提供反馈内容\n\n返回:\n- 成功时返回更新后的会话信息的JSON结果\n- 失败时返回错误信息\n\n逻辑说明:\n- 根据会话ID查找指定会话，如果未找到则返回错误。\n- 在会话的消息列表中查找匹配的消息ID，并根据请求中的点赞状态设置相应的字段。\n- 若取消点赞且提供了反馈信息，则在消息中记录该反馈。\n- 更新会话信息并将结果返回。\n\n注意事项:\n- 仅支持为\"assistant\"角色的消息点赞。\n- 若请求中未设置点赞状态，默认为取消点赞。","operationId":"thumbup_v1_conversation_thumbup_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThumbupRequest"}}},"required":true},"responses":{"200":{"description":"成功点赞","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/conversation/ask":{"post":{"tags":["conversation"],"summary":"问答接口","description":"问答接口\n\n该接口用于根据用户的问题从知识库中获取答案。\n\n参数:\n- question: 用户提出的问题\n- kb_ids: 知识库ID列表\n- user: 当前用户对象\n\n返回:\n- 实时流式返回答案数据","operationId":"ask_about_v1_conversation_ask_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AskAboutRequest"}}},"required":true},"responses":{"200":{"description":"返回答案","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/conversation/mindmap":{"post":{"tags":["conversation"],"summary":"生成思维导图","description":"生成思维导图\n\n根据知识库内容生成思维导图。\n\n参数:\n- question: 用户提出的问题\n- kb_ids: 知识库ID列表\n- user: 当前用户对象\n\n返回:\n- 思维导图数据","operationId":"mindmap_v1_conversation_mindmap_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MindmapRequest"}}},"required":true},"responses":{"200":{"description":"返回思维导图","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/conversation/related_questions":{"post":{"tags":["conversation"],"summary":"生成相关问题","description":"生成相关问题\n\n根据用户的关键词生成相关搜索问题。\n\n参数:\n- question: 用户提出的关键词\n- user: 当前用户对象\n\n返回:\n- 相关搜索问题列表","operationId":"related_questions_v1_conversation_related_questions_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RelatedQuestionsRequest"}}},"required":true},"responses":{"200":{"description":"返回相关问题","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/custom/process_docx":{"post":{"tags":["custom"],"summary":"Word 文档占位符处理接口","description":"### POST `/v1/document/process_docx` Word 文档占位符处理接口\n\n**功能描述**:\n该接口接收用户上传的 Word 文件，对文件中的表格占位符进行解析、标准化和填充，最终生成处理后的文档与占位符的 JSON 数据。\n\n---\n\n### 请求体 (Request Body)\n\n| 字段        | 类型          | 必填 | 描述                          |\n|-------------|---------------|------|-------------------------------|\n| `file`      | `UploadFile`  | 是   | 用户上传的 Word 文档，格式必须为 `.docx` |\n\n---\n\n### 响应 (Response)\n\n#### 成功响应 (200)\n\n- **响应格式**:\n    - **`Content-Type: application/json`**\n    - **示例**:\n    ```json\n    {\n        \"retcode\": 0,\n        \"retmsg\": \"File processed successfully.\",\n        \"data\": {\n            \"placeholders\": {\n                \"key1\": \"\",\n                \"key2\": \"\"\n            },\n            \"file\": \"base64-encoded-processed-file-content\"\n        }\n    }\n    ```\n\n- **字段说明**:\n    | 字段             | 类型        | 描述                               |\n    |------------------|-------------|------------------------------------|\n    | `placeholders`   | `dict`      | 处理后的占位符键值对，键为占位符名称，值为空字符串 |\n    | `file`           | `string`    | 处理后文档的 Base64 编码内容       |\n\n---\n\n#### 错误响应\n\n| 状态码 | 错误类型              | 描述                                |\n|--------|-----------------------|-------------------------------------|\n| 400    | `Invalid file format` | 当上传的文件格式不是 `.docx` 时，返回此错误 |\n\n- **示例**:\n    ```json\n    {\n        \"detail\": \"Invalid file format. Only .docx files are supported.\"\n    }\n    ```\n\n---\n\n### 主要流程\n\n1. **文件校验**: 验证上传文件的格式是否为 `.docx`，如果不是，返回 400 错误。\n2. **读取文档内容**: 使用 `python-docx` 读取上传文档中的表格内容。\n3. **占位符处理**:\n    - 判断和包装符合 `{{key}}` 格式的占位符。\n    - 标准化占位符键名（仅保留中文字符、数字和下划线）。\n    - 填充表格内容：根据规则右填充和下填充缺失内容。\n    - 为下填充的占位符添加序号后缀。\n4. **文档内容更新**: 将处理后的占位符填充回文档的对应表格。\n5. **返回结果**:\n    - 将处理后的文档内容以 Base64 格式返回。\n    - 返回占位符的 JSON 数据，方便后续填写或二次处理。\n\n---\n\n### 注意事项\n\n- **文件格式**: 仅支持 `.docx` 文件格式。\n- **表格占位符规则**:\n    - 占位符必须以 `{{` 开始，并以 `}}` 结束。\n    - 键名仅支持中文字符和下划线，其他字符会被移除。\n    - 自动为填充生成的占位符添加 `_1`、`_2` 等后缀，以避免重复。\n- **返回文件编码**: 处理后的文档以 Base64 编码返回，需客户端自行解码并保存为 `.docx` 文件。\n\n---","operationId":"process_docx_v1_custom_process_docx_post","requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_process_docx_v1_custom_process_docx_post"}}},"required":true},"responses":{"200":{"description":"返回处理后的文档和占位符 JSON 数据","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/custom/fill_docx":{"post":{"tags":["custom"],"summary":"Word 文档填充接口","description":"### POST `/v1/document/fill_docx` Word 文档填充接口\n\n**功能描述**:\n该接口接收用户上传的带占位符的 Word 文档（`.docx` 格式）和 JSON 数据，将 JSON 数据填充到文档中的占位符位置，并返回填充后的文档（Base64 编码）。\n\n---\n\n### 请求参数 (Request Parameters)\n\n| 字段        | 类型          | 必填 | 描述                                    |\n|-------------|---------------|------|-----------------------------------------|\n| `file`      | `UploadFile`  | 是   | 用户上传的 Word 文档，格式必须为 `.docx` |\n| `data`      | `string`      | 是   | JSON 格式的字符串，包含占位符对应的键值对 |\n\n#### 示例请求 (Sample Request)\n**表单数据**:\n- 文件上传: `file` 上传一个包含占位符的 Word 文档。\n- JSON 数据:\n    ```json\n    {\n        \"name\": \"张三\",\n        \"date\": \"2024-12-11\"\n    }\n    ```\n\n---\n\n### 响应 (Response)\n\n#### 成功响应 (200)\n\n- **响应格式**:\n    - **`Content-Type: application/json`**\n    - **示例**:\n    ```json\n    {\n        \"retmsg\": \"File filled successfully.\",\n        \"data\": {\n            \"file\": \"base64-encoded-filled-file-content\"\n        }\n    }\n    ```\n\n- **字段说明**:\n    | 字段       | 类型        | 描述                                     |\n    |------------|-------------|------------------------------------------|\n    | `retmsg`   | `string`    | 响应消息，表示处理结果。                 |\n    | `data`     | `object`    | 包含填充后的文档的 Base64 编码数据。      |\n    | `file`     | `string`    | Base64 编码的填充文档数据，需解码后保存为 `.docx` 文件 |\n\n#### 错误响应\n\n| 状态码 | 错误类型                     | 描述                                     |\n|--------|------------------------------|------------------------------------------|\n| 400    | `Invalid file format`        | 上传文件格式不是 `.docx`                 |\n| 400    | `Invalid JSON data provided` | 提供的 `data` 不是有效的 JSON 格式       |\n| 500    | `Internal server error`      | 填充过程中出现意外错误                   |\n\n- **示例**:\n    ```json\n    {\n        \"detail\": \"Invalid file format. Only .docx files are supported.\"\n    }\n    ```\n\n---\n\n### 主要流程\n\n1. **文件校验**:\n    - 验证上传文件是否为 `.docx` 格式，如果格式错误，返回 400 错误。\n2. **解析 JSON 数据**:\n    - 使用 Python 内置的 `json.loads` 解析上传的 JSON 数据。\n    - 如果 JSON 数据格式错误，返回 400 错误。\n3. **填充文档**:\n    - 使用 `python-docx-template` 将 JSON 数据渲染到文档中的占位符。\n    - 占位符的格式需为 `{{key}}`。\n4. **生成 Base64 编码**:\n    - 将填充后的文档保存到内存流中，并转换为 Base64 编码字符串。\n5. **返回响应**:\n    - 返回包含 Base64 编码文档的 JSON 数据，客户端可解码后保存为 `.docx` 文件。\n\n---\n\n### 注意事项\n\n- **占位符格式**:\n    - 文档中的占位符需遵循 `{{key}}` 格式，`key` 必须与 JSON 数据中的键匹配。\n- **文件格式限制**:\n    - 仅支持 `.docx` 格式的 Word 文件，其他格式会返回错误。\n- **Base64 文档解码**:\n    - 响应返回的文档内容为 Base64 编码，客户端需解码后保存为 `.docx` 文件以查看填充结果。\n- **异常处理**:\n    - 如果填充过程中发生未预料的错误，将返回 500 错误，并包含具体错误描述。\n\n---","operationId":"fill_docx_v1_custom_fill_docx_post","requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_fill_docx_v1_custom_fill_docx_post"}}},"required":true},"responses":{"200":{"description":"返回填充后的文档 Base64 数据","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/llm/factories":{"get":{"tags":["llm"],"summary":"获取模型供应商信息","description":"此异步函数用于获取所有模型供应商的信息，排除特定供应商，并将结果以JSON格式返回。\n摘要: 获取模型供应商信息\n响应描述: 成功获取到所有模型供应商信息\n\n返回:\n- dict: 包含模型供应商信息的JSON结果，数据部分是一个字典列表，每个字典代表一个供应商的信息。\n\n功能:\n1. 查询数据库中所有的模型供应商信息。\n2. 排除名为\"Youdao\"、\"FastEmbed\"和\"BAAI\"的供应商信息。\n3. 将筛选后的供应商信息转换为字典列表。\n4. 将结果封装为JSON格式的字典并返回。\n\n流程:\n1. 使用LLMFactoriesService从数据库中获取所有供应商信息。\n2. 遍历获取的供应商信息，排除特定名称的供应商。\n3. 将筛选后的供应商信息转换为字典列表。\n4. 返回封装后的JSON结果。\n\n异常处理:\n- 如果在执行数据库操作或数据处理过程中发生异常，将捕获异常并调用server_error_response函数返回服务器错误响应。\n\n注意:\n- 被排除的供应商名称\"Youdao\"、\"FastEmbed\"和\"BAAI\"可能是系统默认供应商或特殊供应商，具体原因需根据实际业务逻辑确定。","operationId":"factories_v1_llm_factories_get","responses":{"200":{"description":"成功获取到所有模型供应商信息","content":{"application/json":{"schema":{}}}}},"security":[{"LoginManager":[]}]}},"/v1/llm/set_api_key":{"post":{"tags":["llm"],"summary":"新增模型厂商api key","description":"此异步函数用于设置模型制造商的API密钥，并验证其是否能正确访问特定类型的模型。\n摘要: 新增模型厂商api key\n响应描述: 成功保存该模型服务厂商的api key\n\n参数:\n- request (SetAPIKeyRequest): 一个依赖注入的请求对象，包含模型工厂ID、API密钥等信息。\n\n返回:\n- dict: 成功时返回一个表示操作成功的JSON结果；失败时返回一个包含错误信息的JSON结果。\n\n功能:\n1. 验证API密钥是否能够成功访问聊天模型（Chat），并尝试访问嵌入（Embedding）和重排序（Rerank）模型（注：后两者当前未实现）。\n2. 如果API密钥无法访问任何模型，函数将返回一个错误结果。\n3. 更新或创建租户的模型配置，包括API密钥、基础URL等信息。\n4. 如果在更新或创建过程中遇到完整性错误（例如，API密钥已存在），则抛出HTTP异常。\n\n流程:\n1. 解析请求体并初始化变量。\n2. 遍历所有属于指定模型工厂的模型，尝试使用API密钥访问它们。\n3. 如果访问失败，收集错误信息。\n4. 如果有错误信息，返回错误结果。\n5. 否则，更新或创建租户的模型配置。\n6. 返回操作成功的JSON结果。\n\n注意:\n- 目前仅实现了对聊天模型的访问测试。\n- 未来可能扩展到嵌入和重排序模型的测试。\n- 在更新或创建租户模型配置时，会检查API密钥是否已存在，以避免重复。","operationId":"set_api_key_v1_llm_set_api_key_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SetAPIKeyRequest"}}},"required":true},"responses":{"200":{"description":"成功保存该模型服务厂商的api key","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/llm/add_llm":{"post":{"tags":["llm"],"summary":"新增模型","description":"# POST /add_llm\n\n## 接口描述\n用于向系统中添加一个新的大语言模型(LLM)，并验证相关连接是否有效。\n\n## 请求方式\nPOST\n\n## 接口权限\n需要用户认证\n\n## 请求参数\n| 参数名称 | 类型 | 必填 | 描述 |\n|----------|------|------|------|\n| llm_factory | string | 是 | 模型提供商/工厂，例如: \"OpenAI\", \"Azure-OpenAI\", \"Bedrock\", \"VolcEngine\", \"Tencent Hunyuan\", \"Tencent Cloud\", \"LocalAI\", \"HuggingFace\", \"OpenAI-API-Compatible\", \"XunFei Spark\", \"Fish Audio\", \"Google Cloud\" 等 |\n| llm_name | string | 是 | 模型名称 |\n| mdl_type | string | 是 | 模型类型，可以是 \"chat\" (聊天), \"embedding\" (嵌入), \"rerank\" (重排序), \"image2text\" (图像转文本), \"tts\" (文本转语音) |\n| api_key | string | 否 | API密钥，根据不同的工厂可能需要或者不需要 |\n| api_base | string | 否 | API基础URL地址 |\n| ark_api_key | string | 否 | VolcEngine专用: ARK API密钥 |\n| endpoint_id | string | 否 | VolcEngine专用: 终端节点ID |\n| bedrock_ak | string | 否 | AWS Bedrock专用: Access Key |\n| bedrock_sk | string | 否 | AWS Bedrock专用: Secret Key |\n| bedrock_region | string | 否 | AWS Bedrock专用: 区域名称 |\n| fish_audio_ak | string | 否 | Fish Audio专用: Access Key |\n| fish_audio_refid | string | 否 | Fish Audio专用: 参考ID |\n| hunyuan_sid | string | 否 | 腾讯混元专用: SID |\n| hunyuan_sk | string | 否 | 腾讯混元专用: Secret Key |\n| tencent_cloud_sid | string | 否 | 腾讯云专用: SID |\n| tencent_cloud_sk | string | 否 | 腾讯云专用: Secret Key |\n| spark_api_password | string | 否 | 讯飞星火专用: API密码 (用于chat模型) |\n| spark_app_id | string | 否 | 讯飞星火专用: 应用ID (用于tts模型) |\n| spark_api_secret | string | 否 | 讯飞星火专用: API Secret (用于tts模型) |\n| spark_api_key | string | 否 | 讯飞星火专用: API Key (用于tts模型) |\n| google_project_id | string | 否 | Google Cloud专用: 项目ID |\n| google_region | string | 否 | Google Cloud专用: 区域 |\n| google_service_account_key | string | 否 | Google Cloud专用: 服务账号密钥 |\n\n## 响应参数\n| 参数名称 | 类型 | 描述 |\n|----------|------|------|\n| success | boolean | 操作是否成功 |\n| data | boolean | 返回true表示添加成功 |\n| message | string | 当操作失败时，返回错误信息 |\n\n## 特性\n1. 根据不同的模型提供商，自动组装API密钥格式\n2. 添加模型前，会进行连接测试，确保API密钥和URL有效\n3. 对于不同类型的模型，执行不同的有效性验证:\n   - 对于embedding模型: 验证能否成功编码测试文本\n   - 对于chat模型: 验证能否成功生成回复\n   - 对于rerank模型: 验证能否成功计算相似度\n   - 对于image2text模型: 验证能否成功描述图像\n   - 对于tts模型: 验证能否成功生成语音\n\n## 错误码\n| 错误码 | 描述 |\n|--------|------|\n| 400 | 请求参数错误或模型已存在或模型验证失败 |\n| 401 | 用户未认证 |\n\n## 示例\n\n### 请求示例 (添加OpenAI模型)\n```json\n{\n  \"llm_factory\": \"OpenAI\",\n  \"llm_name\": \"gpt-4\",\n  \"mdl_type\": \"chat\",\n  \"api_key\": \"sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n  \"api_base\": \"https://api.openai.com/v1\"\n}\n```\n\n### 响应示例 (成功)\n```json\n{\n  \"success\": true,\n  \"data\": true,\n  \"message\": \"\"\n}\n```\n\n### 响应示例 (失败)\n```json\n{\n  \"success\": false,\n  \"data\": null,\n  \"message\": \"Fail to access model(gpt-4). Invalid API key.\"\n}\n```\n\n## 注意事项\n1. 不同的模型提供商需要不同的API密钥格式，请确保提供正确的参数组合\n2. 添加前，系统会验证模型连接，如果验证失败将返回400错误\n3. 对于同一个租户，相同工厂和名称的模型不能重复添加\n4. 对于某些特殊的模型工厂，系统会自动在模型名称后添加后缀，例如LocalAI会添加\"___LocalAI\"","operationId":"add_llm_v1_llm_add_llm_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AddLLMRequest"}}},"required":true},"responses":{"200":{"description":"成功新增该模型","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/llm/delete_llm":{"post":{"tags":["llm"],"summary":"删除模型","description":"此异步函数用于删除指定的语言模型（LLM）。\n摘要: 删除模型\n响应描述: 成功删除该模型\n\n参数:\n- request (DeleteLLMRequest): 一个依赖注入的请求对象，包含模型供应商和模型名称的信息。\n\n返回:\n- dict: 成功时返回一个表示操作成功的JSON结果。\n\n功能:\n1. 删除指定供应商和名称的模型。\n\n流程:\n1. 解析请求体，获取模型供应商和模型名称。\n2. 检查指定的模型是否存在。\n3. 从数据库中删除指定的模型。\n4. 返回操作成功的JSON结果。\n\n异常处理:\n- 如果在删除模型的过程中发生异常，将捕获异常并返回服务器错误响应。","operationId":"delete_llm_v1_llm_delete_llm_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteLLMRequest"}}},"required":true},"responses":{"200":{"description":"成功删除该模型","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/llm/delete_factory":{"post":{"tags":["llm"],"summary":"删除模型厂商","operationId":"delete_factory_v1_llm_delete_factory_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteFactoryRequest"}}},"required":true},"responses":{"200":{"description":"成功删除模型厂商","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/llm/my_llms":{"get":{"tags":["llm"],"summary":"获取用户的所有模型","description":"获取当前用户的所有模型信息。\n摘要: 获取用户的所有模型\n响应描述: 成功获取到用户的所有模型\n\n返回:\n- dict: 包含用户所有模型信息的JSON结果，数据部分是一个字典，其中每个键代表一个模型工厂，值是该工厂下的模型信息列表。\n\n功能:\n1. 查询当前用户的所有模型信息。\n2. 按模型工厂分类整理模型信息。\n3. 将整理后的模型信息封装为JSON格式的字典并返回。\n\n流程:\n1. 使用TenantLLMService从数据库中获取当前用户的所有模型信息。\n2. 遍历获取的模型信息，按模型工厂分类整理模型信息。\n3. 将整理后的模型信息封装为JSON格式的字典并返回。\n\n异常处理:\n- 如果在执行数据库操作或数据处理过程中发生异常，将捕获异常并抛出HTTP异常，返回服务器错误响应。\n\n注意:\n- 用户的模型信息按模型工厂分类，每个工厂下包含多个模型信息。","operationId":"my_llms_v1_llm_my_llms_get","responses":{"200":{"description":"成功获取到用户的所有模型","content":{"application/json":{"schema":{}}}}},"security":[{"LoginManager":[]}]}},"/v1/llm/list":{"get":{"tags":["llm"],"summary":"列出所有模型","description":"列出所有模型，支持按模型类型筛选。\n摘要: 列出所有模型\n响应描述: 成功列出所有模型\n\n参数:\n- mdl_type (Optional[str]): 可选的模型类型，用于筛选模型。\n\n返回:\n- dict: 包含所有模型信息的JSON结果，数据部分是一个字典，其中每个键代表一个模型工厂，值是该工厂下的模型信息列表。\n\n功能:\n1. 查询所有有效的模型信息。\n2. 根据模型类型筛选模型信息。\n3. 按模型工厂分类整理模型信息。\n4. 将整理后的模型信息封装为JSON格式的字典并返回。\n\n流程:\n1. 使用TenantLLMService从数据库中获取当前用户的所有模型信息。\n2. 使用LLMService获取所有有效的模型信息。\n3. 遍历获取的模型信息，按模型工厂分类整理模型信息。\n4. 将整理后的模型信息封装为JSON格式的字典并返回。\n\n异常处理:\n- 如果在执行数据库操作或数据处理过程中发生异常，将捕获异常并抛出HTTP异常，返回服务器错误响应。\n\n注意:\n- 模型信息按模型工厂分类，每个工厂下包含多个模型信息。\n- 可选的模型类型参数用于筛选模型信息，只返回指定类型的模型。","operationId":"list_app_v1_llm_list_get","security":[{"LoginManager":[]}],"parameters":[{"name":"mdl_type","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Mdl Type"}}],"responses":{"200":{"description":"成功列出所有模型","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/llm/chat_service":{"post":{"tags":["llm"],"summary":"模型对话服务","description":"**功能描述**:\n此接口用于调用对话模型，基于用户提供的输入生成对应的响应内容。支持文本生成、图像到文本转换、消息处理等多种模型类型。接口根据请求体中的配置，选择适当的模型及生成方式，提供流式和非流式响应模式。\n\n### 请求体 (Request Body):\n- **model_dump (dict)**: 包含以下字段：\n    - `prompt` (str, 可选): 用户提供的提示内容，用于引导对话模型生成响应。\n    - `messages` (list[dict]): 对话消息列表，包含用户与模型之间的对话历史。\n    - `llm_name` (str): 模型名称，用于指定所调用的语言模型。\n    - `stream` (bool): 指定是否使用流式响应。\n    - `gen_conf` (dict, 可选): 生成配置，控制对话生成行为。\n    - `image` (str, 可选): Base64编码的图像数据，适用于图像到文本的转换模型。\n\n### 响应 (Response):\n- **成功响应 (200)**:\n    - `data` (dict): 返回包含模型生成的响应内容，格式可能包括文本、结构化数据或基于图像的文本输出，具体取决于模型类型和请求内容。\n\n### 错误响应:\n- **404: Tenant not found**:\n    - 当根据用户ID查找租户信息失败时，返回此错误，表示该用户无对应的租户记录。\n- **404: Model not found**:\n    - 当指定的模型名称在用户租户可用模型列表中未找到时，返回此错误。\n\n### 主要流程:\n1. 从请求中提取用户输入的内容、模型名称和配置信息。\n2. 通过用户信息获取租户信息，确保用户的租户身份；如果未找到租户信息，返回404错误。\n3. 获取用户租户关联的模型列表，确定模型类型 (`llm_type`)。\n4. 根据 `llm_type` 判断是否需要传入 `image` 参数，构建生成请求。\n5. 根据 `stream` 参数选择流式或非流式的生成方法，调用模型获取对话响应内容。\n6. 返回生成的对话结果。\n\n### 注意事项:\n- **模型选择**:\n    - 仅当 `llm_type` 为 `image2text` 时传递 `image` 参数，以确保在需要图像到文本转换时能处理Base64编码的图像数据。\n    - 支持多种模型类型 (如文本生成、图像到文本、消息对话)，请根据需求选择适当的 `llm_name` 和 `llm_type`。\n- **流式调用**:\n    - 若 `stream` 参数为 `True`，将返回流式响应，用于实时数据生成；若为 `False`，返回完整的响应数据。\n- **数据格式**:\n    - 返回数据格式可能因模型及请求内容不同而有所变化；默认返回JSON格式的结构化数据或文本响应。","operationId":"chat_service_v1_llm_chat_service_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LLMServiceRequest"}}},"required":true},"responses":{"200":{"description":"成功调用对话模型","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/llm/chat_service_sse":{"post":{"tags":["llm"],"summary":"模型对话服务","description":"### POST `/v1/llm/chat_service` 模型对话服务\n\n**功能描述**:\n此接口用于调用对话模型，基于用户提供的输入生成对应的响应内容。支持文本生成、图像到文本转换、消息处理等多种模型类型，接口根据请求体中的配置，选择适当的模型及生成方式，提供流式和非流式响应模式。\n\n---\n\n### 请求体 (Request Body)\n\n| 字段         | 类型                | 必填 | 描述                                                                                  |\n|--------------|---------------------|------|---------------------------------------------------------------------------------------|\n| `prompt`     | `string`           | 否   | 用户提供的提示内容，用于引导对话模型生成响应。                                        |\n| `messages`   | `list[dict]`       | 是   | 对话消息列表，包含用户与模型之间的对话历史，格式为 `{ \"role\": \"user/assistant\", \"content\": \"...\" }`。|\n| `llm_name`   | `string`           | 是   | 模型名称，用于指定所调用的语言模型。                                                 |\n| `stream`     | `boolean`          | 是   | 指定是否使用流式响应，`true` 表示流式响应，`false` 表示非流式响应。                   |\n| `gen_conf`   | `object`           | 否   | 生成配置，控制对话生成行为，例如温度值、生成长度等（具体配置视模型能力而定）。         |\n| `image`      | `string (Base64)`  | 否   | Base64 编码的图像数据，适用于图像到文本的转换模型。                                   |\n\n---\n\n### 响应 (Response)\n\n#### 成功响应 (200)\n\n- **流式响应**:\n    - **`Content-Type: text/event-stream`**\n    - 数据按块流式返回，每条消息以 `data:` 开头，并以两个换行符 `\\n\\n` 结束。\n\n    **示例**:\n\n    ```plaintext\n    data: {\"retcode\": 0, \"retmsg\": \"\", \"data\": \"你好\"}\n\n    data: {\"retcode\": 0, \"retmsg\": \"\", \"data\": \"你好👋！\"}\n\n    data: {\"retcode\": 0, \"retmsg\": \"\", \"data\": \"你好👋！我是人工智能助手\"}\n\n    data: {\"retcode\": 0, \"retmsg\": \"\", \"data\": true}\n    ```\n\n- **非流式响应**:\n    - **`Content-Type: application/json`**\n    - **示例**:\n    ```json\n    {\n        \"retcode\": 0,\n        \"retmsg\": \"success\",\n        \"data\": \"你好👋！我是人工智能助手，很高兴见到你！欢迎问我任何问题。\"\n    }\n    ```\n\n---\n\n### 错误响应\n\n#### **404: Tenant not found**\n- **描述**: 当根据用户ID查找租户信息失败时，返回此错误。\n- **示例**:\n    ```json\n    {\n        \"detail\": \"Tenant not found!\"\n    }\n    ```\n\n#### **404: Model not found**\n- **描述**: 当指定的模型名称在用户租户可用模型列表中未找到时，返回此错误。\n- **示例**:\n    ```json\n    {\n        \"detail\": \"Model glm-4-airx not found in the list.\"\n    }\n    ```\n\n#### **500: 内部错误**\n- **描述**: 当发生意外错误时，返回此错误。\n- **示例**:\n    - **流式响应错误**:\n        ```plaintext\n        data: {\"retcode\": 500, \"retmsg\": \"Internal server error\", \"data\": {\"answer\": \"**ERROR**: Internal error\"}}\n        ```\n    - **非流式响应错误**:\n        ```json\n        {\n            \"retcode\": 500,\n            \"retmsg\": \"Internal server error\",\n            \"data\": {\"answer\": \"**ERROR**: Internal error\"}\n        }\n        ```\n\n---\n\n### 主要流程\n\n1. 从请求中提取用户输入的内容、模型名称和配置信息。\n2. 通过用户信息获取租户信息，确保用户的租户身份；如果未找到租户信息，返回404错误。\n3. 获取用户租户关联的模型列表，确定模型类型 (`llm_type`)。\n4. 根据 `llm_type` 判断是否需要传入 `image` 参数，构建生成请求。\n5. 根据 `stream` 参数选择流式或非流式的生成方法，调用模型获取对话响应内容。\n6. 返回生成的对话结果。\n\n---\n\n### 注意事项\n\n- **模型选择**:\n    - 仅当 `llm_type` 为 `image2text` 时传递 `image` 参数，以确保在需要图像到文本转换时能处理Base64编码的图像数据。\n    - 支持多种模型类型 (如文本生成、图像到文本、消息对话)，请根据需求选择适当的 `llm_name` 和 `llm_type`。\n- **流式调用**:\n    - 若 `stream` 参数为 `True`，将返回流式响应，用于实时数据生成；若为 `False`，返回完整的响应数据。\n- **数据格式**:\n    - 返回数据格式可能因模型及请求内容不同而有所变化；默认返回JSON格式的结构化数据或文本响应。\n- **流式响应结束标记**:\n    - 流式响应的最后一条消息为:\n      ```plaintext\n      data: {\"retcode\": 0, \"retmsg\": \"\", \"data\": true}\n      ```","operationId":"chat_service_sse_v1_llm_chat_service_sse_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LLMServiceRequest"}}},"required":true},"responses":{"200":{"description":"成功调用对话模型","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/llm/fine_prompt":{"post":{"tags":["llm"],"summary":"优化提示词","description":"**功能描述**:\n此接口用于根据用户输入的任务描述或现有提示词，优化生成详细的系统提示词，以便更好地引导语言模型完成任务。该接口结合预定义的优化提示模板 (META_PROMPT)，确保模型输出的提示词更加清晰、具体，并且能合理规划任务的完成步骤。\n\n### 请求体 (Request Body):\n- **model_dump (dict)**: 包含以下字段：\n    - `prompt` (str): 用户提供的任务描述或现有提示词，将根据此内容进行优化。\n    - `llm_name` (str): 大语言模型名称，用于选择特定的模型来生成优化的提示词。\n    - `gen_conf` (dict, 可选): 生成配置，控制提示词生成的行为。\n\n### 响应 (Response):\n- **成功响应 (200)**:\n    - `data` (dict): 返回包含优化后的提示词。格式可能包括简单的字符串或结构化的JSON，具体取决于模型输出的要求。\n\n### 错误响应:\n- **404: Tenant not found**:\n    - 当根据用户ID查找租户信息失败时，返回此错误。\n\n### 主要流程:\n1. 从请求中提取用户输入的提示词及相关配置信息。\n2. 通过用户信息检索相关租户信息。如果租户信息未找到，抛出404错误。\n3. 根据预定义的META_PROMPT，结合用户输入的任务描述，使用指定的LLM模型生成优化后的系统提示词。\n4. 将生成的提示词返回给用户，格式可能为JSON或简单文本。\n\n### 注意事项:\n- **优化策略**:\n    - 系统优先保留用户提供的内容，对于简单提示词进行微调，对于复杂提示词则在不改变原始结构的前提下增强清晰度。\n    - 系统会根据内容需要添加示例和步骤，确保输出提示词具有高可读性和清晰性。\n- **常量与格式**:\n    - 提示词中应包括不易受到提示注入影响的常量，例如规则、评分标准等。\n    - 对于任务输出明确的结构化数据(如JSON)会更倾向于返回JSON格式，但不会使用代码块包装（除非明确要求）。","operationId":"fine_prompt_v1_llm_fine_prompt_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/FinePromptRequest"}}},"required":true},"responses":{"200":{"description":"返回优化后的提示词","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/llm/generate_suggestions":{"post":{"tags":["llm"],"summary":"生成用户输入建议","description":"### POST `/v1/suggestions/generate_suggestions` 生成用户输入建议\n\n**功能描述**\n此接口用于调用大模型根据当前对话上下文及智能体的配置信息，生成用户下一轮输入建议。生成的建议应紧密相关、多样性高、避免重复，并与用户的角色匹配。\n\n---\n\n## 请求体 (Request Body)\n\n| 字段            | 类型            | 必填 | 描述                                                                                     |\n|-----------------|-----------------|------|------------------------------------------------------------------------------------------|\n| `llm_name`      | `string`       | 是   | 模型名称，指定用于生成建议的大模型。                                                    |\n| `last_response` | `string`       | 是   | 模型在对话中的最后一轮回复内容。                                                        |\n| `messages`      | `list[dict]`   | 是   | 对话消息列表，包括用户与模型之间的上下文历史，格式为 `{ \"role\": \"user/assistant\", \"content\": \"...\" }`。 |\n| `gen_conf`      | `object`       | 否   | 大模型的生成配置，用于控制生成行为，例如温度值、生成长度等。                              |\n| `num`           | `integer`      | 否   | 返回的建议条数，默认为3。                                                               |\n\n---\n\n## 响应 (Response)\n\n### 成功响应 (200)\n\n- **`Content-Type: application/json`**\n- **示例**:\n    ```json\n    {\n        \"retcode\": 0,\n        \"retmsg\": \"success\",\n        \"data\": [\n            \"建议 1\",\n            \"建议 2\",\n            \"建议 3\"\n        ]\n    }\n    ```\n\n---\n\n## 错误响应\n\n### 404: Tenant not found\n- **描述**\n  当根据用户ID查找租户信息失败时，返回此错误。\n- **示例**\n    ```json\n    {\n        \"detail\": \"Tenant not found!\"\n    }\n    ```\n\n### 500: JSON 解析错误\n- **描述**\n  模型返回数据无法解析为有效的JSON格式。\n- **示例**\n    ```json\n    {\n        \"detail\": \"模型返回数据无法解析为 JSON: Expecting value: line 1 column 1 (char 0)\"\n    }\n    ```\n\n### 500: 无效的建议列表\n- **描述**\n  模型返回的建议列表为空或格式不正确。\n- **示例**\n    ```json\n    {\n        \"detail\": \"模型未返回有效的建议列表\"\n    }\n    ```\n\n### 500: 解析模型返回数据时发生未知错误\n- **描述**\n  发生未知错误导致无法解析模型返回的数据。\n- **示例**\n    ```json\n    {\n        \"detail\": \"解析模型返回数据时发生未知错误: list index out of range\"\n    }\n    ```\n\n---\n\n## 主要流程\n\n1. 从请求中提取 `llm_name`、`last_response`、`messages`、`gen_conf` 和 `num` 等字段。\n2. 获取用户对应的租户信息；如果未找到，返回404错误。\n3. 构造 `system_prompt`，用于明确生成建议的任务及格式。\n4. 调用大模型生成建议，并解析模型返回的 JSON 数据。\n5. 校验建议列表的有效性，确保返回符合要求的结果。\n6. 返回生成的建议列表。\n\n---\n\n## 注意事项\n\n- **紧密相关性**\n  建议内容必须与最后一轮模型回复和对话上下文相关，避免偏离主题。\n\n- **多样性**\n  确保生成的建议从不同方向或角度切入，不重复也不雷同。\n\n- **角色适配性**\n  根据用户的身份和对话场景定制建议内容，确保更具针对性。\n\n- **JSON 格式输出**\n  大模型返回数据必须是纯 JSON 格式，不应包含多余标记或格式化代码块。\n\n- **异常处理**\n  当模型返回数据无法解析或格式不符合预期时，记录日志并返回错误响应。","operationId":"generate_suggestions_v1_llm_generate_suggestions_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuggestionRequest"}}},"required":true},"responses":{"200":{"description":"成功调用大模型生成建议","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/llm/recognize_intent":{"post":{"tags":["llm"],"summary":"表单意图识别","description":"### 功能\n- 根据 `user_text` 在 `candidate_forms` 中找到**最合适**的表单。\n- 仅返回 `intent_id`（表单 ID）和 `confidence`。\n\n### 请求示例\n```json\n{\n  \"user_text\": \"我想明天上午请半天病假\",\n  \"candidate_forms\": [\n    { \"form_id\": 1, \"name\": \"请假申请表\", \"description\": \"员工请假使用\" },\n    { \"form_id\": 2, \"name\": \"报销单\",   \"description\": \"差旅费报销\" }\n  ],\n  \"llm_name\": \"gpt-4o-mini\",\n  \"gen_conf\": { \"temperature\": 0 }\n}\n```","operationId":"recognize_intent_v1_llm_recognize_intent_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RecognizeIntentRequest"}}},"required":true},"responses":{"200":{"description":"返回匹配到的表单 ID 及置信度","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RecognizeIntentResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/llm/fill_fields":{"post":{"tags":["llm"],"summary":"表单字段填充","description":"1) 用 LLM 粗填 JSON\n2) 后端解析 & 校验\n3) 如缺失必填且 retry=True，则内部追问一次\n4) 返回 field_values + missing + invalid","operationId":"fill_fields_v1_llm_fill_fields_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/FillFieldsRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FillFieldsResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/api/new_token":{"post":{"tags":["api"],"summary":"生成新的API令牌","description":"生成新的API令牌\n\n该接口用于为指定租户生成新的API令牌。\n\n参数:\n- request: NewTokenRequest对象，包含租户的唯一标识符\n    - tenant_id: str 租户的唯一标识符\n\n返回:\n- 成功时返回包含新API令牌的JSON结果\n- 失败时返回错误信息","operationId":"new_token_v1_api_new_token_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NewTokenRequest"}}},"required":true},"responses":{"200":{"description":"成功生成新的API令牌","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/api/token_list":{"get":{"tags":["api"],"summary":"获取API令牌列表","description":"获取API令牌列表\n\n该接口用于获取指定对话的API令牌列表。\n\n参数:\n- dialog_id: str 对话的唯一标识符\n- canvas_id: str 画布的唯一标识符\n\n返回:\n- 成功时返回包含API令牌列表的JSON结果\n- 失败时返回错误信息","operationId":"token_list_v1_api_token_list_get","security":[{"LoginManager":[]}],"parameters":[{"name":"dialog_id","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Dialog Id"}},{"name":"canvas_id","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Canvas Id"}}],"responses":{"200":{"description":"成功获取API令牌列表","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/api/rm":{"post":{"tags":["api"],"summary":"删除API令牌","description":"删除API令牌\n\n该接口用于删除指定租户的API令牌。\n\n参数:\n- request: RemoveTokenRequest对象，包含要删除的API令牌和租户的唯一标识符\n    - tokens: List[str] 要删除的API令牌列表\n    - tenant_id: str 租户的唯一标识符\n\n返回:\n- 成功时返回成功删除的JSON结果\n- 失败时返回错误信息","operationId":"rm_v1_api_rm_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RemoveTokenRequest"}}},"required":true},"responses":{"200":{"description":"成功删除API令牌","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/api/stats":{"get":{"tags":["api"],"summary":"获取API使用统计","description":"获取API使用统计\n\n该接口用于获取API的使用统计信息。\n\n参数:\n- from_date: str 起始日期，格式为 YYYY-MM-DD，默认为过去7天\n- to_date: str 结束日期，格式为 YYYY-MM-DD，默认为当前日期\n\n返回:\n- 成功时返回包含API使用统计的JSON结果\n- 失败时返回错误信息","operationId":"stats_v1_api_stats_get","security":[{"LoginManager":[]}],"parameters":[{"name":"from_date","in":"query","required":false,"schema":{"type":"string","title":"From Date"}},{"name":"to_date","in":"query","required":false,"schema":{"type":"string","title":"To Date"}},{"name":"canvas_id","in":"query","required":false,"schema":{"type":"string","title":"Canvas Id"}}],"responses":{"200":{"description":"成功获取API使用统计","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/api/new_conversation":{"post":{"tags":["api"],"summary":"创建新对话","description":"创建新对话\n\n该接口用于创建新的对话。\n\n参数:\n- request: NewConversationRequest对象，包含用户的唯一标识符\n    - user_id: str 用户的唯一标识符\n\n返回:\n- 成功时返回包含新对话信息的JSON结果\n- 失败时返回错误信息","operationId":"set_conversation_v1_api_new_conversation_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NewConversationRequest"}}},"required":true},"responses":{"200":{"description":"成功创建新对话","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/api/completion":{"post":{"tags":["api"],"summary":"完成对话","description":"完成对话\n\n该接口用于完成指定对话，生成对话内容。\n\n参数:\n- request: CompletionRequest对象，包含对话的详细信息\n    - conversation_id: str 对话的唯一标识符\n    - messages: List[dict] 消息列表，每个消息包含角色和内容\n    - quote: Optional[bool] 是否引用，默认值为 False\n    - stream: Optional[bool] 是否使用流式响应，默认值为 True\n\n返回:\n- 成功时返回生成的对话内容\n- 失败时返回错误信息","operationId":"completion_v1_api_completion_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api__apps__api__CompletionRequest"}}},"required":true},"responses":{"200":{"description":"成功完成对话","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/api/conversation/{conversation_id}":{"get":{"tags":["api"],"summary":"获取对话详情","description":"获取对话详情\n\n该接口用于获取指定对话的详细信息。\n\n参数:\n- conversation_id: str 对话的唯一标识符\n\n返回:\n- 成功时返回包含对话详情的JSON结果\n- 失败时返回错误信息","operationId":"get_v1_api_conversation__conversation_id__get","parameters":[{"name":"conversation_id","in":"path","required":true,"schema":{"type":"string","title":"Conversation Id"}}],"responses":{"200":{"description":"成功获取对话详情","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/api/document/upload":{"post":{"tags":["api"],"summary":"上传文档","operationId":"upload_v1_api_document_upload_post","responses":{"200":{"description":"成功上传文档","content":{"application/json":{"schema":{}}}}}}},"/v1/api/list_chunks":{"post":{"tags":["api"],"summary":"列出文档块","operationId":"list_chunks_v1_api_list_chunks_post","responses":{"200":{"description":"成功列出文档块","content":{"application/json":{"schema":{}}}}}}},"/v1/api/list_kb_docs":{"post":{"tags":["api"],"summary":"列出知识库文档","description":"列出知识库文档\n\n该接口用于列出指定知识库的文档。\n\n参数:\n- request: ListKbDocsRequest对象，包含知识库的详细信息\n    - kb_name: str 知识库的名称\n    - page: Optional[int] 分页页码，默认值为 1\n    - page_size: Optional[int] 每页显示的文档数量，默认值为 15\n    - orderby: Optional[str] 排序字段，默认值为 \"create_time\"\n    - desc: Optional[bool] 是否按降序排序，默认值为 True\n    - keywords: Optional[str] 搜索关键字，默认值为空字符串\n\n返回:\n- 成功时返回包含文档列表的JSON结果\n- 失败时返回错误信息","operationId":"list_kb_docs_v1_api_list_kb_docs_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListKbDocsRequest"}}},"required":true},"responses":{"200":{"description":"成功列出知识库文档","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/api/infos":{"post":{"tags":["api"],"summary":"获取文档信息","operationId":"docinfos_v1_api_infos_post","requestBody":{"content":{"application/json":{"schema":{"items":{"type":"string"},"type":"array","title":"Doc Ids"}}},"required":true},"responses":{"200":{"description":"成功获取文档信息","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/api/document":{"delete":{"tags":["api"],"summary":"删除文档","operationId":"document_rm_v1_api_document_delete","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DocumentRemoveRequest"}}},"required":true},"responses":{"200":{"description":"成功删除文档","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/api/completion_aibotk":{"post":{"tags":["api"],"summary":"完成FAQ对话","description":"完成FAQ对话\n\n该接口用于完成FAQ对话，生成对话内容。\n\n参数:\n- request: CompletionFAQRequest对象，包含对话的详细信息\n    - Authorization: str 授权令牌\n    - conversation_id: str 对话的唯一标识符\n    - word: str 用户输入的关键词\n\n返回:\n- 成功时返回生成的对话内容\n- 失败时返回错误信息","operationId":"completion_faq_v1_api_completion_aibotk_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CompletionFAQRequest"}}},"required":true},"responses":{"200":{"description":"成功完成FAQ对话","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/api/retrieval":{"post":{"tags":["api"],"summary":"完成FAQ对话","operationId":"retrieval_v1_api_retrieval_post","parameters":[{"name":"request","in":"query","required":true,"schema":{"title":"Request"}},{"name":"question","in":"query","required":true,"schema":{"title":"Question"}}],"responses":{"200":{"description":"成功完成FAQ对话","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/chunk/list":{"post":{"tags":["chunk"],"summary":"列出文档块","description":"### POST `/list` 列出文档块接口\n\n**功能描述**:\n此接口用于根据文档 ID 列出文档块，支持分页查询、关键词搜索和高亮显示内容，返回匹配的文档块信息。\n\n---\n\n### 请求体 (Request Body)\n\n| 字段          | 类型          | 必填 | 描述                                                                                 |\n|---------------|---------------|------|--------------------------------------------------------------------------------------|\n| `doc_id`      | `string`      | 是   | 文档的唯一标识符。                                                                   |\n| `page`        | `int`         | 是   | 当前页码，用于分页查询。                                                             |\n| `size`        | `int`         | 是   | 每页返回的文档块数量。                                                               |\n| `keywords`    | `string`      | 否   | 搜索关键词，用于高亮匹配文档块的内容。                                               |\n\n---\n\n### 响应 (Response)\n\n#### 成功响应 (200)\n\n- **`Content-Type: application/json`**\n- **示例**:\n    ```json\n    {\n        \"retcode\": 0,\n        \"retmsg\": \"success\",\n        \"data\": {\n            \"total\": 2,\n            \"chunks\": [\n                {\n                    \"chunk_id\": \"chunk_001\",\n                    \"content_with_weight\": \"问题：人工智能是什么？ 答案：人工智能是计算机科学的一个分支。\",\n                    \"doc_id\": \"67890\",\n                    \"docnm_kwd\": [\"人工智能\"],\n                    \"important_kwd\": [\"计算机科学\"],\n                    \"img_id\": \"img_123\",\n                    \"available_int\": 1,\n                    \"positions\": [\n                        [0.1, 0.2, 0.3, 0.4, 0.5]\n                    ]\n                },\n                {\n                    \"chunk_id\": \"chunk_002\",\n                    \"content_with_weight\": \"人工智能涉及机器学习和深度学习。\",\n                    \"doc_id\": \"67890\",\n                    \"docnm_kwd\": [\"机器学习\"],\n                    \"important_kwd\": [\"深度学习\"],\n                    \"img_id\": \"img_124\",\n                    \"available_int\": 1,\n                    \"positions\": []\n                }\n            ],\n            \"doc\": {\n                \"doc_id\": \"67890\",\n                \"name\": \"人工智能概述\",\n                \"kb_id\": \"kb_001\"\n            }\n        }\n    }\n    ```\n\n#### 错误响应\n\n- **404: Tenant not found**\n    - **描述**: 当根据 `doc_id` 查询租户信息失败时，返回此错误。\n    - **示例**:\n        ```json\n        {\n            \"detail\": \"Tenant not found!\"\n        }\n        ```\n\n- **404: Document not found**\n    - **描述**: 当根据 `doc_id` 查询文档信息失败时，返回此错误。\n    - **示例**:\n        ```json\n        {\n            \"detail\": \"Document not found!\"\n        }\n        ```\n\n- **404: No chunk found**\n    - **描述**: 当没有找到匹配的文档块时，返回此错误。\n    - **示例**:\n        ```json\n        {\n            \"retcode\": 404,\n            \"retmsg\": \"No chunk found!\",\n            \"data\": false\n        }\n        ```\n\n- **500: 内部错误**\n    - **描述**: 当发生意外错误时，返回此错误。\n    - **示例**:\n        ```json\n        {\n            \"retcode\": 500,\n            \"retmsg\": \"Internal server error\",\n            \"detail\": \"具体错误信息\"\n        }\n        ```\n\n---\n\n### 主要流程\n\n1. 从请求体提取 `doc_id`、`page`、`size` 和 `keywords`。\n2. 验证文档块所属的租户 (`tenant_id`) 和文档是否存在。\n3. 根据分页参数和关键词搜索查询文档块数据。\n4. 处理搜索结果：\n    - 如果 `keywords` 存在，则高亮显示匹配的内容。\n    - 将位置信息按每 5 个数值分组，解析为数组结构。\n5. 返回文档块列表和文档基本信息。\n\n---\n\n### 注意事项\n\n- **关键词搜索**:\n    - 如果传入 `keywords`，将匹配的内容高亮显示。\n- **位置信息解析**:\n    - 位置信息字段 `positions` 的值按 5 个一组解析为数组结构，用于表示块的坐标或其他标记。\n- **分页查询**:\n    - `page` 和 `size` 字段控制分页查询，每次返回指定页码的文档块集合。\n- **高亮内容**:\n    - 若存在匹配的关键词，高亮显示结果会替换原始 `content_with_weight`。\n\n---\n\n### 示例请求\n\n#### 请求体:\n```json\n{\n    \"doc_id\": \"67890\",\n    \"page\": 1,\n    \"size\": 10,\n    \"keywords\": \"人工智能\"\n}\n```\n\n- **成功响应**:\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": {\n        \"total\": 2,\n        \"chunks\": [\n            {\n                \"chunk_id\": \"chunk_001\",\n                \"content_with_weight\": \"问题：人工智能是什么？ 答案：人工智能是计算机科学的一个分支。\",\n                \"doc_id\": \"67890\",\n                \"docnm_kwd\": [\"人工智能\"],\n                \"important_kwd\": [\"计算机科学\"],\n                \"img_id\": \"img_123\",\n                \"available_int\": 1,\n                \"positions\": [\n                    [0.1, 0.2, 0.3, 0.4, 0.5]\n                ]\n            }\n        ],\n        \"doc\": {\n            \"doc_id\": \"67890\",\n            \"name\": \"人工智能概述\",\n            \"kb_id\": \"kb_001\"\n        }\n    }\n}\n```\n\n- **错误响应 (无匹配文档块)**:\n```json\n{\n    \"retcode\": 404,\n    \"retmsg\": \"No chunk found!\",\n    \"data\": false\n}\n```","operationId":"list_chunk_v1_chunk_list_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListChunkRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/chunk/get":{"get":{"tags":["chunk"],"summary":"获取文档块","description":"### GET `/get` 获取文档块详细信息接口\n\n**功能描述**:\n此接口用于根据文档块ID获取文档块的详细信息，包括内容、关键词、位置信息等，同时会过滤掉向量和分词等技术字段。\n\n---\n\n### 请求参数 (Query Parameters)\n\n| 参数名     | 类型     | 必填 | 描述                    |\n|------------|----------|------|-------------------------|\n| `chunk_id` | `string` | 是   | 文档块的唯一标识符      |\n\n---\n\n### 响应 (Response)\n\n#### 成功响应 (200)\n- **`Content-Type: application/json`**\n- **示例**:\n    ```json\n    {\n        \"retcode\": 0,\n        \"retmsg\": \"success\",\n        \"data\": {\n            \"chunk_id\": \"chunk_123\",\n            \"content_with_weight\": \"文档块的内容\",\n            \"doc_id\": \"doc_456\",\n            \"docnm_kwd\": \"文档名称\",\n            \"important_kwd\": [\"关键词1\", \"关键词2\"],\n            \"question_kwd\": [\"问题关键词\"],\n            \"img_id\": \"img_789\",\n            \"available_int\": 1,\n            \"positions\": [[0.1, 0.2, 0.3, 0.4, 0.5]],\n            \"create_time\": \"2024-01-01 12:00:00\",\n            \"kb_id\": \"kb_001\"\n        }\n    }\n    ```\n\n#### 错误响应\n- **404: Tenant not found**\n    - 当用户没有关联的租户时返回此错误\n- **404: Chunk not found**\n    - 当指定的文档块不存在时返回此错误\n\n---\n\n### 主要流程\n1. 获取用户关联的所有租户信息\n2. 遍历租户下的所有知识库，查找指定的文档块\n3. 过滤技术字段（向量、分词等）\n4. 转换NumPy数据类型为Python原生类型\n5. 返回清理后的文档块信息\n\n---\n\n### 注意事项\n- **字段过滤**: 自动过滤以下技术字段：\n  - `_vec$`: 向量字段\n  - `_sm_`: 细粒度分词字段\n  - `_tks`: 分词字段\n  - `_ltks`: 长分词字段\n  - `vector`: 标准向量字段\n- **数据类型转换**: 自动将NumPy数据类型转换为JSON兼容的Python原生类型\n- **权限控制**: 只能获取用户有权限访问的租户下的文档块\n\n---\n\n### 使用示例\n\n#### 请求:\n```\nGET /get?chunk_id=chunk_123456\n```\n\n#### 成功响应:\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": {\n        \"chunk_id\": \"chunk_123456\",\n        \"content_with_weight\": \"这是一个关于机器学习的文档块内容\",\n        \"doc_id\": \"doc_789\",\n        \"docnm_kwd\": \"机器学习入门.pdf\",\n        \"important_kwd\": [\"机器学习\", \"算法\"],\n        \"available_int\": 1\n    }\n}\n```\n\n#### 错误响应:\n```json\n{\n    \"retcode\": 404,\n    \"retmsg\": \"Chunk not found!\",\n    \"data\": false\n}\n```","operationId":"get_v1_chunk_get_get","security":[{"LoginManager":[]}],"parameters":[{"name":"chunk_id","in":"query","required":true,"schema":{"type":"string","title":"Chunk Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/chunk/set":{"post":{"tags":["chunk"],"summary":"设置文档块","description":"### POST `/set` 设置文档块接口\n\n**功能描述**:\n此接口用于设置和更新文档块，支持处理内容的分词、关键词提取、问答模式验证以及向量计算，并将结果存储到数据库中。\n\n---\n\n### 请求体 (Request Body)\n\n| 字段                  | 类型          | 必填 | 描述                                                                                 |\n|-----------------------|---------------|------|--------------------------------------------------------------------------------------|\n| `chunk_id`            | `string`     | 是   | 文档块的唯一标识符。                                                                 |\n| `doc_id`              | `string`     | 是   | 所属文档的唯一标识符。                                                               |\n| `content_with_weight` | `string`     | 是   | 带权重的内容字符串，用于分词和向量计算。                                             |\n| `important_kwd`       | `list[str]`  | 否   | 重要关键词列表，用于额外的分词和向量计算。                                            |\n| `question_kwd`        | `list[str]`  | 否   | 问题关键词列表，用于问答模式或补充向量计算。                                          |\n| `available_int`       | `int`        | 否   | 可用性标记，用于记录当前文档块的可用状态。                                            |\n\n---\n\n### 响应 (Response)\n\n#### 成功响应 (200)\n\n- **`Content-Type: application/json`**\n- **示例**:\n    ```json\n    {\n        \"retcode\": 0,\n        \"retmsg\": \"success\",\n        \"data\": true\n    }\n    ```\n\n#### 错误响应\n\n- **404: Tenant not found**\n    - **描述**: 当根据 `doc_id` 查询租户信息失败时，返回此错误。\n    - **示例**:\n        ```json\n        {\n            \"detail\": \"Tenant not found!\"\n        }\n        ```\n\n- **404: Document not found**\n    - **描述**: 当根据 `doc_id` 查询文档信息失败时，返回此错误。\n    - **示例**:\n        ```json\n        {\n            \"detail\": \"Document not found!\"\n        }\n        ```\n\n- **400: Q&A 格式错误**\n    - **描述**: 当文档块的内容不符合问答模式的要求时返回此错误。\n    - **示例**:\n        ```json\n        {\n            \"retcode\": 400,\n            \"retmsg\": \"Q&A must be separated by TAB/ENTER key.\"\n        }\n        ```\n\n- **500: 内部错误**\n    - **描述**: 当发生意外错误时，返回此错误。\n    - **示例**:\n        ```json\n        {\n            \"retcode\": 500,\n            \"retmsg\": \"Internal server error\",\n            \"detail\": \"具体错误信息\"\n        }\n        ```\n\n---\n\n### 主要流程\n\n1. 从请求体提取内容并解析关键词。\n    - 对 `content_with_weight` 执行分词。\n    - 分析重要关键词 (`important_kwd`) 和问题关键词 (`question_kwd`)。\n2. 验证文档块所属的租户 (`tenant_id`) 和文档是否存在。\n3. 判断文档解析类型 (`parser_id`)，处理问答模式的特殊逻辑：\n    - 验证问答内容是否由 TAB 或 ENTER 分隔。\n    - 检测问答内容的语言特性（是否包含中文）。\n4. 通过向量模型生成文档块的语义向量。\n5. 更新数据库：\n    - 根据主键 (`chunk_id`) 更新或插入文档块数据。\n    - 将内容、关键词及向量信息存储到对应的知识库中。\n\n---\n\n### 注意事项\n\n- **问答模式验证**:\n    - 文档解析类型为 `QA` 时，`content_with_weight` 必须包含两个部分（问题和答案），通过 TAB 或 ENTER 分隔。\n    - 自动判断问答内容的语言，决定是否使用特定的分词逻辑。\n- **向量计算**:\n    - 文档块的向量由内容和关键词生成。\n    - 支持加权计算：如果 `question_kwd` 存在，则使用其内容替代默认的内容生成逻辑。\n    - 当前向量字段名为 `vector`，未来可能支持动态字段名。\n- **数据库更新**:\n    - 更新操作基于主键 `chunk_id`。\n    - 确保知识库名称 (`kb.name`) 与租户信息一致。\n\n---\n\n### 示例请求\n\n#### 请求体:\n```json\n{\n    \"chunk_id\": \"12345\",\n    \"doc_id\": \"67890\",\n    \"content_with_weight\": \"问题：人工智能是什么？\n答案：人工智能是计算机科学的一个分支。\",\n    \"important_kwd\": [\"人工智能\", \"计算机科学\"],\n    \"question_kwd\": [\"人工智能是什么\", \"计算机科学\"],\n    \"available_int\": 1\n}\n```\n\n- **成功响应**:\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": true\n}\n```\n\n- **错误响应 (问答格式错误)**:\n```json\n{\n    \"retcode\": 400,\n    \"retmsg\": \"Q&A must be separated by TAB/ENTER key.\"\n}\n```","operationId":"set_v1_chunk_set_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SetChunkRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/chunk/switch":{"post":{"tags":["chunk"],"summary":"切换文档块状态","description":"### POST `/switch` 切换文档块状态接口\n\n**功能描述**:\n此接口用于批量切换指定文档中多个文档块的可用状态，支持启用或禁用文档块在检索中的可见性。\n\n---\n\n### 请求体 (Request Body)\n\n| 字段            | 类型           | 必填 | 描述                                                    |\n|-----------------|----------------|------|---------------------------------------------------------|\n| `doc_id`        | `string`       | 是   | 文档的唯一标识符                                        |\n| `chunk_ids`     | `list[string]` | 是   | 要切换状态的文档块ID列表                                |\n| `available_int` | `int`          | 是   | 新的可用状态 (1: 启用, 0: 禁用)                         |\n\n---\n\n### 响应 (Response)\n\n#### 成功响应 (200)\n- **`Content-Type: application/json`**\n- **示例**:\n    ```json\n    {\n        \"retcode\": 0,\n        \"retmsg\": \"success\",\n        \"data\": true\n    }\n    ```\n\n#### 错误响应\n- **404: Document not found**\n    - 当指定的文档不存在时返回此错误\n- **400: Index updating failure**\n    - 当更新索引失败时返回此错误\n\n---\n\n### 主要流程\n1. 验证文档存在性\n2. 获取文档所属的知识库信息\n3. 批量更新指定文档块的可用状态\n4. 返回操作结果\n\n---\n\n### 使用示例\n\n#### 启用文档块:\n```json\n{\n    \"doc_id\": \"doc_123\",\n    \"chunk_ids\": [\"chunk_001\", \"chunk_002\"],\n    \"available_int\": 1\n}\n```\n\n#### 禁用文档块:\n```json\n{\n    \"doc_id\": \"doc_123\",\n    \"chunk_ids\": [\"chunk_003\", \"chunk_004\"],\n    \"available_int\": 0\n}\n```","operationId":"switch_v1_chunk_switch_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SwitchChunkRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/chunk/rm":{"post":{"tags":["chunk"],"summary":"删除文档块","description":"### POST `/rm` 删除文档块接口\n\n**功能描述**:\n此接口用于删除指定文档的块数据，同时更新相关的索引和文档统计信息。\n\n---\n\n### 请求体 (Request Body)\n\n| 字段       | 类型          | 必填 | 描述                     |\n|------------|---------------|------|--------------------------|\n| `doc_id`   | `string`      | 是   | 需要操作的文档唯一标识符 |\n| `chunk_ids`| `list[string]`| 是   | 要删除的文档块 ID 列表   |\n\n---\n\n### 响应 (Response)\n\n#### 成功响应 (200)\n\n- **`Content-Type: application/json`**\n- **示例**:\n    ```json\n    {\n        \"retcode\": 0,\n        \"retmsg\": \"success\",\n        \"data\": true\n    }\n    ```\n\n#### 错误响应\n\n- **404: Document not found**\n    - **描述**: 当根据 `doc_id` 查询不到对应文档时返回此错误。\n    - **示例**:\n        ```json\n        {\n            \"retcode\": 404,\n            \"retmsg\": \"Document not found!\"\n        }\n        ```\n\n- **404: KnowledgeBase not found**\n    - **描述**: 当文档对应的知识库不存在时返回此错误。\n    - **示例**:\n        ```json\n        {\n            \"retcode\": 404,\n            \"retmsg\": \"KnowledgeBase not found!\"\n        }\n        ```\n\n- **400: Index updating failure**\n    - **描述**: 当删除索引中的文档块失败时返回此错误。\n    - **示例**:\n        ```json\n        {\n            \"retcode\": 400,\n            \"retmsg\": \"Index updating failure\"\n        }\n        ```\n\n- **500: 内部错误**\n    - **描述**: 当发生意外错误时返回此错误。\n    - **示例**:\n        ```json\n        {\n            \"retcode\": 500,\n            \"retmsg\": \"Internal server error\",\n            \"detail\": \"具体错误信息\"\n        }\n        ```\n\n---\n\n### 主要流程\n\n1. 验证文档和知识库的存在性：\n    - 根据 `doc_id` 获取文档信息。\n    - 根据文档的 `kb_id` 获取知识库信息。\n2. 删除索引中的指定文档块：\n    - 调用 `delete` 方法从索引中删除文档块。\n3. 更新文档的块统计信息：\n    - 调用 `DocumentService.decrement_chunk_num` 减少文档的块数量统计。\n4. 返回操作结果。\n\n---\n\n### 注意事项\n\n- **索引删除**:\n  文档块的删除操作会同步影响索引中的数据，确保 `chunk_ids` 的完整性和正确性。\n- **统计更新**:\n  删除操作会调整文档的块数量统计，若删除操作失败，将不更新统计信息。\n\n---\n\n### 示例请求\n\n#### 请求体:\n```json\n{\n    \"doc_id\": \"12345\",\n    \"chunk_ids\": [\"67890\", \"98765\"]\n}\n```\n\n- **成功响应**:\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": true\n}\n```\n\n- **错误响应 (文档不存在)**:\n```json\n{\n    \"retcode\": 404,\n    \"retmsg\": \"Document not found!\"\n}\n```\n```json\n{\n    \"retcode\": 400,\n    \"retmsg\": \"Index updating failure\"\n}\n```\n```json\n{\n    \"retcode\": 500,\n    \"retmsg\": \"Internal server error\",\n    \"detail\": \"详细的错误信息\"\n}\n```","operationId":"rm_v1_chunk_rm_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RmChunkRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/chunk/create":{"post":{"tags":["chunk"],"summary":"创建文档块","description":"### POST `/create` 创建文档块接口\n\n**功能描述**:\n此接口用于创建文档块，支持内容分词、关键词提取、向量计算，并将生成的数据存储到数据库和知识库中。\n\n---\n\n### 请求体 (Request Body)\n\n| 字段                  | 类型           | 必填 | 描述                                              |\n|-----------------------|----------------|------|---------------------------------------------------|\n| `doc_id`             | `string`      | 是   | 文档的唯一标识符。                                |\n| `content_with_weight`| `string`      | 是   | 包含权重的内容字符串，用于分词和向量计算。        |\n| `question_kwd`       | `list[string]`| 否   | 问题关键词列表，用于问答模式或补充向量计算。      |\n| `important_kwd`      | `list[string]`| 否   | 重要关键词列表，用于额外的分词和向量计算。        |\n\n---\n\n### 响应 (Response)\n\n#### 成功响应 (200)\n\n- **`Content-Type: application/json`**\n- **示例**:\n    ```json\n    {\n        \"retcode\": 0,\n        \"retmsg\": \"success\",\n        \"data\": {\n            \"chunk_id\": \"a1b2c3d4e5\"\n        }\n    }\n    ```\n\n#### 错误响应\n\n- **404: Document not found**\n    - **描述**: 当根据 `doc_id` 查询文档信息失败时，返回此错误。\n    - **示例**:\n        ```json\n        {\n            \"detail\": \"Document not found!\"\n        }\n        ```\n\n- **404: Tenant not found**\n    - **描述**: 当根据 `doc_id` 查询租户信息失败时，返回此错误。\n    - **示例**:\n        ```json\n        {\n            \"detail\": \"Tenant not found!\"\n        }\n        ```\n\n- **404: Knowledgebase not found**\n    - **描述**: 当根据 `kb_id` 查询知识库信息失败时，返回此错误。\n    - **示例**:\n        ```json\n        {\n            \"detail\": \"Knowledgebase not found!\"\n        }\n        ```\n\n- **500: 内部错误**\n    - **描述**: 当发生意外错误时，返回此错误。\n    - **示例**:\n        ```json\n        {\n            \"retcode\": 500,\n            \"retmsg\": \"Internal server error\",\n            \"detail\": \"具体错误信息\"\n        }\n        ```\n\n---\n\n### 主要流程\n\n1. 解析请求体内容并生成唯一标识符 (`chunk_id`)。\n    - 基于 `content_with_weight` 和 `doc_id` 计算 MD5 哈希值作为 `chunk_id`。\n2. 分词与关键词提取:\n    - 对 `content_with_weight` 进行分词 (`content_ltks`) 和细粒度分词 (`content_sm_ltks`)。\n    - 对 `important_kwd` 提取关键词并分词 (`important_tks`)。\n3. 检查文档 (`doc_id`) 所属租户和知识库信息:\n    - 如果文档或知识库不存在，返回相应的错误响应。\n4. 向量计算:\n    - 使用嵌入模型 (`LLMBundle`) 对文档标题和内容生成语义向量 (`vector`)。\n    - 支持权重配置 (`0.1` 标题向量 + `0.9` 内容向量)。\n5. 数据存储:\n    - 将分词结果、关键词、向量等数据存入知识库。\n6. 更新文档块计数:\n    - 调用 `DocumentService.increment_chunk_num` 更新文档块的相关计数。\n\n---\n\n### 注意事项\n\n- **关键词提取**:\n    - `important_kwd` 提供额外的分词和向量计算输入。\n    - 如果关键词为空，系统会自动跳过对应处理。\n- **向量计算**:\n    - 使用权重对标题和内容向量进行加权合成。\n    - 当前支持固定字段名 `vector`，未来可能支持动态配置。\n- **错误处理**:\n    - 针对文档、租户和知识库的不存在分别返回特定错误响应。\n    - 捕获所有异常并返回服务器错误响应。\n\n---\n\n### 示例请求\n\n#### 请求体:\n```json\n{\n    \"doc_id\": \"doc123\",\n    \"content_with_weight\": \"文本内容带权重的示例\",\n    \"important_kwd\": [\"关键词1\", \"关键词2\"],\n    \"question_kwd\": [\"问题关键词1\", \"问题关键词2\"]\n}\n```\n\n- **成功响应**:\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": {\n        \"chunk_id\": \"a1b2c3d4e5\"\n    }\n}\n```\n\n- **错误响应 (文档不存在):**:\n```json\n{\n    \"detail\": \"Document not found!\"\n}\n```","operationId":"create_v1_chunk_create_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateChunkRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/chunk/retrieval_test":{"post":{"tags":["chunk"],"summary":"检索测试","description":"检索测试接口\n\n该接口用于测试不同类型的检索策略，支持多种搜索模式，包括向量检索、全文检索、混合检索和融合检索。\n\n## 请求参数\n\n### 基础参数\n- **kb_ids**: 知识库ID列表，必填。指定要在哪些知识库中进行检索\n- **question**: 检索问题，必填。用户输入的查询文本\n- **page**: 页码，默认为1。用于分页返回结果\n- **size**: 每页返回的结果数量，默认为30\n- **doc_ids**: 文档ID列表，可选。限制只在指定的文档中检索\n- **similarity_threshold**: 相似度阈值，默认为0.0。低于此阈值的结果将被过滤\n- **vector_similarity_weight**: 向量相似度权重，默认为0.3。用于重新排序阶段的权重调整\n- **use_kg**: 是否使用知识图谱，默认为False。启用后会结合知识图谱进行检索\n- **top_k**: 最大召回数量，默认为1024。初始检索阶段返回的最大结果数\n- **rerank_id**: 重排序模型ID，可选。用于对初始检索结果进行重新排序\n- **highlight**: 是否高亮显示匹配文本，默认为False\n- **keyword**: 是否进行关键词提取增强，默认为False。启用后会自动提取问题关键词\n- **cross_languages**: 跨语言翻译列表，可选。指定要将问题翻译成的目标语言列表，如[\"English\", \"French\"]\n\n### 搜索模式 (search_mode)\n搜索模式决定了使用哪种检索策略，支持以下四种类型：\n\n#### 1. 稀疏检索 (Sparse Search)「也叫全文检索」\n```json\n{\n    \"type\": \"sparse\"\n}\n```\n- **描述**: 基于关键词和词频的传统全文检索\n- **适用场景**:\n  - 专业术语查询\n  - 特定代码、型号或标识符搜索\n  - 需要精确关键词匹配的场景\n- **特点**: 快速、精确匹配，但不理解语义关系\n\n#### 2. 密集检索 (Dense Search)「暂时不启用，传惨不报错」\n```json\n{\n    \"type\": \"dense\"\n}\n```\n- **描述**: 基于向量嵌入的语义检索\n- **适用场景**:\n  - 概念性问题查询\n  - 同义词和相关概念搜索\n  - 需要理解语义关系的场景\n- **特点**: 理解语义，但可能错过精确关键词匹配\n\n#### 3. 混合检索 (Hybrid Search)\n```json\n{\n    \"type\": \"hybrid\",\n    \"weight_dense\": 0.7,\n    \"weight_sparse\": 0.3\n}\n```\n- **描述**: 结合稀疏检索和密集检索的优势\n- **参数**:\n  - `weight_dense`: 向量检索权重 (0.0-1.0)，默认0.7\n  - `weight_sparse`: 全文检索权重 (0.0-1.0)，默认0.3\n  - 权重和会自动归一化为1.0\n- **权重推荐**:\n  - `[0.8, 0.2]`: 偏向语义理解 (概念性问题)\n  - `[0.7, 0.3]`: 平衡配置 (通用推荐)\n  - `[0.4, 0.6]`: 偏向关键词匹配 (专业术语)\n  - `[0.2, 0.8]`: 强调精确匹配 (代码、API等)\n\n#### 4. 向量融合检索 (Fusion Search)「默认检索模式」\n```json\n{\n    \"type\": \"fusion\",\n    \"weights\": \"0.05,0.95\"\n}\n```\n- **描述**: 传统的检索融合策略\n- **参数**:\n  - `weights`: \"文本权重,向量权重\" 格式的字符串，默认\"0.05,0.95\"\n- **特点**: 如果不指定search_mode，将使用此模式作为默认值\n\n## 返回结果\n\n成功时返回JSON格式结果：\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": {\n        \"total\": 100,\n        \"chunks\": [\n            {\n                \"chunk_id\": \"chunk_123\",\n                \"text\": \"检索到的文本内容\",\n                \"doc_id\": \"doc_456\",\n                \"docnm_kwd\": \"文档名称\",\n                \"kb_id\": \"kb_789\",\n                \"similarity\": 0.85,\n                \"vector_similarity\": 0.82,\n                \"term_similarity\": 0.88,\n                \"highlight\": \"高亮显示的内容\",\n                \"positions\": [...]\n            }\n        ],\n        \"doc_aggs\": [\n            {\n                \"doc_name\": \"文档1\",\n                \"doc_id\": \"doc_456\",\n                \"count\": 5\n            }\n        ],\n        \"labels\": {...}\n    }\n}\n```\n\n## 使用示例\n\n### 基础检索\n```json\n{\n    \"kb_ids\": [\"kb_123\"],\n    \"question\": \"什么是机器学习？\"\n}\n```\n\n### 混合检索（概念性查询）\n```json\n{\n    \"kb_ids\": [\"kb_123\"],\n    \"question\": \"深度学习的原理是什么？\",\n    \"search_mode\": {\n        \"type\": \"hybrid\",\n        \"weight_dense\": 0.8,\n        \"weight_sparse\": 0.2\n    }\n}\n```\n\n### 精确匹配查询\n```json\n{\n    \"kb_ids\": [\"kb_123\"],\n    \"question\": \"getUserInfo API参数\",\n    \"search_mode\": {\n        \"type\": \"hybrid\",\n        \"weight_dense\": 0.3,\n        \"weight_sparse\": 0.7\n    }\n}\n```\n\n### 高级配置\n```json\n{\n    \"kb_ids\": [\"kb_123\"],\n    \"question\": \"如何优化模型性能？\",\n    \"page\": 1,\n    \"size\": 20,\n    \"similarity_threshold\": 0.1,\n    \"vector_similarity_weight\": 0.7,\n    \"use_kg\": true,\n    \"rerank_id\": \"rerank_model_123\",\n    \"highlight\": true,\n    \"keyword\": true,\n    \"search_mode\": {\n        \"type\": \"hybrid\",\n        \"weight_dense\": 0.75,\n        \"weight_sparse\": 0.25\n    }\n}\n```\n\n### 跨语言检索\n```json\n{\n    \"kb_ids\": [\"kb_123\"],\n    \"question\": \"什么是机器学习？\",\n    \"cross_languages\": [\"English\", \"French\"],\n    \"search_mode\": {\n        \"type\": \"hybrid\",\n        \"weight_dense\": 0.7,\n        \"weight_sparse\": 0.3\n    }\n}\n```\n\n## 错误处理\n\n- **权限错误**: 只有知识库的所有者才能进行检索测试\n- **知识库不存在**: 指定的知识库ID无效\n- **无结果**: 未找到匹配的内容块\n- **参数错误**: 搜索模式参数格式错误\n\n## 性能优化建议\n\n1. **合理设置top_k**: 过大会影响性能，过小可能遗漏相关结果\n2. **调整相似度阈值**: 根据业务需求设置合适的similarity_threshold\n3. **选择合适的搜索模式**: 根据查询类型选择最优的检索策略\n4. **使用重排序**: 对于对质量要求高的场景，建议使用rerank_id","operationId":"retrieval_test_v1_chunk_retrieval_test_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RetrievalTestRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/chunk/knowledge_graph":{"get":{"tags":["chunk"],"summary":"获取知识图谱","description":"### GET `/knowledge_graph` 获取文档知识图谱接口\n\n**功能描述**:\n此接口用于获取指定文档的知识图谱和思维导图数据，支持图形化展示文档中的实体关系和层次结构。\n\n---\n\n### 请求参数 (Query Parameters)\n\n| 参数名   | 类型     | 必填 | 描述                    |\n|----------|----------|------|-------------------------|\n| `doc_id` | `string` | 是   | 文档的唯一标识符        |\n\n---\n\n### 响应 (Response)\n\n#### 成功响应 (200)\n- **`Content-Type: application/json`**\n- **示例**:\n    ```json\n    {\n        \"retcode\": 0,\n        \"retmsg\": \"success\",\n        \"data\": {\n            \"graph\": {\n                \"nodes\": [\n                    {\"id\": \"entity1\", \"label\": \"实体1\", \"type\": \"person\"},\n                    {\"id\": \"entity2\", \"label\": \"实体2\", \"type\": \"organization\"}\n                ],\n                \"edges\": [\n                    {\"source\": \"entity1\", \"target\": \"entity2\", \"relation\": \"works_for\"}\n                ]\n            },\n            \"mind_map\": {\n                \"id\": \"root\",\n                \"label\": \"主题\",\n                \"children\": [\n                    {\n                        \"id\": \"subtopic1\",\n                        \"label\": \"子主题1\",\n                        \"children\": []\n                    }\n                ]\n            }\n        }\n    }\n    ```\n\n---\n\n### 主要流程\n1. 根据文档ID获取租户信息\n2. 构建知识图谱搜索查询\n3. 从索引中检索图谱和思维导图数据\n4. 解析JSON格式的图谱内容\n5. 处理思维导图节点重复问题\n6. 返回结构化的图谱数据\n\n---\n\n### 注意事项\n- **当前状态**: 此功能目前处于开发阶段，需要调整Milvus集合schema以支持knowledge_graph_kwd字段\n- **数据格式**: 返回的图谱数据为JSON格式，包含节点和边的信息\n- **重复处理**: 思维导图中的重复节点会自动添加序号标识\n- **权限控制**: 只能访问用户有权限的文档\n\n---\n\n### 返回数据结构\n\n#### 知识图谱 (graph)\n- **nodes**: 实体节点数组\n  - `id`: 节点唯一标识\n  - `label`: 节点显示名称\n  - `type`: 节点类型（如person, organization等）\n- **edges**: 关系边数组\n  - `source`: 源节点ID\n  - `target`: 目标节点ID\n  - `relation`: 关系类型\n\n#### 思维导图 (mind_map)\n- **层次结构**: 树形结构数据\n  - `id`: 节点唯一标识\n  - `label`: 节点显示名称\n  - `children`: 子节点数组\n\n---\n\n### 使用示例\n\n#### 请求:\n```\nGET /knowledge_graph?doc_id=doc_123456\n```\n\n#### 成功响应:\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": {\n        \"graph\": {},\n        \"mind_map\": {}\n    }\n}\n```","operationId":"knowledge_graph_v1_chunk_knowledge_graph_get","security":[{"LoginManager":[]}],"parameters":[{"name":"doc_id","in":"query","required":true,"schema":{"type":"string","title":"Doc Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/guard_relationship/service-library/bind":{"post":{"tags":["guard_relationship"],"summary":"绑定词库到服务","description":"绑定词库到服务\n\nArgs:\n    request: 绑定请求参数\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 绑定结果","operationId":"bind_service_library_v1_guard_relationship_service_library_bind_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BindServiceLibraryRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Bind Service Library V1 Guard Relationship Service Library Bind Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/guard_relationship/service-library/service/{service_id}":{"get":{"tags":["guard_relationship"],"summary":"获取服务绑定的词库","description":"获取服务绑定的词库列表\n\nArgs:\n    service_id: 服务ID\n    enabled_only: 是否只返回启用的\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 词库列表","operationId":"get_service_libraries_v1_guard_relationship_service_library_service__service_id__get","security":[{"LoginManager":[]}],"parameters":[{"name":"service_id","in":"path","required":true,"schema":{"type":"string","title":"Service Id"}},{"name":"enabled_only","in":"query","required":false,"schema":{"type":"boolean","default":true,"title":"Enabled Only"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Service Libraries V1 Guard Relationship Service Library Service  Service Id  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/guard_relationship/service-library/library/{library_id}":{"get":{"tags":["guard_relationship"],"summary":"获取使用词库的服务","description":"获取使用词库的服务列表\n\nArgs:\n    library_id: 词库ID\n    enabled_only: 是否只返回启用的\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 服务列表","operationId":"get_library_services_v1_guard_relationship_service_library_library__library_id__get","security":[{"LoginManager":[]}],"parameters":[{"name":"library_id","in":"path","required":true,"schema":{"type":"string","title":"Library Id"}},{"name":"enabled_only","in":"query","required":false,"schema":{"type":"boolean","default":true,"title":"Enabled Only"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Library Services V1 Guard Relationship Service Library Library  Library Id  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/guard_relationship/service-library/batch-bind":{"post":{"tags":["guard_relationship"],"summary":"批量绑定词库到服务","description":"批量绑定词库到服务\n\nArgs:\n    request: 批量绑定请求参数\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 绑定结果","operationId":"batch_bind_service_libraries_v1_guard_relationship_service_library_batch_bind_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BatchBindRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Batch Bind Service Libraries V1 Guard Relationship Service Library Batch Bind Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/guard_relationship/service-library/unbind":{"delete":{"tags":["guard_relationship"],"summary":"解绑服务词库","description":"解绑服务词库关系\n\nArgs:\n    service_id: 服务ID\n    library_id: 词库ID\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 解绑结果","operationId":"unbind_service_library_v1_guard_relationship_service_library_unbind_delete","security":[{"LoginManager":[]}],"parameters":[{"name":"service_id","in":"query","required":true,"schema":{"type":"string","title":"Service Id"}},{"name":"library_id","in":"query","required":true,"schema":{"type":"string","title":"Library Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Unbind Service Library V1 Guard Relationship Service Library Unbind Delete"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/guard_relationship/label-library/bind":{"post":{"tags":["guard_relationship"],"summary":"绑定词库到标签","description":"绑定词库到标签\n\nArgs:\n    request: 绑定请求参数\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 绑定结果","operationId":"bind_label_library_v1_guard_relationship_label_library_bind_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BindLabelLibraryRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Bind Label Library V1 Guard Relationship Label Library Bind Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/guard_relationship/label-library/label/{label_id}":{"get":{"tags":["guard_relationship"],"summary":"获取标签绑定的词库","description":"获取标签绑定的词库列表\n\nArgs:\n    label_id: 标签ID\n    enabled_only: 是否只返回启用的\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 词库列表","operationId":"get_label_libraries_v1_guard_relationship_label_library_label__label_id__get","security":[{"LoginManager":[]}],"parameters":[{"name":"label_id","in":"path","required":true,"schema":{"type":"string","title":"Label Id"}},{"name":"enabled_only","in":"query","required":false,"schema":{"type":"boolean","default":true,"title":"Enabled Only"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Label Libraries V1 Guard Relationship Label Library Label  Label Id  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/guard_relationship/label-library/library/{library_id}":{"get":{"tags":["guard_relationship"],"summary":"获取使用词库的标签","description":"获取使用词库的标签列表\n\nArgs:\n    library_id: 词库ID\n    enabled_only: 是否只返回启用的\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 标签列表","operationId":"get_library_labels_v1_guard_relationship_label_library_library__library_id__get","security":[{"LoginManager":[]}],"parameters":[{"name":"library_id","in":"path","required":true,"schema":{"type":"string","title":"Library Id"}},{"name":"enabled_only","in":"query","required":false,"schema":{"type":"boolean","default":true,"title":"Enabled Only"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Library Labels V1 Guard Relationship Label Library Library  Library Id  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/guard_relationship/label-library/batch-bind":{"post":{"tags":["guard_relationship"],"summary":"批量绑定词库到标签","description":"批量绑定词库到标签\n\nArgs:\n    request: 批量绑定请求参数\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 绑定结果","operationId":"batch_bind_label_libraries_v1_guard_relationship_label_library_batch_bind_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BatchBindRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Batch Bind Label Libraries V1 Guard Relationship Label Library Batch Bind Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/guard_relationship/label-library/unbind":{"delete":{"tags":["guard_relationship"],"summary":"解绑标签词库","description":"解绑标签词库关系\n\nArgs:\n    label_id: 标签ID\n    library_id: 词库ID\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 解绑结果","operationId":"unbind_label_library_v1_guard_relationship_label_library_unbind_delete","security":[{"LoginManager":[]}],"parameters":[{"name":"label_id","in":"query","required":true,"schema":{"type":"string","title":"Label Id"}},{"name":"library_id","in":"query","required":true,"schema":{"type":"string","title":"Library Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Unbind Label Library V1 Guard Relationship Label Library Unbind Delete"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/guard_relationship/binding/update":{"put":{"tags":["guard_relationship"],"summary":"更新绑定关系","description":"更新绑定关系\n\nArgs:\n    request: 更新请求参数\n    binding_type: 绑定类型\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 更新结果","operationId":"update_binding_v1_guard_relationship_binding_update_put","security":[{"LoginManager":[]}],"parameters":[{"name":"binding_type","in":"query","required":true,"schema":{"type":"string","title":"Binding Type"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateBindingRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Update Binding V1 Guard Relationship Binding Update Put"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/guard_relationship/stats":{"get":{"tags":["guard_relationship"],"summary":"获取关系统计","description":"获取关系统计信息\n\nArgs:\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 统计信息","operationId":"get_relationship_stats_v1_guard_relationship_stats_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Relationship Stats V1 Guard Relationship Stats Get"}}}}},"security":[{"LoginManager":[]}]}},"/v1/guard_relationship/library/{library_id}/usage":{"get":{"tags":["guard_relationship"],"summary":"获取词库使用情况","description":"获取词库使用情况\n\nArgs:\n    library_id: 词库ID\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 使用情况","operationId":"get_library_usage_v1_guard_relationship_library__library_id__usage_get","security":[{"LoginManager":[]}],"parameters":[{"name":"library_id","in":"path","required":true,"schema":{"type":"string","title":"Library Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Library Usage V1 Guard Relationship Library  Library Id  Usage Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/guard_relationship/label-library/sync-to-dimension":{"post":{"tags":["guard_relationship"],"summary":"同步词库到维度所有标签","description":"将词库同步到指定维度的所有标签\n\nArgs:\n    library_id: 词库ID\n    dimension_id: 维度ID\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 同步结果","operationId":"sync_library_to_dimension_v1_guard_relationship_label_library_sync_to_dimension_post","security":[{"LoginManager":[]}],"parameters":[{"name":"library_id","in":"query","required":true,"schema":{"type":"string","title":"Library Id"}},{"name":"dimension_id","in":"query","required":true,"schema":{"type":"string","title":"Dimension Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Sync Library To Dimension V1 Guard Relationship Label Library Sync To Dimension Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/aiforbi/nl2sql":{"post":{"tags":["aiforbi"],"summary":"自然语言转SQL","description":"自然语言转SQL接口\n\n此接口接收用户的自然语言问题、数据表结构和指定的语言模型名称，返回相应的SQL查询语句。\n\n参数:\n- body: NL2SQLReqBody\n  - user_question: 用户的自然语言问题\n  - table_structure: 数据表结构\n  - llm_name: 使用的语言模型名称\n- db: 数据库会话，由FastAPI依赖注入\n- user: 当前用户，由FastAPI依赖注入\n\n返回:\n- ResponseSchema对象，包含:\n  - status: 操作状态（成功/失败）\n  - data: 生成的SQL查询语句","operationId":"nl2sql_v1_aiforbi_nl2sql_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NL2SQLReqBody"}}},"required":true},"responses":{"200":{"description":"成功生成SQL查询语句","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/aiforbi/chart-type":{"post":{"tags":["aiforbi"],"summary":"获取推荐图表类型","description":"图表类型推荐接口\n\n此接口基于用户问题和SQL查询结果，推荐适合的图表类型。\n\n参数:\n- body: ChartTypeReqBody\n  - user_question: 用户的问题\n  - sql_result: SQL查询的结果\n  - llm_name: 使用的语言模型名称\n- db: 数据库会话，由FastAPI依赖注入\n- user: 当前用户，由FastAPI依赖注入\n\n返回:\n- ResponseSchema对象，包含:\n  - status: 操作状态（成功/失败）\n  - data: 推荐的图表类型列表","operationId":"chart_type_v1_aiforbi_chart_type_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChartTypeReqBody"}}},"required":true},"responses":{"200":{"description":"成功获取推荐图表类型列表","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/aiforbi/dynamic-chart-option-function":{"post":{"tags":["aiforbi"],"summary":"动态生成图表配置","description":"动态图表选项生成接口\n\n此接口根据用户问题、SQL查询结果和选定的图表类型，生成用于创建图表的动态选项函数。\n\n参数:\n- body: DynamicChartOptionFunctionReqBody\n  - user_question: 用户的问题\n  - sql_result: SQL查询的结果\n  - chart_type: 选定的图表类型\n  - llm_name: 使用的语言模型名称\n- db: 数据库会话，由FastAPI依赖注入\n- user: 当前用户，由FastAPI依赖注入\n\n返回:\n- ResponseSchema对象，包含:\n  - status: 操作状态（成功/失败）\n  - data: 生成的动态图表选项函数","operationId":"dynamic_chart_option_function_v1_aiforbi_dynamic_chart_option_function_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DynamicChartOptionFunctionReqBody"}}},"required":true},"responses":{"200":{"description":"成功生成动态图表配置函数","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/aiforbi/static-chart-option":{"post":{"tags":["aiforbi"],"summary":"静态生成图表配置","description":"静态生成图表配置的接口。\n\n概要：根据原始数据生成静态图表的配置，适合固定的数据结构。\n响应描述：返回生成的静态图表配置。\n\n参数：\n- body (StaticChartOptionReqBody): 包含原始数据和模型名称的请求体。\n\n返回：\n- ResponseSchema: 返回包含静态图表配置的JSON结果。\n\n功能：\n1. 调用AI服务生成静态图表配置。\n2. 返回静态图表配置，用于前端呈现固定图表。\n\n注意：\n- 静态图表配置适用于结构已确定的数据源。","operationId":"static_chart_option_v1_aiforbi_static_chart_option_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StaticChartOptionReqBody"}}},"required":true},"responses":{"200":{"description":"成功生成静态图表配置","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/write/generate-outline":{"post":{"tags":["write"],"summary":"Generate Outline","description":"生成文章大纲","operationId":"generate_outline_v1_write_generate_outline_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OutlineRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OutlineResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/write/api/projects":{"get":{"tags":["write"],"summary":"Get Projects","description":"获取用户的写作项目列表","operationId":"get_projects_v1_write_api_projects_get","security":[{"LoginManager":[]}],"parameters":[{"name":"page","in":"query","required":false,"schema":{"type":"integer","default":1,"title":"Page"}},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","default":10,"title":"Limit"}},{"name":"orderby","in":"query","required":false,"schema":{"type":"string","default":"create_time","title":"Orderby"}},{"name":"desc","in":"query","required":false,"schema":{"type":"boolean","default":true,"title":"Desc"}},{"name":"keywords","in":"query","required":false,"schema":{"type":"string","title":"Keywords"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/write/api/projects/{project_id}":{"get":{"tags":["write"],"summary":"Get Project Detail","description":"获取项目详情","operationId":"get_project_detail_v1_write_api_projects__project_id__get","security":[{"LoginManager":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"string","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"put":{"tags":["write"],"summary":"Update Project","description":"更新项目信息","operationId":"update_project_v1_write_api_projects__project_id__put","security":[{"LoginManager":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"string","title":"Project Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","title":"Project Data"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["write"],"summary":"Delete Project","description":"删除项目","operationId":"delete_project_v1_write_api_projects__project_id__delete","security":[{"LoginManager":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"string","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/write/api/projects/{project_id}/outline":{"put":{"tags":["write"],"summary":"Update Project Outline","description":"更新项目的完整大纲结构\n\n接收一个完整的大纲JSON，处理章节的新增、更新、删除和重排序。\n前端可以在用户实时编辑大纲时调用此接口，无需单独的确认按钮。\n\n请求体格式示例：\n{\n    \"sections\": [\n        {\n            \"id\": \"章节ID(可选，新章节不提供)\",\n            \"title\": \"章节标题\",\n            \"summary\": \"章节摘要\",\n            \"children\": [\n                {\n                    \"id\": \"子章节ID(可选，新章节不提供)\",\n                    \"title\": \"子章节标题\",\n                    \"summary\": \"子章节摘要\"\n                }\n            ]\n        }\n    ]\n}","operationId":"update_project_outline_v1_write_api_projects__project_id__outline_put","security":[{"LoginManager":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"string","title":"Project Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","title":"Outline Data"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"post":{"tags":["write"],"summary":"Update Project Outline","description":"更新项目的完整大纲结构\n\n接收一个完整的大纲JSON，处理章节的新增、更新、删除和重排序。\n前端可以在用户实时编辑大纲时调用此接口，无需单独的确认按钮。\n\n请求体格式示例：\n{\n    \"sections\": [\n        {\n            \"id\": \"章节ID(可选，新章节不提供)\",\n            \"title\": \"章节标题\",\n            \"summary\": \"章节摘要\",\n            \"children\": [\n                {\n                    \"id\": \"子章节ID(可选，新章节不提供)\",\n                    \"title\": \"子章节标题\",\n                    \"summary\": \"子章节摘要\"\n                }\n            ]\n        }\n    ]\n}","operationId":"update_project_outline_v1_write_api_projects__project_id__outline_put","security":[{"LoginManager":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"string","title":"Project Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","title":"Outline Data"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/write/api/projects/{project_id}/sections":{"post":{"tags":["write"],"summary":"Add Chapter","description":"添加章节","operationId":"add_chapter_v1_write_api_projects__project_id__sections_post","security":[{"LoginManager":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"string","title":"Project Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChapterRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["write"],"summary":"Get Project Chapters","description":"获取项目的章节列表","operationId":"get_project_chapters_v1_write_api_projects__project_id__sections_get","security":[{"LoginManager":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"string","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/write/api/chapters/{chapter_id}/references":{"delete":{"tags":["write"],"summary":"Delete Chapter References","description":"删除章节的所有参考资料","operationId":"delete_chapter_references_v1_write_api_chapters__chapter_id__references_delete","security":[{"LoginManager":[]}],"parameters":[{"name":"chapter_id","in":"path","required":true,"schema":{"type":"string","title":"Chapter Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["write"],"summary":"Get Chapter References","description":"获取章节的参考资料列表","operationId":"get_chapter_references_v1_write_api_chapters__chapter_id__references_get","security":[{"LoginManager":[]}],"parameters":[{"name":"chapter_id","in":"path","required":true,"schema":{"type":"string","title":"Chapter Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/write/api/projects/{project_id}/outline/reorder":{"put":{"tags":["write"],"summary":"Reorder Outline Sections","description":"重新排序大纲章节","operationId":"reorder_outline_sections_v1_write_api_projects__project_id__outline_reorder_put","security":[{"LoginManager":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"string","title":"Project Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"array","items":{"type":"object"},"title":"Sections Order"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/write/api/reference-materials/parse":{"post":{"tags":["write"],"summary":"Parse Reference Material","description":"解析参考资料","operationId":"parse_reference_material_v1_write_api_reference_materials_parse_post","requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_parse_reference_material_v1_write_api_reference_materials_parse_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/write/api/references/{reference_id}":{"delete":{"tags":["write"],"summary":"Delete Reference","description":"删除单个参考资料","operationId":"delete_reference_v1_write_api_references__reference_id__delete","security":[{"LoginManager":[]}],"parameters":[{"name":"reference_id","in":"path","required":true,"schema":{"type":"string","title":"Reference Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/write/write-section":{"post":{"tags":["write"],"summary":"Write Section","description":"写作特定章节（非流式）","operationId":"write_section_v1_write_write_section_post","security":[{"LoginManager":[]}],"parameters":[{"name":"chapter_id","in":"query","required":true,"schema":{"type":"string","title":"Chapter Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/write/write-section/stream":{"post":{"tags":["write"],"summary":"Write Section Stream","description":"流式写作特定章节，实时返回生成内容","operationId":"write_section_stream_v1_write_write_section_stream_post","security":[{"LoginManager":[]}],"parameters":[{"name":"chapter_id","in":"query","required":true,"schema":{"type":"string","title":"Chapter Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/write/complete-article/{article_id}":{"get":{"tags":["write"],"summary":"Get Complete Article","description":"获取完整文章内容","operationId":"get_complete_article_v1_write_complete_article__article_id__get","security":[{"LoginManager":[]}],"parameters":[{"name":"article_id","in":"path","required":true,"schema":{"type":"string","title":"Article Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/write/article-status/{article_id}":{"get":{"tags":["write"],"summary":"Get Article Status","description":"获取文章状态和进度","operationId":"get_article_status_v1_write_article_status__article_id__get","security":[{"LoginManager":[]}],"parameters":[{"name":"article_id","in":"path","required":true,"schema":{"type":"string","title":"Article Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/canvas/templates":{"get":{"tags":["canvas"],"summary":"获取所有画布模板","operationId":"templates_v1_canvas_templates_get","responses":{"200":{"description":"成功获取所有画布模板","content":{"application/json":{"schema":{}}}}},"security":[{"LoginManager":[]}]}},"/v1/canvas/list":{"get":{"tags":["canvas"],"summary":"获取用户画布列表","operationId":"canvas_list_v1_canvas_list_get","responses":{"200":{"description":"成功获取用户画布列表","content":{"application/json":{"schema":{}}}}},"security":[{"LoginManager":[]}]}},"/v1/canvas/rm":{"post":{"tags":["canvas"],"summary":"删除画布","operationId":"rm_v1_canvas_rm_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RemoveCanvasRequest"}}},"required":true},"responses":{"200":{"description":"成功删除画布","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/canvas/set":{"post":{"tags":["canvas"],"summary":"保存画布","operationId":"save_v1_canvas_set_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SaveCanvasRequest"}}},"required":true},"responses":{"200":{"description":"成功保存画布","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/canvas/get/{canvas_id}":{"get":{"tags":["canvas"],"summary":"获取画布详情","operationId":"get_v1_canvas_get__canvas_id__get","security":[{"LoginManager":[]}],"parameters":[{"name":"canvas_id","in":"path","required":true,"schema":{"type":"string","title":"Canvas Id"}}],"responses":{"200":{"description":"成功获取画布详情","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/canvas/completion":{"post":{"tags":["canvas"],"summary":"运行画布","operationId":"run_v1_canvas_completion_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RunCanvasRequest"}}},"required":true},"responses":{"200":{"description":"成功运行画布","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/canvas/reset":{"post":{"tags":["canvas"],"summary":"重置画布","operationId":"reset_v1_canvas_reset_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResetCanvasRequest"}}},"required":true},"responses":{"200":{"description":"成功重置画布","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/canvas/test_db_connect":{"post":{"tags":["canvas"],"summary":"测试数据库连接","operationId":"test_db_connect_v1_canvas_test_db_connect_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DBConnectionRequest"}}},"required":true},"responses":{"200":{"description":"成功测试数据库连接","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/qa/store_templates":{"post":{"tags":["qa"],"summary":"存储QA模板","description":"存储QA模板到Milvus集合\n\n**功能描述:**\n- 将提供的QA模板列表存储到固定的Milvus集合 `bl_qa_template`\n- 自动为标准问法和同义句创建密集向量和稀疏向量（BM25）\n- 支持混合检索以提高匹配准确性\n- 按租户隔离存储\n\n**参数说明:**\n- templates: QA模板列表，每个模板包含标准问法、同义句、参数等信息\n- clear_existing: 是否先清空该租户的现有模板，默认false\n\n**返回值:**\n- success: 操作是否成功\n- message: 操作结果信息\n- template_count: 存储的模板数量\n- record_count: 实际存储的记录数量（包括标准问法和同义句）\n\n**注意事项:**\n- 每个模板会为标准问法创建一条记录\n- 每个同义句也会创建独立的记录\n- 所有记录都支持密集向量和BM25稀疏向量检索\n- 数据按租户隔离，不会互相干扰","operationId":"store_templates_v1_qa_store_templates_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StoreTemplatesRequest"}}},"required":true},"responses":{"200":{"description":"将QA模板存储到Milvus","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/qa/clear_templates":{"post":{"tags":["qa"],"summary":"清空QA模板","description":"清空当前租户的所有QA模板\n\n**功能描述:**\n- 删除当前租户在Milvus中的所有QA模板记录\n- 不影响其他租户的数据\n\n**返回值:**\n- success: 操作是否成功\n- message: 操作结果信息","operationId":"clear_templates_v1_qa_clear_templates_post","responses":{"200":{"description":"清空当前租户的所有QA模板","content":{"application/json":{"schema":{}}}}},"security":[{"LoginManager":[]}]}},"/v1/qa/delete_template":{"post":{"tags":["qa"],"summary":"删除QA模板","description":"根据qa_id删除指定的QA模板（支持单个或批量删除）\n\n**功能描述:**\n- 删除当前租户中指定qa_id的QA模板记录\n- 支持单个qa_id或qa_id列表进行批量删除\n- 会删除该模板的所有相关记录（标准问法和同义句）\n- 只影响当前租户的数据\n\n**参数说明:**\n- qa_ids: 要删除的QA模板ID，可以是：\n  - 单个字符串：删除一个模板\n  - 字符串列表：批量删除多个模板\n\n**返回值:**\n- success: 操作是否成功（批量删除时，只要有一个成功就为true）\n- message: 操作结果信息\n- deleted_count: 删除的总记录数量\n- failed_qa_ids: 删除失败的qa_id列表（仅批量删除时）\n\n**使用示例:**\n```json\n// 删除单个模板\n{\"qa_ids\": \"template_001\"}\n\n// 批量删除多个模板\n{\"qa_ids\": [\"template_001\", \"template_002\", \"template_003\"]}\n```\n\n**注意事项:**\n- 删除操作不可逆，请谨慎使用\n- 只能删除当前租户下的模板\n- 批量删除时，部分成功也会返回成功状态\n- 如果qa_id不存在，会在failed_qa_ids中返回","operationId":"delete_template_v1_qa_delete_template_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteTemplateRequest"}}},"required":true},"responses":{"200":{"description":"根据qa_id删除指定的QA模板（支持单个或批量）","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/qa/interpret_stateless":{"post":{"tags":["qa"],"summary":"无状态查询解释（智能版）","description":"无状态查询解释接口 - 智能多轮对话支持\n\n**设计理念:**\n- 🚀 **完全无状态**: 服务端不存储任何对话信息，高并发友好\n- 🔄 **上下文传递**: 调用端负责维护和传递对话上下文\n- 🧠 **智能兼容**: 自动检测并支持V1/V2模板，无缝切换\n- 🎯 **场景通用**: 适用于聊天机器人、API集成、微服务等各种场景\n- 🔧 **松耦合设计**: 便于复用和扩展，支持复杂业务逻辑\n\n**V2增强功能:**\n- ✅ **自动模板检测**: 优先使用V2模板(bl_qa_template_v2)，自动fallback到V1\n- ✅ **类型化参数抽取**: V2模板支持强类型参数，LLM输出更准确\n- ✅ **多SQL模板支持**: 返回数组格式SQL，业务端可选择合适的查询\n- ✅ **混合检索算法**: 密集向量+BM25稀疏向量，匹配精度显著提升\n\n**使用流程说明:**\n1. **首次调用**: 只传current_input，不传dialog_context，系统创建新会话\n2. **后续调用**: 传入上次返回的updated_context作为dialog_context，延续对话\n3. **重新开始**: 不传dialog_context即可开始新对话，灵活控制对话边界\n4. **状态管理**: 调用端完全控制对话状态，可实现复杂的业务逻辑\n\n**API参数详细说明:**\n```json\n{\n    \"current_input\": \"查询张三老师2023年考核数据\",     // 当前用户输入\n    \"dialog_context\": {                               // 对话上下文（可选）\n        \"session_id\": \"sess_12345\",\n        \"initial_query\": \"教师考核查询\", \n        \"rounds\": [...],                              // 历史对话轮次\n        \"matched_template\": {...},                    // 已匹配模板（缓存）\n        \"accumulated_params\": {...},                  // 累积参数\n        \"missing_params\": [...]                       // 仍缺失参数\n    },\n    \"table_schemas\": [...],                           // 数据库表结构\n    \"similarity_threshold\": 0.3,                     // 模板匹配阈值\n    \"hybrid_weight\": 0.7,                           // 密集向量权重\n    \"llm_name\": \"gpt-4\",                             // 指定LLM模型\n    \"force_new_template\": false,                     // 强制重新匹配\n    \"enable_slot_merge\": true                        // 启用多轮参数合并\n}\n```\n\n**返回格式说明:**\n- **sql_template**: \n  - V2模板: 返回数组格式 `[\"SQL1\", \"SQL2\"]`，支持多场景查询\n  - V1模板: 返回字符串格式 `\"SQL\"`，保持向后兼容\n- **updated_context**: 更新后的完整上下文，供下次调用使用\n- **processing_info**: 包含处理过程信息，便于调试和监控\n\n**智能参数处理:**\n- **V2类型化抽取**: 自动验证和转换参数类型(string/integer/float/boolean/date)\n- **多轮智能合并**: 跨轮次智能合并参数，支持复杂对话场景\n- **上下文记忆**: 记住用户已提供的信息，避免重复询问\n- **参数验证**: 自动验证必需参数，生成友好的追问提示\n\n**完整对话示例:**\n```\n轮次1:\nInput: \"查询教师考核数据\"\nOutput: status=\"NEED_CLARIFY\", clarify_message=\"请提供教师姓名和考核年度\"\n\n轮次2:  \nInput: \"张三老师\"\nOutput: status=\"NEED_CLARIFY\", clarify_message=\"请提供考核年度\"\n\n轮次3:\nInput: \"2023年\"\nOutput: status=\"OK\", sql_template=[\"SELECT * FROM...\"], complete_params={\"teacher_name\":\"张三\", \"year\":2023}\n```\n\n**性能优化特性:**\n- **混合检索**: 结合语义理解(密集向量)和关键词匹配(BM25)\n- **模板缓存**: 多轮对话中复用已匹配的模板，减少重复计算\n- **批量向量化**: 优化向量化处理，提升响应速度\n- **租户隔离**: 数据按租户隔离，支持多租户场景\n\n**错误处理机制:**\n- **智能降级**: V2模板失败时自动降级到V1模板\n- **参数容错**: 参数类型转换失败时提供友好提示\n- **模板兜底**: 未匹配到模板时返回明确错误信息\n- **异常恢复**: 系统异常时保护用户上下文不丢失\n\n**集成优势:**\n- **服务端简单**: 无状态设计，易于扩展和维护，支持水平扩展\n- **调用端灵活**: 完全控制对话流程，可实现复杂的业务逻辑\n- **接口通用**: 适用于Web应用、移动App、API网关等多种集成场景\n- **版本兼容**: 平滑支持V1到V2的升级，无需修改现有代码\n\n**最佳实践建议:**\n- **会话管理**: 在业务层实现会话超时和清理机制\n- **参数校验**: 在调用前对用户输入进行基础校验\n- **错误重试**: 对网络错误和临时异常实现重试机制\n- **日志记录**: 记录关键对话信息，便于问题排查和用户体验优化","operationId":"interpret_stateless_v1_qa_interpret_stateless_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatelessInterpretRequest"}}},"required":true},"responses":{"200":{"description":"解释查询（无状态版本，支持V1/V2模板智能匹配）","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/qa/quick_interpret":{"post":{"tags":["qa"],"summary":"快速解释（单轮）","description":"快速单轮查询解释（完全无状态）\n\n**适用场景:**\n- 简单的单轮查询\n- 不需要追问的场景\n- 快速原型验证\n\n**特点:**\n- 强制单轮模式\n- 不返回上下文信息\n- 响应更轻量","operationId":"quick_interpret_v1_qa_quick_interpret_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/QuickInterpretRequest"}}},"required":true},"responses":{"200":{"description":"快速单轮查询解释","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/qa/store_templates_v2":{"post":{"tags":["qa"],"summary":"存储QA模板V2（强化版）","description":"存储QA模板V2到Milvus（支持类型化参数定义和多SQL模板）- V2强化版\n\n**V2核心新功能:**\n- 🆕 **类型化参数定义**: 支持为每个参数指定数据类型(string/integer/float/boolean/date)\n- 🆕 **多SQL模板支持**: 一个QA模板可包含多个SQL查询，适应不同场景需求  \n- 🆕 **自动类型验证**: LLM输出参数时会自动验证和转换数据类型\n- 🆕 **V2集合存储**: 使用独立的bl_qa_template_v2集合，与V1兼容共存\n- ✅ **向后兼容**: V1接口仍可查询V2模板，无需修改现有代码\n\n**V2与V1主要差异对比:**\n```\nV1版本:\n- needed_params: [\"teacher_id\", \"year\"]           # 简单字符串列表\n- sql_template: \"SELECT * FROM table\"             # 单个SQL字符串\n\nV2版本:\n- needed_params_v2: [                             # 类型化参数对象\n    {\"name\": \"teacher_id\", \"data_type\": \"string\", \"description\": \"教师ID\", \"required\": true},\n    {\"name\": \"year\", \"data_type\": \"integer\", \"description\": \"考核年度\", \"required\": true}\n  ]\n- sql_template: [                                 # 多个SQL数组\n    \"SELECT * FROM table WHERE teacher_id = {{teacher_id}}\",\n    \"SELECT summary FROM table WHERE teacher_id = {{teacher_id}}\"\n  ]\n```\n\n**支持的数据类型详细说明:**\n- **string**: 字符串类型，如教师姓名、部门等文本信息\n- **integer**: 整数类型，如年份、数量等整数值  \n- **float**: 浮点数类型，如分数、比例等小数值\n- **boolean**: 布尔类型，如是否在职、是否有效等true/false值\n- **date**: 日期类型，格式为YYYY-MM-DD，如\"2024-01-15\"\n\n**多SQL模板使用场景:**\n- **详简查询**: 第一个SQL查询详细信息，第二个SQL查询汇总信息\n- **权限控制**: 不同SQL适用于不同权限级别的用户\n- **性能优化**: 根据数据量选择合适的查询策略\n- **兼容性**: 支持不同版本的数据库schema\n\n**完整使用示例:**\n```json\n{\n    \"templates\": [\n        {\n            \"qa_id\": \"teacher_performance_query_v2\",\n            \"question_canonical\": \"查询教师年度绩效考核数据\",\n            \"paraphrases\": [\n                \"教师考核情况查询\",\n                \"老师绩效数据检索\",\n                \"年度考核结果查看\"\n            ],\n            \"needed_params_v2\": [\n                {\n                    \"name\": \"teacher_id\",\n                    \"data_type\": \"string\",\n                    \"description\": \"教师工号或ID\",\n                    \"required\": true\n                },\n                {\n                    \"name\": \"year\", \n                    \"data_type\": \"integer\",\n                    \"description\": \"考核年度\",\n                    \"required\": true\n                },\n                {\n                    \"name\": \"score_threshold\",\n                    \"data_type\": \"float\", \n                    \"description\": \"分数筛选阈值\",\n                    \"required\": false\n                },\n                {\n                    \"name\": \"include_inactive\",\n                    \"data_type\": \"boolean\",\n                    \"description\": \"是否包含离职教师\",\n                    \"required\": false\n                },\n                {\n                    \"name\": \"query_date\",\n                    \"data_type\": \"date\",\n                    \"description\": \"查询截止日期\", \n                    \"required\": false\n                }\n            ],\n            \"sql_template\": [\n                \"SELECT teacher_id, teacher_name, total_score, teaching_score, research_score, service_score, evaluation_date FROM teacher_performance WHERE teacher_id = {{teacher_id}} AND year = {{year}} ORDER BY evaluation_date DESC\",\n                \"SELECT teacher_id, teacher_name, total_score FROM teacher_performance WHERE teacher_id = {{teacher_id}} AND year = {{year}} LIMIT 1\"\n            ],\n            \"rule_id\": \"performance_rule_2024\"\n        }\n    ],\n    \"clear_existing\": false\n}\n```\n\n**V2模板存储流程:**\n1. **参数验证**: 验证类型化参数定义的完整性和正确性\n2. **向量化处理**: 对标准问法和同义句生成密集向量和BM25稀疏向量\n3. **格式转换**: 将V2格式转换为存储兼容格式，保留类型信息\n4. **集合存储**: 存储到bl_qa_template_v2集合，支持混合检索\n5. **索引构建**: 自动构建向量索引，优化查询性能\n\n**API参数说明:**\n- **templates**: QATemplateV2对象列表，包含类型化参数定义\n- **clear_existing**: 是否清空现有模板，默认false（增量添加）\n\n**返回值信息:**\n```json\n{\n    \"success\": true,\n    \"message\": \"成功存储N个QA模板V2（支持类型化参数）\", \n    \"template_count\": 1,\n    \"record_count\": 1,\n    \"version\": \"v2\"\n}\n```\n\n**V2存储优势:**\n- **类型安全**: LLM参数抽取时会生成正确类型的值，减少转换错误\n- **智能提示**: 参数描述帮助LLM更准确理解参数含义\n- **查询灵活**: 多SQL模板支持不同业务场景的查询需求\n- **性能提升**: 基于BM25+密集向量的混合检索，匹配精度更高\n- **兼容性强**: V1接口可正常查询V2模板，平滑升级\n\n**迁移建议:**\n- **新项目**: 直接使用V2接口，享受类型化参数和多SQL的优势\n- **现有项目**: 可继续使用V1接口，需要时再迁移到V2\n- **混合使用**: V1和V2模板可在同一系统中共存\n- **渐进升级**: 重要模板优先迁移到V2，提升准确性\n\n**注意事项:**\n- V2模板创建独立的集合(bl_qa_template_v2)，不影响V1数据\n- 系统查询时会优先使用V2集合，自动fallback到V1\n- 类型化参数信息存储为JSON，便于扩展和维护\n- 多SQL模板按顺序执行，建议第一个为主查询","operationId":"store_templates_v2_v1_qa_store_templates_v2_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StoreTemplatesV2Request"}}},"required":true},"responses":{"200":{"description":"存储支持类型化参数和多SQL模板的QA模板到Milvus","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/qa/calc_score":{"post":{"tags":["qa"],"summary":"计算评分","description":"使用LLM根据规则描述和数据计算评分\n\n**功能描述:**\n- 接收调用方提供的评分规则描述文本\n- 根据SQL查询结果数据，调用LLM进行智能评分\n- 返回详细的评分结果和分析\n\n**参数说明:**\n- rule_description: 评分规则的文本描述，由调用方提供\n- data: SQL查询结果数据列表\n- context: 评分上下文信息，可选\n- llm_name: 指定用于评分的LLM模型，可选\n\n**返回值:**\n- score: 提取的数值得分（如果可以提取）\n- score_text: LLM生成的完整评分结果文本\n- analysis: 详细的评分分析过程\n- suggestions: 改进建议（可选）\n- data_summary: 数据汇总信息\n\n**示例:**\n```json\n{\n    \"rule_description\": \"根据工作量计算得分：教学每学时0.1分，科研每学时0.15分，总分不超过100分\",\n    \"data\": [{\"teacher_name\": \"张三\", \"teaching_hours\": 240, \"research_hours\": 160}]\n}\n```","operationId":"calculate_score_v1_qa_calc_score_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CalcScoreRequest"}}},"required":true},"responses":{"200":{"description":"使用LLM根据规则和数据计算评分","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/qa/rag_answer":{"post":{"tags":["qa"],"summary":"RAG回答","description":"基于知识库检索生成回答\n\n**功能描述:**\n- 在指定知识库中检索相关文档\n- 使用LLM基于检索内容生成回答\n- 返回答案和引用来源\n\n**参数说明:**\n- query: 用户查询\n- kb_id: 知识库ID\n- top_k: 检索文档数量，默认5\n- llm_name: 指定LLM模型，可选\n\n**返回值:**\n- answer: 生成的回答\n- sources: 引用来源列表\n- confidence: 回答置信度","operationId":"rag_answer_v1_qa_rag_answer_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RAGAnswerRequest"}}},"required":true},"responses":{"200":{"description":"基于知识库检索生成回答","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/qa/calc_score_v2":{"post":{"tags":["qa"],"summary":"计算评分V2（强化版）","description":"使用LLM根据规则描述和数据计算评分 - V2强化版\n\n    **V2新功能:**\n    - 多重提取策略：从多个位置和方式提取分数\n    - 智能优先级：优先从\"总得分\"和\"最终得分\"部分提取\n    - 增强正则表达式：支持更多种分数表达方式\n    - 数字序列分析：分析重复出现的数字作为候选分数\n    - 分数验证：验证分数的合理性和一致性\n    - 置信度评估：为每个提取方法评估置信度\n\n    **V2提取策略优先级:**\n    1. final_section_primary - 从\"=== 最终评分结果 ===\"部分的\"总得分\"提取（最高优先级）\n    2. calculation_section - 从\"分数计算\"部分的\"最终得分\"提取\n    3. enhanced_regex - 使用增强版正则表达式全文搜索\n    4. number_sequence - 分析数字出现频率，选择重复出现的数字\n\n    **参数说明:**\n    - user_input: 用户补充要求\n    - rule_description: 评分规则的文本描述，由调用方提供\n    - data: SQL查询结果数据列表\n    - context: 评分上下文信息，可选\n    - llm_name: 指定用于评分的LLM模型，可选\n    - enable_multi_extraction: 启用多重提取策略，默认true\n    - score_validation: 启用分数合理性验证，默认true\n    - expected_score_range: 期望分数范围(min, max)，用于验证，可选\n    - extraction_confidence_threshold: 提取置信度阈值，默认0.8\n\n    **返回值 (V2增强):**\n    - score: 提取的数值得分（最佳选择）\n    - score_text: LLM生成的完整评分结果文本\n    - analysis: 详细的评分分析过程\n    - suggestions: 改进建议（可选）\n    - data_summary: 数据汇总信息（V2增强版）\n    - extraction_details: 提取过程详细信息（新增）\n    - confidence: 提取置信度（新增）\n    - validation_results: 验证结果（新增）\n    - alternative_scores: 备选分数列表（新增）\n    - extraction_method: 使用的提取方法（新增）\n    - raw_response: LLM原始响应（新增）\n\n    **使用示例（V2标准表结构数据格式）:**\n    ```json\n    {\n        \"user_input\": \"根据规则计算每个人员的得分，并只将工号为10001的用户考核结果以及考核分析过程输出\",\n        \"rule_description\": \"1.院士。对应得分：50000分/项\n2.国家级重大人才工程项目入选者/国家级青年人才入选者。对应得分：20000分/10000分/项\n3.省部级重大人才工程项目入选者/省部级青年人才入选者。对应得分：2000分/1000分/项\",\n        \"data\": [\n            {\n                \"table\": {\n                    \"table_name\": \"t_kh_110_zb\",\n                    \"table_desc\": \"纵向项目信息 - 纵向课题到账经费（科研办）主表\",\n                    \"structure\": [\n                        {\"column_name\": \"cyxm\", \"column_desc\": \"成员姓名\"},\n                        {\"column_name\": \"cysf\", \"column_desc\": \"成员身份\"},\n                        {\"column_name\": \"cybm\", \"column_desc\": \"成员部门\"}\n                    ]\n                },\n                \"data_details\": [\n                    {\n                        \"cyxm\": \"李方正\",\n                        \"cysf\": \"教职工\", \n                        \"cybm\": \"园林学院\"\n                    }\n                ]\n            },\n            {\n                \"table\": {\n                    \"table_name\": \"t_talent_info\",\n                    \"table_desc\": \"人才工程项目信息表\",\n                    \"structure\": [\n                        {\"column_name\": \"xmch\", \"column_desc\": \"项目称号\"},\n                        {\"column_name\": \"brjs\", \"column_desc\": \"获得人员角色\"},\n                        {\"column_name\": \"sylb\", \"column_desc\": \"人才类别\"},\n                        {\"column_name\": \"sydj\", \"column_desc\": \"人才等级\"}\n                    ]\n                },\n                \"data_details\": [\n                    {\n                        \"xmch\": \"林草科技创新人才青年拔尖人才\",\n                        \"brjs\": \"获得者\",\n                        \"sylb\": \"青年人才入选者\", \n                        \"sydj\": \"省部级\"\n                    }\n                ]\n            }\n        ],\n        \"enable_multi_extraction\": true,\n        \"score_validation\": true,\n        \"expected_score_range\": [0, 100000]\n    }\n    ```\n\n    **数据结构说明（V2增强版）:**\n    - **table**: 表的元数据信息\n      - `table_name`: 数据表名称\n      - `table_desc`: 表的业务描述，帮助LLM理解表的用途\n      - `structure`: 字段结构定义，包含字段名和字段含义\n    - **data_details**: 该表的具体数据记录列表\n    - **优势**: 通过表结构信息，LLM能更准确理解数据含义，提升评分精度\n\n    **简化版示例（兼容老格式）:**\n    ```json\n    {\n        \"rule_description\": \"省部级青年人才入选者：1000分/项\",\n        \"data\": [\n            {\"sylb\": \"青年人才入选者\", \"sydj\": \"省部级\"}\n        ],\n        \"enable_multi_extraction\": true,\n        \"score_validation\": true\n    }\n    ```\n\n    **V2改进说明:**\n    - 解决了原版本正则提取不准确的问题\n    - 通过规范化的LLM输出格式，提高提取成功率\n    - 多重策略确保即使某个方法失败，其他方法仍能工作\n    - 置信度评估帮助判断提取结果的可靠性\n    - 验证机制防止异常分数","operationId":"calculate_score_v2_v1_qa_calc_score_v2_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CalcScoreV2Request"}}},"required":true},"responses":{"200":{"description":"使用LLM根据规则和数据计算评分，强化正则提取能力","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/qa/system_info":{"get":{"tags":["qa"],"summary":"获取系统信息","description":"获取系统信息\n\n**返回信息:**\n- 支持的功能列表\n- 配置参数说明\n- 使用建议","operationId":"get_system_info_v1_qa_system_info_get","responses":{"200":{"description":"获取当前系统的配置信息","content":{"application/json":{"schema":{}}}}},"security":[{"LoginManager":[]}]}},"/v1/qa/collection_status":{"get":{"tags":["qa"],"summary":"检查集合状态（V1/V2智能管理）","description":"检查QA模板集合状态 - V1/V2版本智能管理\n\n**功能概述:**\n- 🔍 **集合检测**: 自动检测V1(bl_qa_template)和V2(bl_qa_template_v2)集合状态\n- 📊 **数据统计**: 统计各集合中当前租户的模板数量和记录详情\n- 🧭 **智能建议**: 基于当前状态提供最优的迁移和使用建议\n- ⚡ **性能分析**: 分析当前配置对查询性能的影响\n\n**V1/V2集合差异对比:**\n```\nV1集合 (bl_qa_template):\n- 简单参数: needed_params: [\"param1\", \"param2\"]\n- 单SQL模板: sql_template: \"SELECT * FROM table\"\n- 基础功能: 支持混合检索，满足基本需求\n\nV2集合 (bl_qa_template_v2):  \n- 类型化参数: needed_params_typed: [{\"name\":\"param1\",\"data_type\":\"string\",...}]\n- 多SQL模板: sql_template: [\"SQL1\", \"SQL2\", \"SQL3\"]\n- 增强功能: 类型验证、智能提示、多场景查询\n```\n\n**返回状态信息详解:**\n```json\n{\n    \"v1_collection_exists\": true,              // V1集合是否存在\n    \"v2_collection_exists\": true,              // V2集合是否存在  \n    \"v1_collection_name\": \"bl_qa_template\",   // V1集合名称\n    \"v2_collection_name\": \"bl_qa_template_v2\", // V2集合名称\n    \"current_active_collection\": \"bl_qa_template_v2\", // 当前优先使用的集合\n    \"collection_version\": \"v2\",               // 当前版本标识\n    \"v1_record_count\": 15,                    // V1集合记录数\n    \"v2_record_count\": 8,                     // V2集合记录数\n    \"needs_migration\": false,                 // 是否建议迁移\n    \"migration_suggestions\": [                // 具体建议列表\n        \"V2集合已有数据，系统将优先使用V2集合\",\n        \"建议将重要的V1模板迁移到V2以获得更好性能\"\n    ]\n}\n```\n\n**系统智能选择策略:**\n1. **V2优先**: 如果V2集合存在且有数据，系统自动优先使用V2集合\n2. **V1兼容**: V2集合不可用时，自动fallback到V1集合\n3. **性能最优**: 根据数据分布选择最优的查询策略\n4. **平滑升级**: 支持V1和V2集合并存，无中断升级\n\n**典型场景分析:**\n\n**场景1: 全新系统**\n```json\n{\n    \"v1_collection_exists\": false, \"v2_collection_exists\": false,\n    \"migration_suggestions\": [\"建议直接使用V2接口创建模板，享受完整功能\"]\n}\n```\n\n**场景2: V1存量系统**  \n```json\n{\n    \"v1_collection_exists\": true, \"v1_record_count\": 20,\n    \"v2_collection_exists\": false,\n    \"needs_migration\": true,\n    \"migration_suggestions\": [\"建议使用V2接口重新存储重要模板\"]\n}\n```\n\n**场景3: 混合状态**\n```json\n{\n    \"v1_collection_exists\": true, \"v1_record_count\": 15,\n    \"v2_collection_exists\": true, \"v2_record_count\": 8, \n    \"current_active_collection\": \"bl_qa_template_v2\",\n    \"migration_suggestions\": [\"系统优先使用V2，V1数据作为兜底\"]\n}\n```\n\n**场景4: V2主导**\n```json\n{\n    \"v2_collection_exists\": true, \"v2_record_count\": 25,\n    \"collection_version\": \"v2\",\n    \"migration_suggestions\": [\"系统运行在最优状态，享受V2全部功能\"]\n}\n```\n\n**迁移建议解读:**\n- **立即迁移**: V1数据较多且业务关键，建议优先迁移核心模板\n- **渐进迁移**: 新模板使用V2接口，老模板按需迁移\n- **并行运行**: V1/V2并存，根据业务需求灵活选择\n- **性能优化**: 高频查询模板优先迁移到V2，提升响应速度\n\n**性能影响分析:**\n- **V1性能**: 满足基本需求，参数抽取精度约85%\n- **V2性能**: 类型化参数抽取精度约95%，多SQL灵活性高\n- **混合模式**: 查询时需要检测集合版本，有轻微性能开销\n- **最优配置**: 纯V2环境下性能最佳，建议作为目标架构\n\n**运维监控建议:**\n```json\n{\n    \"monitoring_metrics\": [\n        \"collection_query_latency\",     // 集合查询延迟\n        \"template_match_accuracy\",      // 模板匹配准确率  \n        \"parameter_extraction_success\", // 参数提取成功率\n        \"v1_v2_usage_ratio\"            // V1/V2使用比例\n    ],\n    \"alert_conditions\": [\n        \"v2_collection_unavailable\",    // V2集合不可用告警\n        \"match_accuracy_drop\",          // 匹配准确率下降\n        \"high_query_latency\"           // 查询延迟过高\n    ]\n}\n```\n\n**故障排查指南:**\n- **集合不存在**: 检查Milvus连接和集合创建权限\n- **数据不一致**: 验证租户隔离和数据完整性\n- **查询异常**: 检查索引状态和向量维度匹配\n- **性能下降**: 分析集合大小和查询复杂度\n\n**最佳实践:**\n- **定期检查**: 建议每日或每周检查集合状态\n- **数据备份**: 重要模板数据应有备份机制\n- **版本规划**: 制定V1到V2的迁移时间表\n- **性能测试**: 迁移前后进行性能对比测试","operationId":"check_collection_status_v1_qa_collection_status_get","responses":{"200":{"description":"检查QA模板集合的V1/V2状态并提供迁移建议","content":{"application/json":{"schema":{}}}}},"security":[{"LoginManager":[]}]}},"/v1/semantic_layer/save-text-to-embedding":{"post":{"tags":["semantic_layer"],"summary":"将单条文本转为向量并保存","description":"保存单条文本到向量数据库","operationId":"save_text_to_embedding_v1_semantic_layer_save_text_to_embedding_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TextItemBase","title":"文本信息","description":"需要转换为向量的文本信息"},"example":{"text":"这是一个术语描述的示例文本，该术语代表某个特定的概念。","type":"TERM_DESC","original_id":"term_67890","model_id":"12345","dataset_id":"12345","theme_domain_id":"12345","embedding_model":"sentence-transformers/all-MiniLM-L6-v2"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/semantic_layer/delete-embeddings-by-owner-type-and-id":{"post":{"tags":["semantic_layer"],"summary":"删除特定类型实体相关的向量数据","description":"删除与特定实体相关的所有向量数据\n\nArgs:\n    body: 包含实体类型和ID的请求体\n    db: 数据库会话\n    user: 当前用户\n    service: 文本嵌入服务\n\nReturns:\n    包含删除操作状态和结果信息的响应\n\nRaises:\n    HTTPException: 当删除操作失败时","operationId":"delete_embeddings_by_owner_type_and_id_v1_semantic_layer_delete_embeddings_by_owner_type_and_id_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteByOwnerTypeRequest","title":"删除请求信息","description":"指定要删除的实体类型和ID"},"example":{"type":"MODEL","original_id":"12345"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/semantic_layer/delete-embeddings-by-element-type-and-id":{"post":{"tags":["semantic_layer"],"summary":"删除特定元素类型和ID的向量数据","description":"删除特定元素类型和ID的向量数据\n\nArgs:\n    body: 包含元素类型和ID的请求体\n    db: 数据库会话\n    user: 当前用户\n    service: 文本嵌入服务\n\nReturns:\n    包含删除操作状态和结果信息的响应\n\nRaises:\n    HTTPException: 当删除操作失败时","operationId":"delete_embeddings_by_element_type_and_id_v1_semantic_layer_delete_embeddings_by_element_type_and_id_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteByElementTypeRequest","title":"删除请求信息","description":"指定要删除的元素类型和ID"},"example":{"element_type":"METRIC","original_id":"12345"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/semantic_layer/save-texts-to-embedding-batch":{"post":{"tags":["semantic_layer"],"summary":"批量将多个文本转为向量并保存","description":"批量保存多条文本到向量数据库","operationId":"save_texts_to_embedding_batch_v1_semantic_layer_save_texts_to_embedding_batch_post","requestBody":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/TextItemBase"},"type":"array","title":"批量文本信息","description":"需要批量转换为向量的多条文本信息"},"example":[{"text":"这是第一个示例文本","type":"DATASET_DESC","original_id":"12345","embedding_model":"sentence-transformers/all-MiniLM-L6-v2"},{"text":"这是第二个示例文本","type":"TERM_DESC","original_id":"67890","embedding_model":"sentence-transformers/all-MiniLM-L6-v2"}]}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/semantic_layer/search-similar-vectors":{"post":{"tags":["semantic_layer"],"summary":"根据文本查询相似的向量数据","description":"根据文本查询相似的向量数据，支持组合条件过滤\n\nArgs:\n    body: 包含查询文本和过滤条件的请求体\n    db: 数据库会话\n    user: 当前用户\n    service: 文本嵌入服务\n\nReturns:\n    包含查询结果的响应\n\nRaises:\n    HTTPException: 当查询操作失败时","operationId":"search_similar_vectors_v1_semantic_layer_search_similar_vectors_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchVectorsRequest","title":"查询请求信息","description":"用于查询相似向量的文本和过滤条件"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/kb/create":{"post":{"tags":["kb"],"summary":"创建知识库","operationId":"create_v1_kb_create_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateKnowledgebaseRequest"}}},"required":true},"responses":{"200":{"description":"成功创建知识库","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/kb/update":{"post":{"tags":["kb"],"summary":"更新知识库","operationId":"update_v1_kb_update_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateKnowledgebaseRequest"}}},"required":true},"responses":{"200":{"description":"成功更新知识库","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/kb/detail":{"get":{"tags":["kb"],"summary":"获取知识库详情","operationId":"detail_v1_kb_detail_get","security":[{"LoginManager":[]}],"parameters":[{"name":"kb_id","in":"query","required":true,"schema":{"type":"string","title":"Kb Id"}}],"responses":{"200":{"description":"成功获取知识库详情","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/kb/list":{"post":{"tags":["kb"],"summary":"列出知识库","operationId":"list_kbs_v1_kb_list_post","security":[{"LoginManager":[]}],"parameters":[{"name":"page","in":"query","required":false,"schema":{"type":"integer","default":0,"title":"Page"}},{"name":"page_size","in":"query","required":false,"schema":{"type":"integer","default":0,"title":"Page Size"}},{"name":"orderby","in":"query","required":false,"schema":{"type":"string","default":"create_time","title":"Orderby"}},{"name":"desc","in":"query","required":false,"schema":{"type":"boolean","default":true,"title":"Desc"}},{"name":"keywords","in":"query","required":false,"schema":{"type":"string","default":"","title":"Keywords"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListKbsRequest"}}}},"responses":{"200":{"description":"成功列出知识库","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/kb/rm":{"post":{"tags":["kb"],"summary":"删除知识库","description":"删除知识库\n\n参数:\n- request: 请求体，包含要删除的知识库ID。\n\n返回:\n- 成功删除知识库时，返回包含成功标志的JSON结果。\n- 如有错误发生，返回相应的错误信息。","operationId":"rm_v1_kb_rm_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RemoveKnowledgebaseRequest"}}},"required":true},"responses":{"200":{"description":"成功删除知识库","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/kb/{kb_id}/tags":{"get":{"tags":["kb"],"summary":"获取知识库标签","operationId":"list_tags_v1_kb__kb_id__tags_get","security":[{"LoginManager":[]}],"parameters":[{"name":"kb_id","in":"path","required":true,"schema":{"type":"string","title":"Kb Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/kb/tags":{"get":{"tags":["kb"],"summary":"获取多个知识库的标签","operationId":"list_tags_from_kbs_v1_kb_tags_get","security":[{"LoginManager":[]}],"parameters":[{"name":"kb_ids","in":"query","required":true,"schema":{"type":"string","title":"Kb Ids"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/kb/{kb_id}/rm_tags":{"post":{"tags":["kb"],"summary":"删除知识库标签","operationId":"rm_tags_v1_kb__kb_id__rm_tags_post","security":[{"LoginManager":[]}],"parameters":[{"name":"kb_id","in":"path","required":true,"schema":{"type":"string","title":"Kb Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RemoveTagsRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/kb/{kb_id}/rename_tag":{"post":{"tags":["kb"],"summary":"重命名知识库标签","operationId":"rename_tags_v1_kb__kb_id__rename_tag_post","security":[{"LoginManager":[]}],"parameters":[{"name":"kb_id","in":"path","required":true,"schema":{"type":"string","title":"Kb Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RenameTagRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/kb/<kb_id>/knowledge_graph'":{"get":{"tags":["kb"],"summary":"获取知识图谱","operationId":"knowledge_graph_v1_kb__kb_id__knowledge_graph__get","security":[{"LoginManager":[]}],"parameters":[{"name":"kb_id","in":"query","required":true,"schema":{"type":"string","title":"Kb Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/kb/<kb_id>/knowledge_graph":{"delete":{"tags":["kb"],"summary":"删除知识图谱","operationId":"delete_knowledge_graph_v1_kb__kb_id__knowledge_graph_delete","security":[{"LoginManager":[]}],"parameters":[{"name":"kb_id","in":"query","required":true,"schema":{"title":"Kb Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/dialog/set":{"post":{"tags":["dialog"],"summary":"设置对话","description":"设置对话\n\n        该接口用于创建或更新对话信息，包括检索配置、模型设置和搜索模式。\n\n        ## 参数说明\n\n        ### 基础信息\n        - **dialog_id**: 对话的唯一标识符，如果为空则创建新对话，否则更新已有对话\n        - **name**: 对话名称，最大长度100个字符，默认为 'New Dialog'\n        - **description**: 对话描述，最大长度500个字符，默认为 'A helpful dialog'\n        - **icon**: 对话图标URL，最大长度200个字符\n\n        ### 检索配置\n        - **kb_ids**: 知识库ID列表，指定对话可以访问的知识库\n        - **top_n**: 返回给用户的最大结果数 (1-50)，默认为6\n        - **top_k**: 检索阶段的最大召回数 (1-10000)，默认为1024\n        - **similarity_threshold**: 相似度阈值 (0.0-1.0)，低于此值的结果将被过滤，默认为0.1\n        - **vector_similarity_weight**: 向量相似度权重 (0.0-1.0)，用于重排序，默认为0.3\n\n        ### 模型配置\n        - **llm_id**: 大语言模型ID，如果不指定则使用租户默认模型\n        - **llm_setting**: 模型参数配置，如温度、最大长度等\n        - **rerank_id**: 重排序模型ID，用于优化检索结果排序\n\n        ### 提示配置 (prompt_config)\n        提示配置是一个灵活的字典，建议包含以下字段：\n        ```json\n        {\n            \"system\": \"你是一个智能助手，请总结知识库的内容来回答问题，请列举知识库中的数据详细回答。当所有知识库内容都与问题无关时，你的回答必须包括\"知识库中未找到您要的答案！\"这句话。回答需要考虑聊天历史。\n以下是知识库：\n{knowledge}\n以上是知识库。\",\n            \"prologue\": \"您好，我是您的助手小樱，长得可爱又善良，can I help you?\",\n            \"parameters\": [\n                {\"key\": \"knowledge\", \"optional\": false}\n            ],\n            \"empty_response\": \"Sorry! 知识库中未找到相关内容！\"\n        }\n        ```\n        - **system**: 必填，系统提示模板，支持参数插值，例如 {knowledge}\n        - **prologue**: 可选，对话开场白\n        - **parameters**: 可选，参数列表，每项包含 key 和 optional 属性\n        - **empty_response**: 可选，未找到相关内容时的回复\n        - 可以包含其他自定义字段，系统不会做特殊处理\n\n        ### 搜索模式 (search_mode)\n        控制对话中检索知识库时使用的策略：\n\n        #### 1. 混合检索（推荐）\n        ```json\n        {\n            \"type\": \"hybrid\",\n            \"weight_dense\": 0.7,\n            \"weight_sparse\": 0.3\n        }\n        ```\n\n        #### 2. 纯语义检索\n        ```json\n        {\n            \"type\": \"dense\"\n        }\n        ```\n\n        #### 3. 纯关键词检索\n        ```json\n        {\n            \"type\": \"sparse\"\n        }\n        ```\n\n        #### 4. 融合检索\n        ```json\n        {\n            \"type\": \"fusion\",\n            \"weights\": \"0.05,0.95\"\n        }\n        ```\n\n        ## 使用示例\n\n        ### 创建新对话（带自定义提示配置）\n        ```json\n        {\n            \"name\": \"技术支持助手\",\n            \"description\": \"专门用于技术问题解答的对话\",\n            \"kb_ids\": [\"tech_kb_001\", \"faq_kb_002\"],\n            \"search_mode\": {\n                \"type\": \"hybrid\",\n                \"weight_dense\": 0.6,\n                \"weight_sparse\": 0.4\n            },\n            \"prompt_config\": {\n                \"system\": \"你是一位专业的技术支持专家。基于以下知识库内容回答用户问题：\\n{knowledge}\\n{history}\",\n                \"prologue\": \"您好！我是技术支持助手，请问有什么技术问题需要帮助吗？\",\n                \"parameters\": [\n                    {\"key\": \"knowledge\", \"optional\": false},\n                    {\"key\": \"history\", \"optional\": true}\n                ],\n                \"empty_response\": \"很抱歉，我没有找到相关的技术资料。请提供更多细节，我会尽力帮助您。\",\n                \"custom_field\": \"可以添加自定义字段\"\n            }\n        }\n        ```","operationId":"set_dialog_v1_dialog_set_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DialogRequest"}}},"required":true},"responses":{"200":{"description":"成功设置对话","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/dialog/get":{"get":{"tags":["dialog"],"summary":"获取对话","description":"获取对话\n\n该接口用于获取指定对话的信息。\n\n参数:\n- dialog_id: str 对话的唯一标识符\n\n返回:\n- 成功时返回包含对话信息的JSON结果\n- 失败时返回错误信息","operationId":"get_v1_dialog_get_get","security":[{"LoginManager":[]}],"parameters":[{"name":"dialog_id","in":"query","required":true,"schema":{"type":"string","title":"Dialog Id"}}],"responses":{"200":{"description":"成功获取对话","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/dialog/list":{"get":{"tags":["dialog"],"summary":"列出对话","description":"列出对话\n\n该接口用于列出当前用户的所有对话。\n\n返回:\n- 成功时返回包含对话列表的JSON结果\n- 失败时返回错误信息","operationId":"list_dialogs_v1_dialog_list_get","responses":{"200":{"description":"成功列出对话","content":{"application/json":{"schema":{}}}}},"security":[{"LoginManager":[]}]}},"/v1/dialog/rm":{"post":{"tags":["dialog"],"summary":"删除对话应用","description":"删除对话\n\n该接口用于删除指定的对话。\n\n参数:\n- request: RemoveDialogRequest对象，包含要删除的对话ID列表\n    - dialog_ids: List[str] 要删除的对话ID列表\n\n返回:\n- 成功时返回成功删除的JSON结果\n- 失败时返回错误信息","operationId":"rm_v1_dialog_rm_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RemoveDialogRequest"}}},"required":true},"responses":{"200":{"description":"成功删除对话应用","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/guard_library/create":{"post":{"tags":["guard_library"],"summary":"创建词库","description":"创建词库\n\nArgs:\n    request: 创建词库请求参数\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 创建结果","operationId":"create_library_v1_guard_library_create_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateLibraryRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Create Library V1 Guard Library Create Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/guard_library/list":{"get":{"tags":["guard_library"],"summary":"获取词库列表","description":"获取词库列表\n\nArgs:\n    library_type: 词库类型过滤\n    category: 词库分类过滤\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 词库列表","operationId":"list_libraries_v1_guard_library_list_get","security":[{"LoginManager":[]}],"parameters":[{"name":"library_type","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Library Type"}},{"name":"category","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Category"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response List Libraries V1 Guard Library List Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/guard_library/update":{"put":{"tags":["guard_library"],"summary":"更新词库","description":"更新词库\n\nArgs:\n    request: 更新词库请求参数\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 更新结果","operationId":"update_library_v1_guard_library_update_put","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateLibraryRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Update Library V1 Guard Library Update Put"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/guard_library/{library_id}":{"delete":{"tags":["guard_library"],"summary":"删除词库","description":"删除词库\n\nArgs:\n    library_id: 词库ID\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 删除结果","operationId":"delete_library_v1_guard_library__library_id__delete","security":[{"LoginManager":[]}],"parameters":[{"name":"library_id","in":"path","required":true,"schema":{"type":"string","title":"Library Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Delete Library V1 Guard Library  Library Id  Delete"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/guard_library/{library_id}/items/create":{"post":{"tags":["guard_library"],"summary":"创建词库项","description":"创建词库项\n\nArgs:\n    library_id: 词库ID\n    request: 创建词库项请求参数\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 创建结果","operationId":"create_library_item_v1_guard_library__library_id__items_create_post","security":[{"LoginManager":[]}],"parameters":[{"name":"library_id","in":"path","required":true,"schema":{"type":"string","title":"Library Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateLibraryItemRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Create Library Item V1 Guard Library  Library Id  Items Create Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/guard_library/{library_id}/items":{"get":{"tags":["guard_library"],"summary":"获取词库项列表","description":"获取词库项列表\n\nArgs:\n    library_id: 词库ID\n    page: 页码\n    page_size: 每页数量\n    keyword: 搜索关键词\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 词库项列表","operationId":"get_library_items_v1_guard_library__library_id__items_get","security":[{"LoginManager":[]}],"parameters":[{"name":"library_id","in":"path","required":true,"schema":{"type":"string","title":"Library Id"}},{"name":"page","in":"query","required":false,"schema":{"type":"integer","default":1,"title":"Page"}},{"name":"page_size","in":"query","required":false,"schema":{"type":"integer","default":50,"title":"Page Size"}},{"name":"keyword","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Keyword"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Library Items V1 Guard Library  Library Id  Items Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/guard_library/{library_id}/items/batch":{"post":{"tags":["guard_library"],"summary":"批量创建词库项","description":"批量创建词库项\n\nArgs:\n    library_id: 词库ID\n    request: 批量创建词库项请求参数\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 批量创建结果","operationId":"batch_create_items_v1_guard_library__library_id__items_batch_post","security":[{"LoginManager":[]}],"parameters":[{"name":"library_id","in":"path","required":true,"schema":{"type":"string","title":"Library Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BatchCreateItemsRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Batch Create Items V1 Guard Library  Library Id  Items Batch Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/guard_library/{library_id}/items/{item_id}":{"delete":{"tags":["guard_library"],"summary":"删除词库项","description":"删除词库项\n\nArgs:\n    library_id: 词库ID\n    item_id: 词库项ID\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 删除结果","operationId":"delete_library_item_v1_guard_library__library_id__items__item_id__delete","security":[{"LoginManager":[]}],"parameters":[{"name":"library_id","in":"path","required":true,"schema":{"type":"string","title":"Library Id"}},{"name":"item_id","in":"path","required":true,"schema":{"type":"string","title":"Item Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Delete Library Item V1 Guard Library  Library Id  Items  Item Id  Delete"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/guard_library/stats":{"get":{"tags":["guard_library"],"summary":"获取词库统计","description":"获取词库统计信息\n\nArgs:\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 统计信息","operationId":"get_library_stats_v1_guard_library_stats_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Library Stats V1 Guard Library Stats Get"}}}}},"security":[{"LoginManager":[]}]}},"/v1/guard_library/init":{"post":{"tags":["guard_library"],"summary":"初始化默认词库","description":"初始化默认词库\n\nArgs:\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 初始化结果","operationId":"init_default_libraries_v1_guard_library_init_post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Init Default Libraries V1 Guard Library Init Post"}}}}},"security":[{"LoginManager":[]}]}},"/v1/system/version":{"get":{"tags":["system"],"summary":"获取版本","description":"获取系统版本信息的接口说明文档。\n\n概要：返回系统当前版本信息。\n响应描述：成功获取系统版本信息，并返回 JSON 格式的数据。\n\n返回：\n- dict: 包含系统版本信息的 JSON 结果。\n\n功能：\n1. 从系统中获取当前版本信息。\n2. 返回该版本信息以便前端或用户了解系统的当前版本。\n\n异常处理：\n- 若出现异常，将返回错误信息。\n\n注意：\n- 该接口不涉及数据库操作，仅返回静态版本信息。","operationId":"version_v1_system_version_get","responses":{"200":{"description":"成功获取版本","content":{"application/json":{"schema":{}}}}},"security":[{"LoginManager":[]}]}},"/v1/system/status":{"get":{"tags":["system"],"summary":"获取系统状态","description":"检查系统状态的接口说明文档。\n\n概要：获取系统的健康状态，包括 Milvus、存储、数据库和 Redis 等组件的状态。\n响应描述：成功获取并返回系统各组件的状态信息。\n\n返回：\n- dict: 返回包含各个组件健康状态及耗时信息的 JSON 结果。\n\n功能：\n1. 检查 Milvus 服务的健康状态并记录响应耗时。\n2. 检查存储服务的健康状态并记录响应耗时。\n3. 检查数据库服务的健康状态并记录响应耗时。\n4. 检查 Redis 服务的健康状态并记录响应耗时。\n5. 检查任务执行器的运行状态，并提供详细的延迟时间信息。\n\n流程：\n1. 尝试获取 Milvus 服务的健康状态，并记录响应耗时。\n2. 检查存储服务是否正常运行，并记录响应耗时。\n3. 尝试访问数据库，以确保数据库连接正常，并记录响应耗时。\n4. 检查 Redis 是否正常连接，并记录响应耗时。\n5. 获取任务执行器的状态信息，并提供详细的任务延迟数据。\n\n异常处理：\n- 如果在检查任何组件的健康状态过程中发生异常，将在响应结果中返回相应的错误信息。\n\n注意：\n- 所有组件的健康状态均会在 JSON 结果中返回，便于实时监控系统状态。","operationId":"status_v1_system_status_get","responses":{"200":{"description":"成功获取系统状态","content":{"application/json":{"schema":{}}}}},"security":[{"LoginManager":[]}]}},"/v1/system/new_token":{"post":{"tags":["system"],"summary":"创建新访问令牌","description":"新建访问令牌的接口说明文档。\n\n概要：为当前用户的新租户创建新的API访问令牌。\n响应描述：成功创建并返回新的API访问令牌。\n\n返回：\n- dict: 返回包含新生成的API访问令牌信息的 JSON 结果。\n\n功能：\n1. 查询当前用户的租户信息，确保用户属于某个租户。\n2. 生成新的访问令牌，并附带生成时间和更新信息。\n3. 将新令牌保存到数据库中并返回。\n\n流程：\n1. 使用 UserTenantService 从数据库中查询当前用户的租户信息。\n2. 如果用户不属于任何租户，返回错误信息。\n3. 使用 generate_confirmation_token 生成新的令牌，并附加时间信息。\n4. 调用 APITokenService 保存新生成的令牌。\n5. 返回新令牌的详细信息，包括租户ID和生成时间。\n\n异常处理：\n- 如果用户不属于任何租户，返回错误信息。\n- 如果在保存新令牌的过程中发生异常，抛出 HTTP 异常，并返回错误信息。\n\n注意：\n- 用户必须属于某个租户才能生成新的API访问令牌。","operationId":"new_token_v1_system_new_token_post","responses":{"200":{"description":"成功创建并返回新令牌","content":{"application/json":{"schema":{}}}}},"security":[{"LoginManager":[]}]}},"/v1/system/token_list":{"get":{"tags":["system"],"summary":"获取API访问令牌列表","description":"获取API访问令牌列表的接口说明文档。\n\n概要：获取当前用户的所有API访问令牌。\n响应描述：成功获取并返回用户的API访问令牌列表。\n\n返回：\n- list: 返回包含用户所有API访问令牌的JSON结果列表。\n\n功能：\n1. 查询当前用户的租户信息，确保用户属于某个租户。\n2. 查询并返回该租户的所有API访问令牌。\n\n流程：\n1. 使用 UserTenantService 从数据库中查询当前用户的租户信息。\n2. 如果用户不属于任何租户，返回错误信息。\n3. 使用 APITokenService 查询该租户的所有API访问令牌。\n4. 返回包含所有API访问令牌的列表结果。\n\n异常处理：\n- 如果用户不属于任何租户，返回错误信息。\n- 如果在查询令牌列表过程中发生异常，抛出 HTTP 异常，并返回错误信息。\n\n注意：\n- 用户必须属于某个租户才能获取API访问令牌列表。","operationId":"token_list_v1_system_token_list_get","responses":{"200":{"description":"成功获取并返回令牌列表","content":{"application/json":{"schema":{}}}}},"security":[{"LoginManager":[]}]}},"/v1/system/rm":{"post":{"tags":["system"],"summary":"删除API访问令牌","description":"删除指定的API访问令牌。\n\n此接口允许用户删除指定的API访问令牌。\n用户需提供要删除的令牌，系统会根据令牌和用户ID从数据库中删除匹配的记录。\n\n参数:\n   - token (str): 要删除的令牌。\n\n返回:\n    JSON 响应，指示删除操作是否成功。","operationId":"rm_v1_system_rm_post","requestBody":{"content":{"application/json":{"schema":{"type":"string","title":"Token","description":"要删除的令牌"}}},"required":true},"responses":{"200":{"description":"成功删除指定的令牌","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/system/config":{"get":{"tags":["system"],"summary":"获取系统配置","description":"Get system configuration.\n---\ntags:\n    - System\nresponses:\n    200:\n        description: Return system configuration\n        schema:\n            type: object\n            properties:\n                registerEnable:\n                    type: integer 0 means disabled, 1 means enabled\n                    description: Whether user registration is enabled","operationId":"get_config_v1_system_config_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/v1/document/upload":{"post":{"tags":["document"],"summary":"上传文件","description":"### POST `/upload` 文件上传接口\n\n**功能描述**:\n此接口用于上传单个或多个文件到指定的知识库，支持文件标签标注和自动文件类型识别。上传的文件会被存储并创建对应的文档记录。\n\n---\n\n### 请求参数\n\n#### Form Data 参数\n| 参数名    | 类型                | 必填 | 描述                                                                |\n|-----------|---------------------|------|---------------------------------------------------------------------|\n| `kb_id`   | `string`           | 是   | 知识库的唯一标识符                                                  |\n| `files`   | `list[UploadFile]` | 是   | 要上传的文件列表，支持多文件同时上传                                |\n| `labels`  | `string`           | 否   | JSON格式的标签字符串，用于标注文件属性，如 `[\"标签1\", \"标签2\"]`     |\n\n---\n\n### 响应 (Response)\n\n#### 成功响应 (200)\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": [\n        {\n            \"id\": \"doc_123456\",\n            \"name\": \"示例文档.pdf\",\n            \"size\": 1024000,\n            \"type\": \"pdf\",\n            \"thumbnail\": \"/v1/document/image/kb_id-thumbnail_id\",\n            \"created_time\": \"2024-01-01 12:00:00\",\n            \"status\": \"uploaded\"\n        }\n    ]\n}\n```\n\n#### 错误响应\n\n- **400: 参数错误**\n    ```json\n    {\n        \"retcode\": 400,\n        \"retmsg\": \"Lack of \"KB ID\"\",\n        \"data\": false\n    }\n    ```\n\n- **400: 文件问题**\n    ```json\n    {\n        \"retcode\": 400,\n        \"retmsg\": \"No file selected!\",\n        \"data\": false\n    }\n    ```\n\n- **400: 文件名过长**\n    ```json\n    {\n        \"retcode\": 400,\n        \"retmsg\": \"File name must be 255 bytes or less.\",\n        \"data\": false\n    }\n    ```\n\n- **404: 知识库不存在**\n    ```json\n    {\n        \"status_code\": 404,\n        \"detail\": \"Can't find this knowledgebase!\"\n    }\n    ```\n\n- **500: 服务器错误**\n    ```json\n    {\n        \"retcode\": 500,\n        \"retmsg\": \"Upload processing failed\",\n        \"data\": false\n    }\n    ```\n\n---\n\n### 主要流程\n\n1. **参数验证**:\n    - 验证知识库ID是否存在\n    - 验证文件列表是否为空\n    - 检查文件名长度限制\n\n2. **知识库验证**:\n    - 根据kb_id查找知识库\n    - 验证用户是否有权限访问该知识库\n\n3. **文件处理**:\n    - 读取所有上传文件的内容\n    - 验证文件格式和大小\n    - 生成文件缩略图（如果适用）\n\n4. **标签处理**:\n    - 解析JSON格式的labels参数\n    - 验证标签格式的正确性\n\n5. **存储操作**:\n    - 将文件存储到对象存储系统\n    - 在数据库中创建文档记录\n    - 关联文件与知识库的关系\n\n---\n\n### 支持的文件类型\n\n- **文档类型**: PDF, DOC, DOCX, TXT, MD\n- **表格类型**: XLS, XLSX, CSV\n- **演示文稿**: PPT, PPTX\n- **图片类型**: JPG, JPEG, PNG, GIF, BMP\n- **其他格式**: HTML, XML, JSON\n\n---\n\n### 使用示例\n\n#### 单文件上传\n```bash\ncurl -X POST \"http://api.example.com/v1/document/upload\"         -F \"kb_id=kb_123456\"         -F \"files=@document.pdf\"\n```\n\n#### 多文件上传带标签\n```bash\ncurl -X POST \"http://api.example.com/v1/document/upload\"         -F \"kb_id=kb_123456\"         -F \"files=@doc1.pdf\"         -F \"files=@doc2.docx\"         -F 'labels=[\"重要文档\", \"技术资料\"]'\n```\n\n---\n\n### 注意事项\n\n- **文件大小限制**: 单个文件建议不超过100MB\n- **文件名限制**: 文件名不能超过255字节\n- **并发上传**: 支持同时上传多个文件，但建议单次不超过10个\n- **标签格式**: labels必须是有效的JSON数组格式\n- **权限控制**: 只有知识库的所有者才能上传文件\n- **自动解析**: 上传后文件会自动进入解析队列等待处理","operationId":"upload_v1_document_upload_post","security":[{"LoginManager":[]}],"parameters":[{"name":"kb_id","in":"query","required":true,"schema":{"type":"string","title":"Kb Id"}},{"name":"labels","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Labels"}}],"requestBody":{"required":true,"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_upload_v1_document_upload_post"}}}},"responses":{"200":{"description":"成功上传文件","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/document/web_crawl":{"post":{"tags":["document"],"summary":"网页爬取","description":"### POST `/web_crawl` 网页爬取接口\n\n**功能描述**:\n此接口用于爬取指定URL的网页内容，将网页转换为PDF格式后存储到知识库中。支持动态网页内容抓取和自动文档创建。\n\n---\n\n### 请求体 (Request Body)\n\n| 字段     | 类型     | 必填 | 描述                                        |\n|----------|----------|------|---------------------------------------------|\n| `kb_id`  | `string` | 是   | 目标知识库的唯一标识符                      |\n| `name`   | `string` | 是   | 保存的文档名称（不包含.pdf后缀）            |\n| `url`    | `string` | 是   | 要爬取的网页URL地址                         |\n\n---\n\n### 响应 (Response)\n\n#### 成功响应 (200)\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": {\n        \"id\": \"doc_123456\",\n        \"kb_id\": \"kb_789\",\n        \"name\": \"示例网页.pdf\",\n        \"size\": 2048000,\n        \"type\": \"pdf\",\n        \"location\": \"网页内容.pdf\",\n        \"thumbnail\": \"base64_encoded_thumbnail\",\n        \"created_by\": \"user_id\",\n        \"parser_id\": \"pdf_parser\",\n        \"suffix\": \"pdf\"\n    }\n}\n```\n\n#### 错误响应\n\n- **400: URL格式无效**\n    ```json\n    {\n        \"retcode\": 400,\n        \"retmsg\": \"The URL format is invalid\",\n        \"data\": false\n    }\n    ```\n\n- **404: 知识库不存在**\n    ```json\n    {\n        \"status_code\": 404,\n        \"detail\": \"Can't find this knowledgebase!\"\n    }\n    ```\n\n- **500: 下载失败**\n    ```json\n    {\n        \"retcode\": 500,\n        \"retmsg\": \"Download failure.\",\n        \"data\": false\n    }\n    ```\n\n- **500: 文件类型不支持**\n    ```json\n    {\n        \"retcode\": 500,\n        \"retmsg\": \"This type of file has not been supported yet!\",\n        \"data\": false\n    }\n    ```\n\n---\n\n### 主要流程\n\n1. **URL验证**:\n    - 验证URL格式的有效性\n    - 检查是否为可访问的网址\n\n2. **知识库验证**:\n    - 根据kb_id查找知识库\n    - 验证用户是否有权限访问\n\n3. **网页爬取**:\n    - 使用专用工具将网页转换为PDF\n    - 保持原网页的格式和布局\n\n4. **文件处理**:\n    - 生成唯一的文件名避免重复\n    - 创建文档缩略图\n    - 确定文件类型和解析器\n\n5. **存储操作**:\n    - 将PDF文件存储到对象存储\n    - 在数据库中创建文档记录\n    - 关联到指定的知识库\n\n---\n\n### 特殊处理\n\n#### 文件类型自动识别\n- **图片文件**: 自动设置为图片解析器\n- **演示文稿**: PPT/PPTX自动设置为演示文稿解析器  \n- **邮件文件**: EML自动设置为邮件解析器\n- **PDF文件**: 使用知识库默认解析器\n\n#### 文件名处理\n- 自动添加.pdf后缀\n- 如果文件名重复，自动追加序号\n- 支持中文文件名\n\n---\n\n### 使用示例\n\n#### 爬取技术文档\n```json\n{\n    \"kb_id\": \"tech_docs_kb\",\n    \"name\": \"API文档\",\n    \"url\": \"https://docs.example.com/api\"\n}\n```\n\n#### 爬取新闻页面\n```json\n{\n    \"kb_id\": \"news_kb\", \n    \"name\": \"今日新闻\",\n    \"url\": \"https://news.example.com/today\"\n}\n```\n\n---\n\n### 注意事项\n\n- **URL限制**: 仅支持HTTP/HTTPS协议的网址\n- **内容限制**: 无法爬取需要登录或有访问限制的页面\n- **格式保持**: 尽量保持原网页的排版和格式\n- **文件大小**: 生成的PDF大小取决于网页内容复杂度\n- **处理时间**: 复杂网页的转换可能需要较长时间\n- **动态内容**: 支持JavaScript渲染的动态内容抓取\n- **存储路径**: 文件存储在知识库对应的存储空间中","operationId":"web_crawl_v1_document_web_crawl_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebCrawlRequest"}}},"required":true},"responses":{"200":{"description":"成功爬取网页","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/document/create":{"post":{"tags":["document"],"summary":"创建文件或文件夹","operationId":"create_document_v1_document_create_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateDocumentRequest"}}},"required":true},"responses":{"200":{"description":"成功创建文件或文件夹","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/document/list":{"get":{"tags":["document"],"summary":"列出文档","description":"### GET `/list` 列出文档接口\n\n**功能描述**:\n此接口用于获取指定知识库中的文档列表，支持关键词搜索、分页查询和排序功能。返回文档的基本信息和缩略图。\n\n---\n\n### 请求参数 (Query Parameters)\n\n| 参数名      | 类型      | 必填 | 默认值       | 描述                                                    |\n|-------------|-----------|------|-------------|--------------------------------------------------------|\n| `kb_id`     | `string`  | 是   | -           | 知识库的唯一标识符                                      |\n| `keywords`  | `string`  | 否   | \"\"          | 搜索关键词，支持文档名称模糊匹配                        |\n| `page`      | `int`     | 否   | 1           | 页码，从1开始                                          |\n| `page_size` | `int`     | 否   | 15          | 每页返回的文档数量                                      |\n| `orderby`   | `string`  | 否   | create_time | 排序字段，支持: create_time, name, size, update_time   |\n| `desc`      | `boolean` | 否   | true        | 是否降序排列                                           |\n\n---\n\n### 响应 (Response)\n\n#### 成功响应 (200)\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": {\n        \"total\": 100,\n        \"docs\": [\n            {\n                \"id\": \"doc_123456\",\n                \"name\": \"技术文档.pdf\",\n                \"size\": 1024000,\n                \"type\": \"pdf\",\n                \"status\": \"1\",\n                \"run\": \"done\",\n                \"progress\": 100,\n                \"chunk_num\": 50,\n                \"token_num\": 15000,\n                \"thumbnail\": \"/v1/document/image/kb_id-thumbnail_id\",\n                \"create_time\": \"2024-01-01 12:00:00\",\n                \"update_time\": \"2024-01-01 13:00:00\",\n                \"created_by\": \"user_123\",\n                \"parser_id\": \"pdf_parser\",\n                \"suffix\": \"pdf\"\n            }\n        ]\n    }\n}\n```\n\n#### 错误响应\n\n- **400: 知识库ID缺失**\n    ```json\n    {\n        \"retcode\": 400,\n        \"retmsg\": \"Lack of \"KB ID\"\",\n        \"data\": false\n    }\n    ```\n\n- **403: 权限不足**\n    ```json\n    {\n        \"retcode\": 403,\n        \"retmsg\": \"Only owner of knowledgebase authorized for this operation.\",\n        \"data\": false\n    }\n    ```\n\n---\n\n### 主要流程\n\n1. **权限验证**:\n    - 验证知识库ID是否存在\n    - 检查用户是否为知识库的所有者\n    - 确认用户有访问权限\n\n2. **数据查询**:\n    - 根据关键词进行模糊搜索\n    - 应用分页和排序参数\n    - 统计符合条件的文档总数\n\n3. **结果处理**:\n    - 转换时间格式为字符串\n    - 处理缩略图URL路径\n    - 格式化返回数据\n\n---\n\n### 排序字段说明\n\n| 字段名        | 描述           | 数据类型    |\n|---------------|----------------|-------------|\n| `create_time` | 创建时间       | datetime    |\n| `update_time` | 更新时间       | datetime    |\n| `name`        | 文档名称       | string      |\n| `size`        | 文件大小       | integer     |\n| `progress`    | 处理进度       | integer     |\n\n---\n\n### 文档状态说明\n\n#### 运行状态 (run)\n- `unstart`: 未开始处理\n- `running`: 正在处理\n- `done`: 处理完成\n- `fail`: 处理失败\n\n#### 可用状态 (status)\n- `0`: 禁用，不参与检索\n- `1`: 启用，正常使用\n\n---\n\n### 使用示例\n\n#### 基本查询\n```\nGET /v1/document/list?kb_id=kb_123456\n```\n\n#### 关键词搜索\n```\nGET /v1/document/list?kb_id=kb_123456&keywords=技术文档\n```\n\n#### 分页查询\n```\nGET /v1/document/list?kb_id=kb_123456&page=2&page_size=20\n```\n\n#### 自定义排序\n```\nGET /v1/document/list?kb_id=kb_123456&orderby=size&desc=false\n```\n\n---\n\n### 注意事项\n\n- **权限控制**: 只有知识库所有者才能查看文档列表\n- **缩略图处理**: 自动处理缩略图URL，支持base64和文件路径两种格式\n- **时间格式**: 所有时间字段统一转换为字符串格式返回\n- **性能优化**: 建议合理设置page_size，避免单次查询过多数据\n- **搜索范围**: 关键词搜索仅匹配文档名称，不包含文档内容","operationId":"list_docs_v1_document_list_get","security":[{"LoginManager":[]}],"parameters":[{"name":"kb_id","in":"query","required":true,"schema":{"type":"string","title":"Kb Id"}},{"name":"keywords","in":"query","required":false,"schema":{"type":"string","default":"","title":"Keywords"}},{"name":"page","in":"query","required":false,"schema":{"type":"integer","default":1,"title":"Page"}},{"name":"page_size","in":"query","required":false,"schema":{"type":"integer","default":15,"title":"Page Size"}},{"name":"orderby","in":"query","required":false,"schema":{"type":"string","default":"create_time","title":"Orderby"}},{"name":"desc","in":"query","required":false,"schema":{"type":"boolean","default":true,"title":"Desc"}}],"responses":{"200":{"description":"成功列出文档","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"post":{"tags":["document"],"summary":"列出文档","operationId":"list_docs_v1_document_list_post","security":[{"LoginManager":[]}],"parameters":[{"name":"kb_id","in":"query","required":true,"schema":{"type":"string","title":"Kb Id"}},{"name":"keywords","in":"query","required":false,"schema":{"type":"string","default":"","title":"Keywords"}},{"name":"page","in":"query","required":false,"schema":{"type":"integer","default":0,"title":"Page"}},{"name":"page_size","in":"query","required":false,"schema":{"type":"integer","default":0,"title":"Page Size"}},{"name":"orderby","in":"query","required":false,"schema":{"type":"string","default":"create_time","title":"Orderby"}},{"name":"desc","in":"query","required":false,"schema":{"type":"boolean","default":true,"title":"Desc"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DocumentFilter"}}}},"responses":{"200":{"description":"成功列出文档","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/document/filter":{"post":{"tags":["document"],"summary":"获取文档过滤器","description":"获取指定知识库的文档过滤器统计信息。\n\n该接口根据提供的过滤条件，返回知识库中文档的统计信息，包括文件后缀分布和运行状态分布。\n\n参数:\n- kb_id (str): 知识库ID\n- keywords (str): 关键词过滤，默认为空\n- suffix (list[str]): 文件后缀过滤，默认为空列表\n- run_status (list[str]): 运行状态过滤，默认为空列表  \n- types (list[str]): 文件类型过滤，默认为空列表\n\n返回:\n- 包含过滤器统计信息和总数的响应","operationId":"get_filter_v1_document_filter_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/FilterRequest"}}},"required":true},"responses":{"200":{"description":"成功获取文档过滤器","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/document/infos":{"post":{"tags":["document"],"summary":"获取文档信息","operationId":"docinfos_v1_document_infos_post","requestBody":{"content":{"application/json":{"schema":{"items":{"type":"string"},"type":"array","title":"Doc Ids"}}},"required":true},"responses":{"200":{"description":"成功获取文档信息","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/document/thumbnails":{"get":{"tags":["document"],"summary":"获取文档缩略图","operationId":"thumbnails_v1_document_thumbnails_get","security":[{"LoginManager":[]}],"parameters":[{"name":"doc_ids","in":"query","required":true,"schema":{"type":"string","title":"Doc Ids"}}],"responses":{"200":{"description":"成功获取文档缩略图","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/document/change_status":{"post":{"tags":["document"],"summary":"更改文档状态","description":"### POST `/change_status` 更改文档状态接口\n\n**功能描述**:\n此接口用于更改单个或多个文档的可用状态，支持批量操作和向后兼容。接口会同步更新数据库中的文档状态和搜索索引中的可用性标记。\n\n---\n\n### 请求体 (Request Body)\n\n| 字段        | 类型               | 必填 | 描述                                                                                 |\n|-------------|-------------------|------|--------------------------------------------------------------------------------------|\n| `doc_ids`   | `list[str]` 或 `str` | 是   | 文档ID列表或单个文档ID。支持批量操作，可传入字符串数组或单个字符串。                 |\n| `status`    | `int`             | 是   | 文档状态：0 = 禁用，1 = 启用。                                                      |\n| `doc_id`    | `str`             | 否   | 单个文档ID（向后兼容字段）。当 `doc_ids` 不存在时使用此字段。                        |\n\n**兼容性说明**:\n- 新版本调用者应使用 `doc_ids` 字段\n- 旧版本调用者可继续使用 `doc_id` 字段，系统会自动兼容\n- 优先级：`doc_ids` > `doc_id`\n\n---\n\n### 响应 (Response)\n\n#### 成功响应 (200)\n\n- **`Content-Type: application/json`**\n- **批量操作响应示例**:\n    ```json\n    {\n        \"retcode\": 0,\n        \"retmsg\": \"success\", \n        \"data\": {\n            \"doc_123\": {\"status\": \"1\"},\n            \"doc_456\": {\"status\": \"1\"},\n            \"doc_789\": {\"error\": \"No authorization.\"}\n        }\n    }\n    ```\n\n- **单文档操作响应示例**:\n    ```json\n    {\n        \"retcode\": 0,\n        \"retmsg\": \"success\",\n        \"data\": {\n            \"doc_123\": {\"status\": \"1\"}\n        }\n    }\n    ```\n\n#### 错误响应\n\n- **400: 参数错误**\n    - **状态值无效**:\n        ```json\n        {\n            \"retcode\": 400,\n            \"retmsg\": \"\"Status\" must be either 0 or 1!\",\n            \"data\": false\n        }\n        ```\n    - **文档ID缺失**:\n        ```json\n        {\n            \"retcode\": 400,\n            \"retmsg\": \"Document ID(s) required!\",\n            \"data\": false\n        }\n        ```\n\n#### 单个文档处理错误类型\n\n在批量操作中，每个文档ID的处理结果单独返回，可能的错误包括：\n\n- **权限不足**:\n    ```json\n    \"doc_id\": {\"error\": \"No authorization.\"}\n    ```\n\n- **文档不存在**:\n    ```json\n    \"doc_id\": {\"error\": \"Document not found!\"}\n    ```\n\n- **知识库不存在**:\n    ```json\n    \"doc_id\": {\"error\": \"Can't find this knowledgebase!\"}\n    ```\n\n- **数据库更新失败**:\n    ```json\n    \"doc_id\": {\"error\": \"Database error (Document update)!\"}\n    ```\n\n- **搜索索引更新失败**:\n    ```json\n    \"doc_id\": {\"error\": \"Database error (docStore update)!\"}\n    ```\n\n- **内部服务器错误**:\n    ```json\n    \"doc_id\": {\"error\": \"Internal server error: 具体错误信息\"}\n    ```\n\n---\n\n### 主要流程\n\n1. **参数验证**:\n    - 验证状态值必须为 0 或 1\n    - 处理兼容性字段，优先使用 `doc_ids`，回退到 `doc_id`\n    - 将单个文档ID转换为列表格式以统一处理\n\n2. **批量处理循环**:\n    - 遍历所有文档ID\n    - 对每个文档进行权限验证\n    - 验证文档和所属知识库的存在性\n\n3. **状态更新**:\n    - 更新数据库中的文档状态记录\n    - 同步更新搜索索引中的 `available_int` 字段\n    - 确保数据库和搜索引擎的数据一致性\n\n4. **结果汇总**:\n    - 为每个文档ID返回处理结果\n    - 成功时返回新状态，失败时返回错误信息\n\n---\n\n### 使用场景\n\n#### 1. 单文档状态更改（向后兼容）\n```json\n{\n    \"doc_id\": \"doc_123456\",\n    \"status\": 1\n}\n```\n\n#### 2. 批量文档状态更改（新功能）\n```json\n{\n    \"doc_ids\": [\"doc_123\", \"doc_456\", \"doc_789\"],\n    \"status\": 0\n}\n```\n\n#### 3. 混合格式（推荐使用 doc_ids）\n```json\n{\n    \"doc_ids\": \"doc_123456\",\n    \"status\": 1\n}\n```\n\n---\n\n### 注意事项\n\n- **权限控制**: 只有文档的拥有者才能更改文档状态\n- **数据一致性**: 接口会同时更新关系数据库和向量数据库的状态\n- **批量操作**: 每个文档的处理结果独立返回，部分失败不影响其他文档\n- **状态含义**: \n  - `0`: 文档禁用，不参与检索\n  - `1`: 文档启用，正常参与检索\n- **错误处理**: 单个文档处理失败不会影响其他文档的处理\n- **向后兼容**: 完全兼容旧版本的 `doc_id` 字段调用方式\n\n---\n\n### 示例请求\n\n#### 批量启用文档:\n```json\n{\n    \"doc_ids\": [\"doc_001\", \"doc_002\", \"doc_003\"],\n    \"status\": 1\n}\n```\n\n#### 单文档禁用（旧版本兼容）:\n```json\n{\n    \"doc_id\": \"doc_123456\",\n    \"status\": 0\n}\n```\n\n### 示例响应\n\n#### 批量操作成功响应:\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": {\n        \"doc_001\": {\"status\": \"1\"},\n        \"doc_002\": {\"status\": \"1\"}, \n        \"doc_003\": {\"error\": \"Document not found!\"}\n    }\n}\n```\n\n#### 单文档操作成功响应:\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": {\n        \"doc_123456\": {\"status\": \"0\"}\n    }\n}\n```","operationId":"change_status_v1_document_change_status_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChangeStatusRequest"}}},"required":true},"responses":{"200":{"description":"成功更改文档状态","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/document/change_auth":{"post":{"tags":["document"],"summary":"更改文档授权","operationId":"change_auth_v1_document_change_auth_post","security":[{"LoginManager":[]}],"parameters":[{"name":"auths","in":"query","required":true,"schema":{"type":"string","title":"Auths"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChangeAuthRequest"}}}},"responses":{"200":{"description":"成功更改文档授权","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/document/rm":{"post":{"tags":["document"],"summary":"删除文档","description":"### POST `/rm` 删除文档接口\n\n**功能描述**:\n此接口用于删除单个或多个文档，包括数据库记录、文件存储和相关的任务记录。支持批量删除操作，并自动处理文档间的依赖关系。\n\n---\n\n### 请求体 (Request Body)\n\n| 字段      | 类型          | 必填 | 描述                                              |\n|-----------|---------------|------|---------------------------------------------------|\n| `doc_id`  | `list[str]`   | 是   | 要删除的文档ID列表，支持单个或多个文档ID          |\n\n**兼容性说明**:\n- 请求体中的 `doc_id` 字段支持字符串和字符串数组两种格式\n- 单个文档删除：`{\"doc_id\": \"doc_123\"}`\n- 批量文档删除：`{\"doc_id\": [\"doc_123\", \"doc_456\"]}`\n\n---\n\n### 响应 (Response)\n\n#### 成功响应 (200)\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": true\n}\n```\n\n#### 错误响应\n\n- **403: 权限不足**\n    ```json\n    {\n        \"retcode\": 403,\n        \"retmsg\": \"No authorization.\",\n        \"data\": false\n    }\n    ```\n\n- **400: 文档不存在**\n    ```json\n    {\n        \"retcode\": 400,\n        \"retmsg\": \"Document not found!\",\n        \"data\": false\n    }\n    ```\n\n- **400: 租户不存在**\n    ```json\n    {\n        \"retcode\": 400,\n        \"retmsg\": \"Tenant not found!\",\n        \"data\": false\n    }\n    ```\n\n- **400: 数据库删除失败**\n    ```json\n    {\n        \"retcode\": 400,\n        \"retmsg\": \"Database error (Document removal)!\",\n        \"data\": false\n    }\n    ```\n\n- **500: 服务器错误**\n    ```json\n    {\n        \"retcode\": 500,\n        \"retmsg\": \"删除过程中发生的具体错误信息\",\n        \"data\": false\n    }\n    ```\n\n---\n\n### 主要流程\n\n1. **权限验证**:\n    - 检查用户对每个文档的删除权限\n    - 验证用户是否为文档的所有者或有删除权限\n\n2. **删除前准备**:\n    - 获取文档的基本信息（解析器类型、知识库ID等）\n    - 获取文件存储地址信息\n    - 初始化知识库文档目录结构\n\n3. **批量删除操作**:\n    - 删除相关的任务记录\n    - 从数据库中移除文档记录\n    - 删除文件与文档的关联记录\n    - 从对象存储中删除文件内容\n\n4. **特殊处理**:\n    - 对于表格类型文档，更新知识库的字段映射\n    - 统计表格文档数量，必要时清理字段映射配置\n\n5. **错误处理**:\n    - 收集所有删除过程中的错误信息\n    - 确保部分失败不影响其他文档的删除\n\n---\n\n### 删除范围\n\n#### 数据库记录\n- 文档基本信息记录\n- 文件与文档的关联关系\n- 相关的处理任务记录\n- 向量索引中的文档数据\n\n#### 存储文件\n- 原始上传文件\n- 生成的缩略图\n- 处理过程中的临时文件\n\n#### 配置信息\n- 表格文档的字段映射（当知识库中无其他表格文档时）\n- 文档的元数据配置\n\n---\n\n### 特殊文档类型处理\n\n#### 表格文档 (TABLE)\n- 删除表格文档时会检查知识库中的表格文档数量\n- 如果是最后一个表格文档，会自动清理字段映射配置\n- 确保知识库配置的一致性\n\n#### 虚拟文档 (VIRTUAL)\n- 仅删除数据库记录，无需处理文件存储\n- 清理相关的文档内容块\n\n---\n\n### 使用示例\n\n#### 删除单个文档\n```json\n{\n    \"doc_id\": [\"doc_123456\"]\n}\n```\n\n#### 批量删除文档\n```json\n{\n    \"doc_id\": [\"doc_123\", \"doc_456\", \"doc_789\"]\n}\n```\n\n#### 兼容格式（单个文档）\n```json\n{\n    \"doc_id\": \"doc_123456\"\n}\n```\n\n---\n\n### 注意事项\n\n- **权限控制**: 只有文档的创建者或有删除权限的用户才能执行删除操作\n- **不可逆操作**: 删除操作不可撤销，请谨慎使用\n- **批量处理**: 支持批量删除，但建议单次删除数量不超过100个\n- **依赖检查**: 删除前会检查文档是否被其他功能引用\n- **存储清理**: 自动清理所有相关的存储文件，释放存储空间\n- **索引同步**: 同步清理向量数据库中的相关索引\n- **事务处理**: 使用事务确保数据一致性，避免部分删除导致的数据不一致\n- **错误累积**: 多个文档删除时，单个失败不会阻止其他文档的删除","operationId":"rm_v1_document_rm_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api__apps__document__RemoveRequest"}}},"required":true},"responses":{"200":{"description":"成功删除文档","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/document/run":{"post":{"tags":["document"],"summary":"运行任务","description":"### POST `/run` 运行文档处理任务接口\n\n**功能描述**:\n此接口用于启动或停止文档的处理任务，支持批量操作。可以控制文档的解析、向量化等处理流程，并可选择是否清除历史处理数据。\n\n---\n\n### 请求体 (Request Body)\n\n| 字段       | 类型          | 必填 | 描述                                                        |\n|------------|---------------|------|-------------------------------------------------------------|\n| `doc_ids`  | `list[str]`   | 是   | 要处理的文档ID列表                                          |\n| `run`      | `int`         | 是   | 任务状态：0=停止，1=启动                                    |\n| `delete`   | `boolean`     | 否   | 是否删除历史处理数据，默认false                             |\n\n---\n\n### 响应 (Response)\n\n#### 成功响应 (200)\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": true\n}\n```\n\n#### 错误响应\n\n- **403: 权限不足**\n    ```json\n    {\n        \"retcode\": 403,\n        \"retmsg\": \"No authorization.\",\n        \"data\": false\n    }\n    ```\n\n- **400: 文档不存在**\n    ```json\n    {\n        \"retcode\": 400,\n        \"retmsg\": \"Document not found!\",\n        \"data\": false\n    }\n    ```\n\n- **400: 租户不存在**\n    ```json\n    {\n        \"retcode\": 400,\n        \"retmsg\": \"Tenant not found!\",\n        \"data\": false\n    }\n    ```\n\n- **400: Milvus删除失败**\n    ```json\n    {\n        \"retcode\": 400,\n        \"retmsg\": \"Milvus delete failed!\",\n        \"data\": false\n    }\n    ```\n\n---\n\n### 主要流程\n\n1. **权限验证**:\n    - 验证用户对所有文档的访问权限\n    - 确保用户有操作这些文档的权利\n\n2. **状态更新**:\n    - 更新文档的运行状态\n    - 重置进度信息（当启动新任务时）\n    - 清零chunk_num和token_num（当delete=true时）\n\n3. **数据清理**（当delete=true时）:\n    - 删除相关的任务记录\n    - 清除Milvus中的向量数据\n    - 重置文档的处理统计信息\n\n4. **任务调度**（当run=1时）:\n    - 获取文档的存储信息\n    - 将文档加入处理队列\n    - 处理表格文档的特殊逻辑\n\n---\n\n### 任务状态说明\n\n#### 运行状态值\n| 值 | 状态      | 描述                           |\n|----|-----------|--------------------------------|\n| 0  | 停止      | 停止文档处理，不进入处理队列   |\n| 1  | 运行      | 启动文档处理，加入处理队列     |\n\n#### 文档处理状态\n- `unstart`: 未开始处理\n- `running`: 正在处理中\n- `done`: 处理完成\n- `fail`: 处理失败\n\n---\n\n### 特殊处理逻辑\n\n#### 表格文档处理 (TABLE类型)\n- 启动表格文档处理前会检查知识库中的表格文档数量\n- 如果是首个表格文档，会清理旧的字段映射配置\n- 确保表格文档的字段映射一致性\n\n#### 重新处理 (delete=true)\n- 清除文档在向量数据库中的所有数据\n- 重置文档的chunk_num、token_num等统计信息\n- 删除相关的处理任务记录\n- 适用于文档内容发生变化需要重新处理的场景\n\n---\n\n### 使用场景\n\n#### 1. 启动文档处理\n```json\n{\n    \"doc_ids\": [\"doc_123\", \"doc_456\"],\n    \"run\": 1\n}\n```\n\n#### 2. 停止文档处理\n```json\n{\n    \"doc_ids\": [\"doc_123\", \"doc_456\"],\n    \"run\": 0\n}\n```\n\n#### 3. 重新处理文档（清除历史数据）\n```json\n{\n    \"doc_ids\": [\"doc_123\"],\n    \"run\": 1,\n    \"delete\": true\n}\n```\n\n---\n\n### 处理队列机制\n\n#### 任务优先级\n- 按照文档提交顺序进行处理\n- 支持并发处理多个文档\n- 自动处理任务失败和重试\n\n#### 进度跟踪\n- 实时更新文档处理进度\n- 记录处理过程中的错误信息\n- 提供详细的处理状态反馈\n\n---\n\n### 注意事项\n\n- **权限控制**: 只有文档所有者才能控制文档的处理状态\n- **批量操作**: 支持同时处理多个文档，但建议合理控制数量\n- **数据一致性**: delete操作会彻底清除相关数据，请谨慎使用\n- **处理时间**: 文档处理时间取决于文档大小和复杂度\n- **资源占用**: 处理过程会占用系统资源，建议错峰处理大量文档\n- **状态同步**: 任务状态变更会实时反映在文档列表中\n- **错误处理**: 处理失败的文档会保留错误信息供调试使用\n- **向量数据**: 删除操作会同步清理Milvus中的向量数据","operationId":"run_v1_document_run_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RunRequest"}}},"required":true},"responses":{"200":{"description":"成功运行任务","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/document/rename":{"post":{"tags":["document"],"summary":"重命名文档","operationId":"rename_v1_document_rename_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api__apps__document__RenameRequest"}}},"required":true},"responses":{"200":{"description":"成功重命名文档","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/document/get/{doc_id}":{"get":{"tags":["document"],"summary":"获取文档内容","operationId":"get_document_v1_document_get__doc_id__get","parameters":[{"name":"doc_id","in":"path","required":true,"schema":{"type":"string","title":"Doc Id"}}],"responses":{"200":{"description":"成功获取文档内容","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/document/change_parser":{"post":{"tags":["document"],"summary":"更改解析器","operationId":"change_parser_v1_document_change_parser_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChangeParserRequest"}}},"required":true},"responses":{"200":{"description":"成功更改解析器","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/document/image/{image_id}":{"get":{"tags":["document"],"summary":"获取图片","operationId":"get_image_v1_document_image__image_id__get","security":[{"LoginManager":[]}],"parameters":[{"name":"image_id","in":"path","required":true,"schema":{"type":"string","title":"Image Id"}}],"responses":{"200":{"description":"成功获取图片","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/document/parse":{"post":{"tags":["document"],"summary":"解析网页或文件内容","description":"**功能描述**:\n此接口用于解析用户上传的文件或提供的网页URL内容，提取其中的文本信息并返回给用户。支持两种模式：基于URL解析网页内容或上传文件进行解析。\n\n### 请求参数:\n- **url** (str, 可选):\n    - 描述: 用户提供的网页URL，用于解析网页内容。\n    - 备注: 若提供此参数，系统将优先处理URL内容。\n- **files** (list[UploadFile], 可选):\n    - 描述: 用户上传的文件列表，可包含多个文件。\n    - 备注: 若未提供URL参数，则会尝试解析上传的文件内容。\n- **user**:\n    - 描述: 通过依赖项注入的用户信息，用于权限校验。\n\n### 功能流程:\n1. **URL解析模式**:\n    - 验证URL格式是否合法。\n    - 使用Selenium驱动器加载网页，捕获页面的请求响应头，并提取网页的HTML内容。\n    - 对HTML内容进行文本解析，提取有意义的段落并返回。\n    - 若网页内容下载文件，则模拟 `File` 类读取文件内容并解析。\n\n2. **文件解析模式**:\n    - 验证是否提供了文件。\n    - 逐个读取上传文件的内容，将文件数据传递给 `FileService.parse_docs` 进行解析。\n    - 返回解析后的文本内容。\n\n3. **异常处理**:\n    - 捕获处理过程中发生的所有异常，并记录日志，返回适当的错误消息。\n\n### 响应 (Response):\n- **成功响应 (200)**:\n    - `data` (str): 返回解析后的文本内容，按段落分割。\n- **错误响应**:\n    - **400: 参数错误**:\n        - URL格式无效或未提供文件时返回。\n    - **500: 服务器错误**:\n        - 解析过程中发生内部错误时返回。\n\n### 注意事项:\n- **优先级**:\n    - 当URL和文件同时提供时，系统优先处理URL内容。\n- **目录管理**:\n    - 下载的文件会存储在 `logs/downloads` 目录中，请确保目录具有写入权限。\n- **Selenium配置**:\n    - 采用无头浏览器模式运行，为了兼容性，需安装Chrome及对应的WebDriver。\n- **文件解析**:\n    - 上传文件内容会以字节流方式读取并处理，文件名作为辅助信息传递。","operationId":"parse_v1_document_parse_post","requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_parse_v1_document_parse_post"}}}},"responses":{"200":{"description":"成功解析内容","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/document/set_meta":{"post":{"tags":["document"],"summary":"设置文档元数据","operationId":"set_meta_v1_document_set_meta_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SetMetaRequest"}}},"required":true},"responses":{"200":{"description":"成功设置文档元数据","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/search/create":{"post":{"tags":["search"],"summary":"创建搜索应用","description":"### POST `/create` 创建搜索应用\n\n**功能描述**:\n此接口用于创建新的搜索应用。用户可以通过提供应用名称、描述和搜索配置来创建个性化的搜索应用。\n系统会自动检查名称重复性、验证用户权限，并为搜索应用分配唯一标识符。\n\n---\n### 请求体 (Request Body)\n| 字段            | 类型     | 必填 | 描述                                                   |\n|-----------------|----------|------|--------------------------------------------------------|\n| `name`          | `string` | 是   | 搜索应用名称，不能为空，长度不能超过系统限制            |\n| `description`   | `string` | 否   | 搜索应用描述信息，用于说明应用的用途和功能              |\n| `search_config` | `object` | 否   | 搜索配置对象，包含搜索相关的参数设置                   |\n\n**请求示例**:\n```json\n{\n    \"name\": \"智能客服搜索\",\n    \"description\": \"用于客服场景的智能搜索应用\",\n    \"search_config\": {\n        \"max_results\": 10,\n        \"similarity_threshold\": 0.8\n    }\n}\n```\n\n---\n### 响应 (Response)\n#### 成功响应 (200)\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": {\n        \"search_id\": \"uuid-generated-id\"\n    }\n}\n```\n\n#### 错误响应\n- **数据验证错误**:\n```json\n{\n    \"retcode\": 400,\n    \"retmsg\": \"Search name must be string.\",\n    \"data\": null\n}\n```\n- **名称重复错误**:\n```json\n{\n    \"retcode\": 400,\n    \"retmsg\": \"已存在该搜索应用名: 智能客服搜索，请调整！\",\n    \"data\": null\n}\n```\n- **权限验证错误**:\n```json\n{\n    \"retcode\": 400,\n    \"retmsg\": \"Authorization identity.\",\n    \"data\": null\n}\n```\n\n---\n### 主要流程\n1. 验证请求参数的有效性（名称类型、长度限制等）\n2. 验证用户租户身份，确保用户有权限创建搜索应用\n3. 检查搜索应用名称是否重复，避免重名冲突\n4. 生成唯一的搜索应用ID，保存搜索应用信息到数据库\n5. 返回创建成功的搜索应用ID\n\n---\n### 注意事项\n- **名称限制**: 搜索应用名称不能为空，且UTF-8编码长度不能超过DATASET_NAME_LIMIT\n- **权限验证**: 需要验证用户的租户身份，未授权用户无法创建搜索应用\n- **名称唯一性**: 同一租户下的搜索应用名称必须唯一\n- **自动去重**: 系统会自动处理重复名称，添加后缀确保唯一性","operationId":"create_v1_search_create_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateSearchRequest"}}},"required":true},"responses":{"200":{"description":"成功创建搜索应用","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/search/update":{"post":{"tags":["search"],"summary":"更新搜索应用","description":"### POST `/update` 更新搜索应用\n\n**功能描述**:\n此接口用于更新现有的搜索应用信息。支持更新应用名称、描述和搜索配置。\n系统会验证用户权限、检查名称重复性，并合并搜索配置参数，保留现有配置的同时应用新的设置。\n\n---\n### 请求体 (Request Body)\n| 字段            | 类型     | 必填 | 描述                                                   |\n|-----------------|----------|------|--------------------------------------------------------|\n| `search_id`     | `string` | 是   | 要更新的搜索应用ID                                     |\n| `name`          | `string` | 是   | 新的搜索应用名称                                       |\n| `description`   | `string` | 否   | 新的搜索应用描述                                       |\n| `search_config` | `object` | 否   | 新的搜索配置，会与现有配置合并                         |\n| `tenant_id`     | `string` | 是   | 租户ID，用于权限验证                                   |\n\n**请求示例**:\n```json\n{\n    \"search_id\": \"uuid-search-id\",\n    \"name\": \"增强版智能客服搜索\",\n    \"description\": \"升级版的客服搜索应用，支持更多功能\",\n    \"search_config\": {\n        \"max_results\": 20,\n        \"enable_semantic_search\": true\n    },\n    \"tenant_id\": \"tenant-uuid\"\n}\n```\n\n---\n### 响应 (Response)\n#### 成功响应 (200)\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": {\n        \"id\": \"uuid-search-id\",\n        \"name\": \"增强版智能客服搜索\",\n        \"description\": \"升级版的客服搜索应用，支持更多功能\",\n        \"search_config\": {\n            \"max_results\": 20,\n            \"similarity_threshold\": 0.8,\n            \"enable_semantic_search\": true\n        },\n        \"tenant_id\": \"tenant-uuid\",\n        \"created_by\": \"user-uuid\",\n        \"create_time\": \"2024-07-15T16:20:00\",\n        \"update_time\": \"2024-07-15T17:30:00\"\n    }\n}\n```\n\n#### 错误响应\n- **权限不足**:\n```json\n{\n    \"retcode\": 403,\n    \"retmsg\": \"No authorization.\",\n    \"data\": false\n}\n```\n- **搜索应用不存在**:\n```json\n{\n    \"retcode\": 400,\n    \"retmsg\": \"Cannot find search uuid-search-id\",\n    \"data\": false\n}\n```\n- **名称重复**:\n```json\n{\n    \"retcode\": 400,\n    \"retmsg\": \"Duplicated search name.\",\n    \"data\": null\n}\n```\n\n---\n### 主要流程\n1. 验证请求参数的有效性和用户权限\n2. 查找要更新的搜索应用，确认其存在性\n3. 检查新名称是否与其他应用重复（忽略大小写）\n4. 合并搜索配置：保留现有配置，应用新的配置项\n5. 更新搜索应用信息并返回完整的更新后数据\n\n---\n### 注意事项\n- **权限验证**: 只有有权限的用户才能更新搜索应用\n- **配置合并**: 新的search_config会与现有配置合并，不会完全覆盖\n- **名称唯一性**: 更新后的名称在同一租户下必须唯一（不区分大小写）\n- **原子操作**: 更新操作具有原子性，要么全部成功要么全部失败","operationId":"update_v1_search_update_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateSearchRequest"}}},"required":true},"responses":{"200":{"description":"成功更新搜索应用","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/search/detail":{"get":{"tags":["search"],"summary":"获取搜索应用详情","description":"### GET `/detail` 获取搜索应用详情\n\n**功能描述**:\n此接口用于获取指定搜索应用的详细信息。系统会验证用户对该搜索应用的访问权限，\n确保用户只能查看有权限的搜索应用详情，包括应用的基本信息、配置参数和元数据。\n\n---\n### 请求参数 (Query Parameters)\n| 参数        | 类型     | 必填 | 描述           |\n|-------------|----------|------|----------------|\n| `search_id` | `string` | 是   | 搜索应用的唯一标识符 |\n\n**请求示例**:\n```\nGET /detail?search_id=uuid-search-id\n```\n\n---\n### 响应 (Response)\n#### 成功响应 (200)\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": {\n        \"id\": \"uuid-search-id\",\n        \"name\": \"智能客服搜索\",\n        \"description\": \"用于客服场景的智能搜索应用\",\n        \"search_config\": {\n            \"max_results\": 10,\n            \"similarity_threshold\": 0.8\n        },\n        \"tenant_id\": \"tenant-uuid\",\n        \"created_by\": \"user-uuid\",\n        \"create_time\": \"2024-07-15T16:20:00\",\n        \"update_time\": \"2024-07-15T16:20:00\",\n        \"status\": \"VALID\"\n    }\n}\n```\n\n#### 错误响应\n- **权限不足**:\n```json\n{\n    \"retcode\": 500,\n    \"retmsg\": \"Has no permission for this operation.\",\n    \"data\": false\n}\n```\n- **搜索应用不存在**:\n```json\n{\n    \"retcode\": 400,\n    \"retmsg\": \"Can't find this Search App!\",\n    \"data\": null\n}\n```\n\n---\n### 主要流程\n1. 验证用户身份和登录状态\n2. 检查用户对指定搜索应用的访问权限\n3. 遍历用户所属的所有租户，查找搜索应用\n4. 获取搜索应用的完整详细信息\n5. 返回搜索应用的所有相关数据\n\n---\n### 注意事项\n- **权限验证**: 用户只能查看自己有权限访问的搜索应用\n- **多租户支持**: 系统会检查用户在所有租户中的权限\n- **数据完整性**: 返回搜索应用的完整信息，包括配置和元数据\n- **安全性**: 未授权访问会被拒绝，保护数据安全","operationId":"detail_v1_search_detail_get","security":[{"LoginManager":[]}],"parameters":[{"name":"search_id","in":"query","required":true,"schema":{"type":"string","description":"搜索应用ID","title":"Search Id"},"description":"搜索应用ID"}],"responses":{"200":{"description":"成功获取搜索应用详情","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/search/list":{"post":{"tags":["search"],"summary":"获取搜索应用列表","description":"### POST `/list` 获取搜索应用列表\n\n**功能描述**:\n此接口用于获取搜索应用列表，支持分页查询、关键词搜索和排序功能。\n用户可以查看自己有权限访问的所有搜索应用，或指定特定租户的搜索应用。\n支持按名称关键词过滤，并提供灵活的排序和分页选项。\n\n---\n### 请求体 (Request Body)\n| 字段        | 类型          | 必填 | 描述                                   |\n|-------------|---------------|------|----------------------------------------|\n| `owner_ids` | `list[string]` | 否   | 指定租户ID列表，为空时查询用户所有可访问的搜索应用 |\n\n### 查询参数 (Query Parameters)\n| 参数        | 类型      | 必填 | 默认值      | 描述                     |\n|-------------|-----------|------|-------------|--------------------------|\n| `keywords`  | `string`  | 否   | \"\"          | 搜索关键词，用于模糊匹配应用名称 |\n| `page`      | `integer` | 否   | 1           | 页码，从1开始            |\n| `page_size` | `integer` | 否   | 10          | 每页显示的记录数         |\n| `orderby`   | `string`  | 否   | \"create_time\" | 排序字段               |\n| `desc`      | `boolean` | 否   | true        | 是否降序排列             |\n\n**请求示例**:\n```json\n{\n    \"owner_ids\": [\"tenant-uuid-1\", \"tenant-uuid-2\"]\n}\n```\n\n**查询参数示例**:\n```\nPOST /list?keywords=客服&page=1&page_size=10&orderby=create_time&desc=true\n```\n\n---\n### 响应 (Response)\n#### 成功响应 (200)\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": {\n        \"search_apps\": [\n            {\n                \"id\": \"uuid-search-id-1\",\n                \"name\": \"智能客服搜索\",\n                \"description\": \"用于客服场景的智能搜索应用\",\n                \"tenant_id\": \"tenant-uuid-1\",\n                \"created_by\": \"user-uuid\",\n                \"create_time\": \"2024-07-15T16:20:00\",\n                \"update_time\": \"2024-07-15T16:20:00\"\n            },\n            {\n                \"id\": \"uuid-search-id-2\",\n                \"name\": \"产品知识搜索\",\n                \"description\": \"产品相关知识搜索应用\",\n                \"tenant_id\": \"tenant-uuid-1\",\n                \"created_by\": \"user-uuid\",\n                \"create_time\": \"2024-07-15T15:10:00\",\n                \"update_time\": \"2024-07-15T15:10:00\"\n            }\n        ],\n        \"total\": 2\n    }\n}\n```\n\n#### 错误响应\n- **服务器内部错误**:\n```json\n{\n    \"retcode\": 500,\n    \"retmsg\": \"Internal server error\",\n    \"data\": null\n}\n```\n\n---\n### 主要流程\n1. 解析请求参数，获取查询条件和分页信息\n2. 根据owner_ids参数确定查询范围：\n   - 为空时：查询用户所有可访问的租户\n   - 有值时：查询指定租户的搜索应用\n3. 应用关键词搜索、排序和分页条件\n4. 返回符合条件的搜索应用列表和总数\n\n---\n### 注意事项\n- **权限控制**: 用户只能查看自己有权限的搜索应用\n- **分页性能**: 建议合理设置page_size以获得最佳性能\n- **关键词搜索**: 支持按应用名称进行模糊匹配搜索\n- **灵活排序**: 支持多种字段排序，默认按创建时间降序\n- **租户过滤**: 可以指定特定租户或查看所有可访问的租户","operationId":"list_search_app_v1_search_list_post","security":[{"LoginManager":[]}],"parameters":[{"name":"keywords","in":"query","required":false,"schema":{"type":"string","description":"关键词搜索","default":"","title":"Keywords"},"description":"关键词搜索"},{"name":"page","in":"query","required":false,"schema":{"type":"integer","description":"页码","default":1,"title":"Page"},"description":"页码"},{"name":"page_size","in":"query","required":false,"schema":{"type":"integer","description":"每页数量","default":10,"title":"Page Size"},"description":"每页数量"},{"name":"orderby","in":"query","required":false,"schema":{"type":"string","description":"排序字段","default":"create_time","title":"Orderby"},"description":"排序字段"},{"name":"desc","in":"query","required":false,"schema":{"type":"boolean","description":"是否降序","default":true,"title":"Desc"},"description":"是否降序"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListSearchRequest"}}}},"responses":{"200":{"description":"成功获取搜索应用列表","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/search/rm":{"post":{"tags":["search"],"summary":"删除搜索应用","description":"### POST `/rm` 删除搜索应用\n\n**功能描述**:\n此接口用于删除指定的搜索应用。执行的是软删除操作，即将搜索应用状态标记为已删除，\n而不是物理删除数据。系统会验证用户对该搜索应用的删除权限，确保只有授权用户才能执行删除操作。\n\n---\n### 请求体 (Request Body)\n| 字段        | 类型     | 必填 | 描述               |\n|-------------|----------|------|--------------------|\n| `search_id` | `string` | 是   | 要删除的搜索应用ID |\n\n**请求示例**:\n```json\n{\n    \"search_id\": \"uuid-search-id\"\n}\n```\n\n---\n### 响应 (Response)\n#### 成功响应 (200)\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"success\",\n    \"data\": true\n}\n```\n\n#### 错误响应\n- **权限不足**:\n```json\n{\n    \"retcode\": 403,\n    \"retmsg\": \"No authorization.\",\n    \"data\": false\n}\n```\n- **删除失败**:\n```json\n{\n    \"retcode\": 400,\n    \"retmsg\": \"Failed to delete search App uuid-search-id\",\n    \"data\": null\n}\n```\n\n---\n### 主要流程\n1. 验证用户身份和请求参数的有效性\n2. 检查用户对指定搜索应用的删除权限\n3. 执行软删除操作，更新搜索应用状态为已删除\n4. 确认删除操作成功，返回操作结果\n\n---\n### 注意事项\n- **软删除**: 删除操作为软删除，数据仍保留在数据库中，只是状态标记为已删除\n- **权限验证**: 只有有删除权限的用户才能执行删除操作\n- **数据安全**: 删除的数据可以通过管理员恢复，确保数据安全\n- **关联处理**: 删除应用时需要考虑相关联的数据和依赖关系\n- **审计日志**: 删除操作会记录在系统日志中，便于追踪和审计","operationId":"rm_v1_search_rm_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RemoveSearchRequest"}}},"required":true},"responses":{"200":{"description":"成功删除搜索应用","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/langfuse/api_key":{"get":{"tags":["langfuse"],"summary":"获取Langfuse API密钥","description":"获取Langfuse API密钥\n\n该接口用于获取当前用户的Langfuse API密钥信息。\n\n返回:\n- 成功时返回包含API密钥信息的JSON结果\n- 失败时返回错误信息","operationId":"get_api_key_v1_langfuse_api_key_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}},"security":[{"LoginManager":[]}]},"put":{"tags":["langfuse"],"summary":"更新Langfuse API密钥","description":"设置或更新Langfuse API密钥\n\n该接口用于设置或更新当前用户的Langfuse API密钥。\n\n参数:\n- request: LangfuseKeysRequest对象，包含API密钥信息\n    - secret_key: Langfuse密钥\n    - public_key: Langfuse公钥\n    - host: Langfuse主机地址\n\n返回:\n- 成功时返回包含API密钥信息的JSON结果\n- 失败时返回错误信息","operationId":"set_api_key_v1_langfuse_api_key_put","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LangfuseKeysRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]},"post":{"tags":["langfuse"],"summary":"设置Langfuse API密钥","description":"设置或更新Langfuse API密钥\n\n该接口用于设置或更新当前用户的Langfuse API密钥。\n\n参数:\n- request: LangfuseKeysRequest对象，包含API密钥信息\n    - secret_key: Langfuse密钥\n    - public_key: Langfuse公钥\n    - host: Langfuse主机地址\n\n返回:\n- 成功时返回包含API密钥信息的JSON结果\n- 失败时返回错误信息","operationId":"set_api_key_v1_langfuse_api_key_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LangfuseKeysRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]},"delete":{"tags":["langfuse"],"summary":"删除Langfuse API密钥","description":"删除Langfuse API密钥\n\n该接口用于删除当前用户的Langfuse API密钥。\n\n返回:\n- 成功时返回操作结果\n- 失败时返回错误信息","operationId":"delete_api_key_v1_langfuse_api_key_delete","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}},"security":[{"LoginManager":[]}]}},"/v1/workflow/run":{"post":{"tags":["workflow"],"summary":"Run","description":"运行指定工作流的接口。\n\n概要：通过解析和执行工作流请求参数来运行工作流。\n响应描述：成功执行后，返回工作流执行的最终节点输出数据。\n\n参数：\n- **workflow_json_str** (str): 包含工作流数据的 JSON 字符串。\n- **input_data_str** (str, 可选): 包含字典数据的 JSON 字符串。\n- **file** (UploadFile, 可选): 可上传的文件，作为工作流的附加输入数据。\n\n返回：\n- **dict**: 返回工作流执行结果的 JSON 对象，包含最终节点输出数据。\n\n功能：\n1. 解析工作流请求参数，确保为有效的 JSON 字符串。\n2. 可选解析输入数据参数，如果存在的话。\n3. 将上传的文件数据与其他输入参数一起传递给工作流执行引擎。\n4. 执行工作流，返回最终节点的输出结果。\n\n异常处理：\n- 如果工作流或输入数据不是有效的 JSON 字符串，将抛出 HTTP 400 错误。\n- 如果上传文件不为空，则将其添加到输入参数中。\n\n注意：\n- 工作流请求参数必须是有效的 JSON 字符串。","operationId":"run_v1_workflow_run_post","requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_run_v1_workflow_run_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/workflow/run-test":{"post":{"tags":["workflow"],"summary":"Run Test","description":"测试运行的接口，用于检查服务是否正常工作。\n\n概要：用于测试接口的运行状态。\n响应描述：成功运行返回简单的结果对象，表明接口可用。\n\n返回：\n- **dict**: 返回包含 \"result\" 键的 JSON 对象，表明测试成功。\n\n注意：\n- 此接口不涉及复杂操作，仅用于测试用途。","operationId":"run_test_v1_workflow_run_test_post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}},"security":[{"LoginManager":[]}]}},"/v1/workflow/download/{filename}":{"get":{"tags":["workflow"],"summary":"Download File","description":"下载指定文件的接口。\n\n概要：根据文件名从指定路径下载文件。\n响应描述：成功找到并下载文件时，返回文件响应对象。\n\n参数：\n- **filename** (str): 要下载的文件名（不包括扩展名）。\n\n返回：\n- **FileResponse**: 返回指定文件的下载响应，包含文件内容。\n\n异常处理：\n- 如果文件未找到，将返回 HTTP 404 错误。\n\n注意：\n- 文件名应对应存在的文件，以确保成功下载。","operationId":"download_file_v1_workflow_download__filename__get","parameters":[{"name":"filename","in":"path","required":true,"schema":{"type":"string","title":"Filename"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/askdata/get-sql-and-table-config":{"post":{"tags":["askdata"],"summary":"Get Sql And Table Config","operationId":"get_sql_and_table_config_v1_askdata_get_sql_and_table_config_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetSqlAndTableConfigReq","title":"涵盖了SQL生成、表格配置、查询执行的全过程","description":"涵盖了SQL生成、表格配置、查询执行的全过程"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseSchema"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/askdata/events/{event_id}":{"get":{"tags":["askdata"],"summary":"Subscribe To Event","description":"订阅指定事件ID的SSE端点\n\nArgs:\n    request: FastAPI请求对象\n    event_id: 事件ID\n\nReturns:\n    StreamingResponse: SSE流响应","operationId":"subscribe_to_event_v1_askdata_events__event_id__get","parameters":[{"name":"event_id","in":"path","required":true,"schema":{"type":"string","title":"Event Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/askdata/analyze-user-query-streaming/{custom_event_id}":{"post":{"tags":["askdata"],"summary":"使用自定义事件ID启动流式聊天","description":"使用自定义事件ID启动流式聊天","operationId":"analyze_user_query_streaming_v1_askdata_analyze_user_query_streaming__custom_event_id__post","security":[{"LoginManager":[]}],"parameters":[{"name":"custom_event_id","in":"path","required":true,"schema":{"type":"string","title":"Custom Event Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AnalyzeUserQueryRequest","title":"流式输出对于用户问题的分析","description":"流式输出对于用户问题的分析"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseSchema"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/askdata/get-semantic-layer-streaming/{custom_event_id}":{"post":{"tags":["askdata"],"summary":"获得语义层信息","operationId":"get_semantic_layer_streaming_v1_askdata_get_semantic_layer_streaming__custom_event_id__post","security":[{"LoginManager":[]}],"parameters":[{"name":"custom_event_id","in":"path","required":true,"schema":{"type":"string","title":"Custom Event Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SemanticLayerRequest","title":"获得语义层信息","description":"获得语义层信息"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseSchema"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/askdata/add-history":{"post":{"tags":["askdata"],"summary":"新增历史记录","description":"新增一条问数历史记录。","operationId":"add_history_v1_askdata_add_history_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AddHistoryRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseSchema"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/askdata/get-history/{conversation_id}":{"get":{"tags":["askdata"],"summary":"查询历史记录","description":"根据对话ID查询相关的历史记录。","operationId":"get_history_v1_askdata_get_history__conversation_id__get","security":[{"LoginManager":[]}],"parameters":[{"name":"conversation_id","in":"path","required":true,"schema":{"type":"string","title":"Conversation Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseSchema"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/askdata/re-query":{"post":{"tags":["askdata"],"summary":"获得语义层信息","operationId":"re_query_v1_askdata_re_query_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api__apps__askdata__ReQueryRequest","title":"获得语义层信息","description":"获得语义层信息"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseSchema"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/sensitive_word/categories/create":{"post":{"tags":["sensitive_word"],"summary":"创建敏感词分类","description":"创建敏感词分类\n\nArgs:\n    request: 创建分类请求参数\n    db: 数据库会话\n    user: 当前用户信息\n\nReturns:\n    Dict[str, Any]: 包含创建结果的响应数据\n    - 成功: {\"code\": 200, \"data\": {\"category_id\": \"uuid\"}}\n    - 失败: {\"code\": 400, \"retmsg\": \"错误信息\"}\n\nRaises:\n    Exception: 数据库操作异常或其他系统异常","operationId":"create_category_v1_sensitive_word_categories_create_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateCategoryRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Create Category V1 Sensitive Word Categories Create Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/sensitive_word/categories/list":{"get":{"tags":["sensitive_word"],"summary":"获取敏感词分类列表","description":"获取当前租户的所有敏感词分类列表\n\nArgs:\n    db: 数据库会话\n    user: 当前用户信息\n\nReturns:\n    Dict[str, Any]: 包含分类列表的响应数据\n    - 成功: {\"code\": 200, \"data\": [{\"id\": \"uuid\", \"name\": \"分类名\", ...}]}\n    - 失败: {\"code\": 500, \"retmsg\": \"错误信息\"}","operationId":"list_categories_v1_sensitive_word_categories_list_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response List Categories V1 Sensitive Word Categories List Get"}}}}},"security":[{"LoginManager":[]}]}},"/v1/sensitive_word/categories/update":{"post":{"tags":["sensitive_word"],"summary":"更新敏感词分类","description":"更新敏感词分类信息\n\nArgs:\n    request: 更新分类请求参数\n    db: 数据库会话\n    user: 当前用户信息\n\nReturns:\n    Dict[str, Any]: 更新结果响应\n    - 成功: {\"code\": 200, \"data\": True}\n    - 失败: {\"code\": 400, \"retmsg\": \"更新分类失败\"}","operationId":"update_category_v1_sensitive_word_categories_update_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateCategoryRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Update Category V1 Sensitive Word Categories Update Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/sensitive_word/categories/{category_id}":{"delete":{"tags":["sensitive_word"],"summary":"删除敏感词分类","description":"删除指定的敏感词分类\n\nArgs:\n    category_id: 分类ID\n    db: 数据库会话\n    user: 当前用户信息\n\nReturns:\n    Dict[str, Any]: 删除结果响应\n    - 成功: {\"code\": 200, \"data\": True}\n    - 失败: {\"code\": 400, \"retmsg\": \"删除分类失败\"}\n\nNote:\n    删除分类前请确保该分类下没有关联的敏感词","operationId":"delete_category_v1_sensitive_word_categories__category_id__delete","security":[{"LoginManager":[]}],"parameters":[{"name":"category_id","in":"path","required":true,"schema":{"type":"string","title":"Category Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Delete Category V1 Sensitive Word Categories  Category Id  Delete"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/sensitive_word/levels/create":{"post":{"tags":["sensitive_word"],"summary":"创建敏感词等级","description":"创建敏感词等级\n\nArgs:\n    request: 创建等级请求参数\n    db: 数据库会话\n    user: 当前用户信息\n\nReturns:\n    Dict[str, Any]: 包含创建结果的响应数据\n    - 成功: {\"code\": 200, \"data\": {\"level_id\": \"uuid\"}}\n    - 失败: {\"code\": 400, \"retmsg\": \"创建等级失败\"}\n\nNote:\n    等级数值范围1-5，数值越高表示敏感程度越高\n    action支持: block(阻止), replace(替换), warn(警告)","operationId":"create_level_v1_sensitive_word_levels_create_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateLevelRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Create Level V1 Sensitive Word Levels Create Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/sensitive_word/levels/list":{"get":{"tags":["sensitive_word"],"summary":"获取敏感词等级列表","description":"获取当前租户的所有敏感词等级列表\n\nArgs:\n    db: 数据库会话\n    user: 当前用户信息\n\nReturns:\n    Dict[str, Any]: 包含等级列表的响应数据\n    - 成功: {\"code\": 200, \"data\": [{\"id\": \"uuid\", \"name\": \"等级名\", \"level\": 1, ...}]}\n    - 失败: {\"code\": 500, \"retmsg\": \"错误信息\"}","operationId":"list_levels_v1_sensitive_word_levels_list_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response List Levels V1 Sensitive Word Levels List Get"}}}}},"security":[{"LoginManager":[]}]}},"/v1/sensitive_word/levels/update":{"post":{"tags":["sensitive_word"],"summary":"更新敏感词等级","description":"更新敏感词等级信息\n\nArgs:\n    request: 更新等级请求参数\n    db: 数据库会话\n    user: 当前用户信息\n\nReturns:\n    Dict[str, Any]: 更新结果响应\n    - 成功: {\"code\": 200, \"data\": True}\n    - 失败: {\"code\": 400, \"retmsg\": \"更新等级失败\"}","operationId":"update_level_v1_sensitive_word_levels_update_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateLevelRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Update Level V1 Sensitive Word Levels Update Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/sensitive_word/levels/{level_id}":{"delete":{"tags":["sensitive_word"],"summary":"删除敏感词等级","description":"删除指定的敏感词等级\n\nArgs:\n    level_id: 等级ID\n    db: 数据库会话\n    user: 当前用户信息\n\nReturns:\n    Dict[str, Any]: 删除结果响应\n    - 成功: {\"code\": 200, \"data\": True}\n    - 失败: {\"code\": 400, \"retmsg\": \"删除等级失败\"}\n\nNote:\n    删除等级前请确保该等级下没有关联的敏感词","operationId":"delete_level_v1_sensitive_word_levels__level_id__delete","security":[{"LoginManager":[]}],"parameters":[{"name":"level_id","in":"path","required":true,"schema":{"type":"string","title":"Level Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Delete Level V1 Sensitive Word Levels  Level Id  Delete"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/sensitive_word/words/create":{"post":{"tags":["sensitive_word"],"summary":"创建敏感词","description":"创建单个敏感词\n\nArgs:\n    request: 创建敏感词请求参数\n    db: 数据库会话\n    user: 当前用户信息\n\nReturns:\n    Dict[str, Any]: 包含创建结果的响应数据\n    - 成功: {\"code\": 200, \"data\": {\"word_id\": \"uuid\"}}\n    - 失败: {\"code\": 400, \"retmsg\": \"创建敏感词失败\"}\n\nNote:\n    创建前会检查敏感词是否已存在，避免重复创建\n    match_type支持: exact(精确匹配), partial(部分匹配), regex(正则匹配)","operationId":"create_sensitive_word_v1_sensitive_word_words_create_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateSensitiveWordRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Create Sensitive Word V1 Sensitive Word Words Create Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/sensitive_word/words/batch-create":{"post":{"tags":["sensitive_word"],"summary":"批量创建敏感词","description":"批量创建敏感词\n\nArgs:\n    request: 批量创建敏感词请求参数\n    db: 数据库会话\n    user: 当前用户信息\n\nReturns:\n    Dict[str, Any]: 包含批量创建结果的响应数据\n    - 成功: {\"code\": 200, \"data\": {\"success_count\": 10, \"failed_count\": 2, \"failed_words\": [\"词1\", \"词2\"]}}\n    - 失败: {\"code\": 500, \"retmsg\": \"错误信息\"}\n\nNote:\n    批量创建会跳过已存在的敏感词，返回成功和失败的统计信息\n    所有敏感词使用相同的分类、等级和匹配类型","operationId":"batch_create_sensitive_words_v1_sensitive_word_words_batch_create_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BatchCreateSensitiveWordRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Batch Create Sensitive Words V1 Sensitive Word Words Batch Create Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/sensitive_word/words/list":{"get":{"tags":["sensitive_word"],"summary":"获取敏感词列表","description":"分页获取敏感词列表，支持多种过滤条件\n\nArgs:\n    page: 页码，从1开始，默认1\n    page_size: 每页数量，默认50，最大100\n    category_id: 分类ID过滤，可选\n    level_id: 等级ID过滤，可选\n    keyword: 关键词搜索，支持模糊匹配敏感词内容，可选\n    db: 数据库会话\n    user: 当前用户信息\n\nReturns:\n    Dict[str, Any]: 包含分页敏感词列表的响应数据\n    - 成功: {\"code\": 200, \"data\": {\"items\": [...], \"total\": 100, \"page\": 1, \"page_size\": 50}}\n    - 失败: {\"code\": 500, \"retmsg\": \"错误信息\"}\n\nExample:\n    GET /words/list?page=1&page_size=20&category_id=uuid&keyword=测试","operationId":"list_sensitive_words_v1_sensitive_word_words_list_get","security":[{"LoginManager":[]}],"parameters":[{"name":"page","in":"query","required":false,"schema":{"type":"integer","default":1,"title":"Page"}},{"name":"page_size","in":"query","required":false,"schema":{"type":"integer","default":50,"title":"Page Size"}},{"name":"category_id","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Category Id"}},{"name":"level_id","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Level Id"}},{"name":"keyword","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Keyword"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response List Sensitive Words V1 Sensitive Word Words List Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/sensitive_word/words/update":{"post":{"tags":["sensitive_word"],"summary":"更新敏感词","description":"更新敏感词信息\n\nArgs:\n    request: 更新敏感词请求参数\n    db: 数据库会话\n    user: 当前用户信息\n\nReturns:\n    Dict[str, Any]: 更新结果响应\n    - 成功: {\"code\": 200, \"data\": True}\n    - 失败: {\"code\": 400, \"retmsg\": \"更新敏感词失败\"}\n\nNote:\n    只更新提供的非空字段，其他字段保持不变","operationId":"update_sensitive_word_v1_sensitive_word_words_update_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateSensitiveWordRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Update Sensitive Word V1 Sensitive Word Words Update Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/sensitive_word/words/{word_id}":{"delete":{"tags":["sensitive_word"],"summary":"删除敏感词","description":"删除指定的敏感词\n\nArgs:\n    word_id: 敏感词ID\n    db: 数据库会话\n    user: 当前用户信息\n\nReturns:\n    Dict[str, Any]: 删除结果响应\n    - 成功: {\"code\": 200, \"data\": True}\n    - 失败: {\"code\": 400, \"retmsg\": \"删除敏感词失败\"}","operationId":"delete_sensitive_word_v1_sensitive_word_words__word_id__delete","security":[{"LoginManager":[]}],"parameters":[{"name":"word_id","in":"path","required":true,"schema":{"type":"string","title":"Word Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Delete Sensitive Word V1 Sensitive Word Words  Word Id  Delete"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/sensitive_word/words/batch-delete":{"post":{"tags":["sensitive_word"],"summary":"批量删除敏感词","description":"批量删除敏感词\n\nArgs:\n    request: 批量删除请求参数，包含ID列表\n    db: 数据库会话\n    user: 当前用户信息\n\nReturns:\n    Dict[str, Any]: 批量删除结果响应\n    - 成功: {\"code\": 200, \"data\": {\"success_count\": 8, \"failed_count\": 2}}\n    - 失败: {\"code\": 500, \"retmsg\": \"错误信息\"}\n\nNote:\n    会尝试删除所有提供的ID，返回成功和失败的统计信息","operationId":"batch_delete_sensitive_words_v1_sensitive_word_words_batch_delete_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BatchDeleteRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Batch Delete Sensitive Words V1 Sensitive Word Words Batch Delete Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/sensitive_word/whitelist/create":{"post":{"tags":["sensitive_word"],"summary":"创建白名单","description":"创建敏感词白名单\n\nArgs:\n    request: 创建白名单请求参数\n    db: 数据库会话\n    user: 当前用户信息\n\nReturns:\n    Dict[str, Any]: 包含创建结果的响应数据\n    - 成功: {\"code\": 200, \"data\": {\"whitelist_id\": \"uuid\"}}\n    - 失败: {\"code\": 400, \"retmsg\": \"创建白名单失败\"}\n\nNote:\n    白名单中的词汇在敏感词检测时会被忽略，不会被标记为敏感词\n    适用于误判的正常词汇或特殊业务需求的词汇","operationId":"create_whitelist_v1_sensitive_word_whitelist_create_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateWhitelistRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Create Whitelist V1 Sensitive Word Whitelist Create Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/sensitive_word/whitelist/list":{"get":{"tags":["sensitive_word"],"summary":"获取白名单列表","description":"获取当前租户的所有白名单词汇列表\n\nArgs:\n    db: 数据库会话\n    user: 当前用户信息\n\nReturns:\n    Dict[str, Any]: 包含白名单列表的响应数据\n    - 成功: {\"code\": 200, \"data\": [{\"id\": \"uuid\", \"word\": \"词汇\", \"reason\": \"原因\", ...}]}\n    - 失败: {\"code\": 500, \"retmsg\": \"错误信息\"}","operationId":"list_whitelist_v1_sensitive_word_whitelist_list_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response List Whitelist V1 Sensitive Word Whitelist List Get"}}}}},"security":[{"LoginManager":[]}]}},"/v1/sensitive_word/whitelist/{whitelist_id}":{"delete":{"tags":["sensitive_word"],"summary":"删除白名单","description":"删除指定的白名单词汇\n\nArgs:\n    whitelist_id: 白名单ID\n    db: 数据库会话\n    user: 当前用户信息\n\nReturns:\n    Dict[str, Any]: 删除结果响应\n    - 成功: {\"code\": 200, \"data\": True}\n    - 失败: {\"code\": 400, \"retmsg\": \"删除白名单失败\"}\n\nNote:\n    删除后该词汇将重新参与敏感词检测","operationId":"delete_whitelist_v1_sensitive_word_whitelist__whitelist_id__delete","security":[{"LoginManager":[]}],"parameters":[{"name":"whitelist_id","in":"path","required":true,"schema":{"type":"string","title":"Whitelist Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Delete Whitelist V1 Sensitive Word Whitelist  Whitelist Id  Delete"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/sensitive_word/filter/check":{"post":{"tags":["sensitive_word"],"summary":"检测内容敏感词","description":"检测文本内容中的敏感词\n\nArgs:\n    request: 内容过滤请求参数\n    db: 数据库会话\n    user: 当前用户信息\n\nReturns:\n    Dict[str, Any]: 包含检测结果的响应数据\n    - 成功: {\n        \"code\": 200,\n        \"data\": {\n            \"is_sensitive\": true,\n            \"filtered_content\": \"过滤后的内容\",\n            \"sensitive_words\": [{\"word\": \"敏感词\", \"level\": 5, \"action\": \"block\", ...}],\n            \"statistics\": {\"total_count\": 3, \"block_count\": 1, \"replace_count\": 2}\n        }\n    }\n    - 失败: {\"code\": 500, \"retmsg\": \"错误信息\"}\n\nNote:\n    strict_mode=true时会使用更严格的检测规则\n    检测结果会记录到过滤日志中用于统计分析","operationId":"check_content_v1_sensitive_word_filter_check_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentFilterRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Check Content V1 Sensitive Word Filter Check Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/sensitive_word/stats/overview":{"get":{"tags":["sensitive_word"],"summary":"获取敏感词统计概览","description":"获取当前租户的敏感词统计概览信息\n\nArgs:\n    db: 数据库会话\n    user: 当前用户信息\n\nReturns:\n    Dict[str, Any]: 包含统计概览的响应数据\n    - 成功: {\n        \"code\": 200,\n        \"data\": {\n            \"total_words\": 1000,\n            \"total_categories\": 10,\n            \"total_levels\": 5,\n            \"filter_count_today\": 50,\n            \"filter_count_week\": 300,\n            \"top_categories\": [...],\n            \"recent_activities\": [...]\n        }\n    }\n    - 失败: {\"code\": 500, \"retmsg\": \"错误信息\"}","operationId":"get_stats_overview_v1_sensitive_word_stats_overview_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Stats Overview V1 Sensitive Word Stats Overview Get"}}}}},"security":[{"LoginManager":[]}]}},"/v1/sensitive_word/logs/list":{"get":{"tags":["sensitive_word"],"summary":"获取过滤日志","description":"分页获取敏感词过滤日志，支持时间范围过滤\n\nArgs:\n    page: 页码，从1开始，默认1\n    page_size: 每页数量，默认50\n    start_date: 开始日期，格式YYYY-MM-DD，可选\n    end_date: 结束日期，格式YYYY-MM-DD，可选\n    db: 数据库会话\n    user: 当前用户信息\n\nReturns:\n    Dict[str, Any]: 包含分页日志列表的响应数据\n    - 成功: {\n        \"code\": 200,\n        \"data\": {\n            \"items\": [{\"id\": \"uuid\", \"content\": \"原始内容\", \"filtered_content\": \"过滤后内容\", ...}],\n            \"total\": 100,\n            \"page\": 1,\n            \"page_size\": 50\n        }\n    }\n    - 失败: {\"code\": 500, \"retmsg\": \"错误信息\"}\n\nExample:\n    GET /logs/list?page=1&page_size=20&start_date=2025-01-01&end_date=2025-01-07","operationId":"list_filter_logs_v1_sensitive_word_logs_list_get","security":[{"LoginManager":[]}],"parameters":[{"name":"page","in":"query","required":false,"schema":{"type":"integer","default":1,"title":"Page"}},{"name":"page_size","in":"query","required":false,"schema":{"type":"integer","default":50,"title":"Page Size"}},{"name":"start_date","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Start Date"}},{"name":"end_date","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"End Date"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response List Filter Logs V1 Sensitive Word Logs List Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/sensitive_word/cache/refresh":{"post":{"tags":["sensitive_word"],"summary":"刷新敏感词缓存","description":"刷新当前租户的敏感词缓存\n\nArgs:\n    db: 数据库会话\n    user: 当前用户信息\n\nReturns:\n    Dict[str, Any]: 缓存刷新结果响应\n    - 成功: {\"code\": 200, \"data\": True, \"retmsg\": \"缓存刷新成功\"}\n    - 失败: {\"code\": 400, \"retmsg\": \"缓存刷新失败\"}\n\nNote:\n    当敏感词配置发生变更时建议手动刷新缓存以确保检测准确性\n    系统也会定期自动刷新缓存","operationId":"refresh_cache_v1_sensitive_word_cache_refresh_post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Refresh Cache V1 Sensitive Word Cache Refresh Post"}}}}},"security":[{"LoginManager":[]}]}},"/v1/sensitive_word/cache/status":{"get":{"tags":["sensitive_word"],"summary":"获取缓存状态","description":"获取当前租户的敏感词缓存状态信息\n\nArgs:\n    user: 当前用户信息\n\nReturns:\n    Dict[str, Any]: 包含缓存状态的响应数据\n    - 成功: {\n        \"code\": 200,\n        \"data\": {\n            \"cache_size\": 1000,\n            \"last_refresh_time\": \"2025-01-07 10:30:00\",\n            \"hit_rate\": 0.95,\n            \"memory_usage\": \"2.5MB\"\n        }\n    }\n    - 失败: {\"code\": 500, \"retmsg\": \"错误信息\"}\n\nNote:\n    缓存状态包括缓存大小、最后刷新时间、命中率等信息","operationId":"get_cache_status_v1_sensitive_word_cache_status_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Cache Status V1 Sensitive Word Cache Status Get"}}}}},"security":[{"LoginManager":[]}]}},"/v1/guard_detection/detect":{"post":{"tags":["guard_detection"],"summary":"内容安全检测","description":"对单个内容进行AI安全护栏检测（敏感词、违禁内容、攻击检测等）\n\nArgs:\n    request (DetectionRequest): 检测请求参数\n        - content (str): 待检测的文本内容，必填，不能为空\n        - service_code (str): 服务代码，必填\n            示例: \"query_security_check\", \"content_review\", \"chat_filter\"\n        - request_id (str, optional): 请求ID，用于链路追踪\n        - chat_id (str, optional): 会话ID，用于关联对话\n        - source_type (str, optional): 来源类型，默认\"api\"\n            可选值: \"api\", \"web\", \"app\", \"batch\"\n        - source_id (str, optional): 来源标识，用于区分不同来源\n    db (Session): 数据库会话（自动注入）\n    user: 当前用户信息（自动注入）\n    \nRequest Body 示例:\n    {\n        \"content\": \"这是需要检测的文本内容\",\n        \"service_code\": \"query_security_check\",\n        \"request_id\": \"req_123456789\",\n        \"chat_id\": \"chat_abc123\",\n        \"source_type\": \"api\",\n        \"source_id\": \"frontend_v1\"\n    }\n    \nReturns:\n    dict[str, Any]: 安全检测结果\n    成功响应 (200):\n    {\n        \"code\": 200,\n        \"data\": {\n            \"is_blocked\": false,                    // 是否被拦截\n            \"overall_risk_score\": 0.15,            // 综合风险分数 (0-1)\n            \n            // 内容合规检测结果\n            \"content_risk_level\": \"low\",            // 内容风险等级: none/low/medium/high\n            \"content_results\": [                    // 具体检测结果\n                {\n                    \"rule_name\": \"政治敏感词\",\n                    \"risk_level\": \"low\",\n                    \"confidence\": 0.8,\n                    \"matched_words\": [\"某词\"]\n                }\n            ],\n            \n            // 敏感信息检测结果  \n            \"sensitive_level\": \"S0\",                // 敏感等级: S0-S4\n            \"sensitive_results\": [                  // 敏感信息检测结果\n                {\n                    \"type\": \"phone\",\n                    \"value\": \"138****1234\",\n                    \"position\": [10, 21]\n                }\n            ],\n            \n            // 攻击检测结果\n            \"attack_level\": \"none\",                 // 攻击等级: none/low/medium/high\n            \"attack_results\": [],                   // 攻击检测结果\n            \n            // 自定义规则命中\n            \"customized_hits\": [],                  // 自定义词库命中记录\n            \"risk_words\": [\"敏感词1\", \"敏感词2\"],    // 检出的风险词\n            \"sensitive_data\": [],                   // 检出的敏感数据\n            \n            // 处理信息\n            \"action_taken\": \"log\",                  // 采取的行动: allow/log/block\n            \"action_detail\": {                      // 行动详情\n                \"reason\": \"风险分数过高\",\n                \"auto_block\": true\n            },\n            \"process_time_ms\": 150,                 // 处理耗时(毫秒)\n            \"cloud_service_used\": false,            // 是否使用云服务\n            \n            // 日志信息\n            \"log_id\": \"log_123456789\"              // 日志记录ID\n        }\n    }\n    失败响应 (400):\n    {\n        \"code\": 400,\n        \"retmsg\": \"检测内容不能为空\" | \"服务代码不能为空\" | \"其他验证错误\"\n    }\n    失败响应 (500):\n    {\n        \"code\": 500,\n        \"retmsg\": \"服务器内部错误: 具体错误信息\"\n    }\n    \nHTTP Status Codes:\n    200: 检测成功\n    400: 请求参数错误\n    401: 未授权\n    500: 服务器内部错误\n    \n注意事项:\n    - 检测结果会自动记录到日志表中\n    - risk_score范围为0-1，值越高风险越大\n    - is_blocked基于综合风险评估和配置的阈值\n    - 检测耗时包括所有规则引擎的处理时间\n    - 支持多种检测维度：敏感词、违禁内容、攻击检测、敏感信息识别","operationId":"detect_content_v1_guard_detection_detect_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DetectionRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Detect Content V1 Guard Detection Detect Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/guard_detection/detect/batch":{"post":{"tags":["guard_detection"],"summary":"批量内容安全检测","description":"对多个内容进行批量安全检测\n\nArgs:\n    request: 批量检测请求参数\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 批量检测结果\n    - 成功: {\"code\": 200, \"data\": {\"results\": [...], \"summary\": {...}}}\n    - 失败: {\"code\": 400, \"retmsg\": \"错误信息\"}","operationId":"batch_detect_content_v1_guard_detection_detect_batch_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BatchDetectionRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Batch Detect Content V1 Guard Detection Detect Batch Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/guard_detection/services":{"get":{"tags":["guard_detection"],"summary":"获取可用检测服务","description":"获取当前租户可用的检测服务列表\n\nArgs:\n    db: 数据库会话\n    user: 当前用户信息\n    \nReturns:\n    dict[str, Any]: 服务列表\n    - 成功: {\"code\": 200, \"data\": [{\"code\": \"xxx\", \"name\": \"xxx\", ...}]}\n    - 失败: {\"code\": 500, \"retmsg\": \"错误信息\"}","operationId":"get_available_services_v1_guard_detection_services_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Available Services V1 Guard Detection Services Get"}}}}},"security":[{"LoginManager":[]}]}},"/v1/guard_detection/logs":{"get":{"tags":["guard_detection"],"summary":"获取检测日志","description":"获取检测日志列表（分页查询）\n\nArgs:\n    page (int): 页码，从1开始，默认为1\n    page_size (int): 每页记录数量，默认50，最大100\n    start_date (str, optional): 开始日期，ISO格式字符串\n        - 格式: \"YYYY-MM-DD\" 或 \"YYYY-MM-DDTHH:MM:SS\"\n        - 示例: \"2025-07-01\" 或 \"2025-07-01T00:00:00\"\n        - 如果不提供，则不限制开始时间\n    end_date (str, optional): 结束日期，ISO格式字符串\n        - 格式: \"YYYY-MM-DD\" 或 \"YYYY-MM-DDTHH:MM:SS\"  \n        - 示例: \"2025-07-14\" 或 \"2025-07-14T23:59:59\"\n        - 如果不提供，则不限制结束时间\n    service_code (str, optional): 服务代码过滤\n        - 示例: \"query_security_check\", \"content_review\"\n        - 如果不提供，则返回所有服务的日志\n    is_blocked (bool, optional): 是否被拦截过滤\n        - True: 只返回被拦截的记录\n        - False: 只返回未被拦截的记录\n        - None: 返回所有记录（默认）\n    db (Session): 数据库会话（自动注入）\n    user: 当前用户信息（自动注入）\n    \nReturns:\n    dict[str, Any]: 检测日志列表和分页信息\n    成功响应 (200):\n    {\n        \"code\": 200,\n        \"data\": {\n            \"logs\": [\n                {\n                    \"id\": \"log_id\",\n                    \"service_code\": \"query_security_check\",\n                    \"content_preview\": \"检测内容预览...\",\n                    \"is_blocked\": true,\n                    \"risk_score\": 0.85,\n                    \"content_risk_level\": \"high\",\n                    \"create_time\": 1705123456789,  // 毫秒时间戳\n                    \"create_date\": \"2025-07-14T10:30:56\",\n                    ...\n                }\n            ],\n            \"total\": 150,          // 总记录数\n            \"page\": 1,             // 当前页码\n            \"page_size\": 50,       // 每页数量\n            \"total_pages\": 3       // 总页数\n        }\n    }\n    失败响应 (500):\n    {\n        \"code\": 500,\n        \"retmsg\": \"获取日志列表失败: 具体错误信息\"\n    }\n    \nHTTP Status Codes:\n    200: 请求成功\n    400: 参数错误\n    401: 未授权\n    500: 服务器内部错误","operationId":"get_detection_logs_v1_guard_detection_logs_get","security":[{"LoginManager":[]}],"parameters":[{"name":"page","in":"query","required":false,"schema":{"type":"integer","default":1,"title":"Page"}},{"name":"page_size","in":"query","required":false,"schema":{"type":"integer","default":50,"title":"Page Size"}},{"name":"start_date","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Start Date"}},{"name":"end_date","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"End Date"}},{"name":"service_code","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Service Code"}},{"name":"is_blocked","in":"query","required":false,"schema":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Is Blocked"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Detection Logs V1 Guard Detection Logs Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/guard_detection/stats":{"get":{"tags":["guard_detection"],"summary":"获取检测统计","description":"获取指定时间范围内的检测统计信息\n\nArgs:\n    days (int): 统计天数，从今天开始向前计算\n        - 默认: 30天\n        - 范围: 1-365天\n        - 示例: days=7 表示最近7天的统计\n        - 示例: days=1 表示今天的统计\n    db (Session): 数据库会话（自动注入）\n    user: 当前用户信息（自动注入）\n    \nReturns:\n    dict[str, Any]: 检测统计信息\n    成功响应 (200):\n    {\n        \"code\": 200,\n        \"data\": {\n            \"total_requests\": 1500,        // 总请求数\n            \"blocked_requests\": 120,       // 被拦截请求数\n            \"pass_requests\": 1380,         // 通过请求数\n            \"block_rate\": 8.0,             // 拦截率(%)\n            \"service_stats\": {             // 各服务统计\n                \"query_security_check\": {\n                    \"total\": 800,\n                    \"blocked\": 60\n                },\n                \"content_review\": {\n                    \"total\": 700,\n                    \"blocked\": 60\n                }\n            },\n            \"risk_level_stats\": {          // 风险等级统计\n                \"high\": 45,\n                \"medium\": 75,\n                \"low\": 80,\n                \"none\": 1300\n            },\n            \"period_days\": 30              // 统计期间天数\n        }\n    }\n    失败响应 (500):\n    {\n        \"code\": 500,\n        \"retmsg\": \"获取检测统计失败: 具体错误信息\"\n    }\n    \nHTTP Status Codes:\n    200: 请求成功\n    400: 参数错误（如days超出范围）\n    401: 未授权\n    500: 服务器内部错误\n    \n注意事项:\n    - 统计时间基于记录的create_time字段（毫秒时间戳）\n    - 统计数据实时计算，可能有轻微延迟\n    - 大时间范围查询可能响应较慢","operationId":"get_detection_stats_v1_guard_detection_stats_get","security":[{"LoginManager":[]}],"parameters":[{"name":"days","in":"query","required":false,"schema":{"type":"integer","default":30,"title":"Days"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Detection Stats V1 Guard Detection Stats Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/guard_detection/stats/trend":{"get":{"tags":["guard_detection"],"summary":"获取检测趋势","description":"获取指定时间范围内的检测趋势数据（按天分组）\n\nArgs:\n    days (int): 统计天数，从今天开始向前计算\n        - 默认: 7天\n        - 范围: 1-90天\n        - 示例: days=7 表示最近7天的每日趋势\n        - 示例: days=30 表示最近30天的每日趋势\n    db (Session): 数据库会话（自动注入）\n    user: 当前用户信息（自动注入）\n    \nReturns:\n    dict[str, Any]: 按日期分组的趋势数据\n    成功响应 (200):\n    {\n        \"code\": 200,\n        \"data\": [\n            {\n                \"date\": \"2025-07-14\",          // 日期 (YYYY-MM-DD格式)\n                \"total_requests\": 150,         // 当日总请求数\n                \"blocked_requests\": 12,        // 当日被拦截数\n                \"pass_requests\": 138           // 当日通过数\n            },\n            {\n                \"date\": \"2025-07-13\",\n                \"total_requests\": 180,\n                \"blocked_requests\": 15,\n                \"pass_requests\": 165\n            },\n            // ... 按日期倒序排列\n        ]\n    }\n    失败响应 (500):\n    {\n        \"code\": 500,\n        \"retmsg\": \"获取趋势数据失败: 具体错误信息\"\n    }\n    \nHTTP Status Codes:\n    200: 请求成功\n    400: 参数错误（如days超出范围）\n    401: 未授权\n    500: 服务器内部错误\n    \n注意事项:\n    - 返回数据按日期正序排列（最早日期在前）\n    - 如果某天没有数据，该日期不会出现在结果中\n    - 时间基于记录的create_time字段（毫秒时间戳）转换为日期\n    - 适用于生成时间序列图表和趋势分析","operationId":"get_detection_trend_v1_guard_detection_stats_trend_get","security":[{"LoginManager":[]}],"parameters":[{"name":"days","in":"query","required":false,"schema":{"type":"integer","default":7,"title":"Days"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Detection Trend V1 Guard Detection Stats Trend Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/guard_detection/stats/risk-words":{"get":{"tags":["guard_detection"],"summary":"获取高频风险词","description":"获取指定时间范围内的高频风险词统计（按出现次数降序排列）\n\nArgs:\n    days (int): 统计天数，从今天开始向前计算\n        - 默认: 30天\n        - 范围: 1-365天\n        - 示例: days=7 表示最近7天出现的风险词\n        - 示例: days=1 表示今天出现的风险词\n    limit (int): 返回的风险词数量限制\n        - 默认: 10个\n        - 范围: 1-100个\n        - 按出现频次从高到低排序\n    db (Session): 数据库会话（自动注入）\n    user: 当前用户信息（自动注入）\n    \nReturns:\n    dict[str, Any]: 高频风险词统计列表\n    成功响应 (200):\n    {\n        \"code\": 200,\n        \"data\": [\n            {\n                \"word\": \"敏感词1\",           // 风险词内容\n                \"count\": 25                // 出现次数\n            },\n            {\n                \"word\": \"敏感词2\",\n                \"count\": 18\n            },\n            {\n                \"word\": \"敏感词3\", \n                \"count\": 12\n            },\n            // ... 按count降序排列，最多limit个\n        ]\n    }\n    失败响应 (500):\n    {\n        \"code\": 500,\n        \"retmsg\": \"获取高频风险词失败: 具体错误信息\"\n    }\n    \nHTTP Status Codes:\n    200: 请求成功\n    400: 参数错误（如days或limit超出范围）\n    401: 未授权\n    500: 服务器内部错误\n    \n注意事项:\n    - 只统计包含risk_words字段的检测记录\n    - 风险词来源于各类检测结果（敏感词、违禁词等）\n    - 相同词汇在不同记录中出现会累加计数\n    - 如果记录的risk_words是对象数组，会提取其中的'word'字段\n    - 时间基于记录的create_time字段（毫秒时间戳）\n    - 适用于了解热点风险词汇和优化检测规则","operationId":"get_top_risk_words_v1_guard_detection_stats_risk_words_get","security":[{"LoginManager":[]}],"parameters":[{"name":"days","in":"query","required":false,"schema":{"type":"integer","default":30,"title":"Days"}},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","default":10,"title":"Limit"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Top Risk Words V1 Guard Detection Stats Risk Words Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/nl2sql/rewrite-query":{"post":{"tags":["nl2sql"],"summary":"重写自然语言查询为多个变体","description":"将自然语言查询重写为多个语义相同但表达不同的变体","operationId":"rewrite_natural_language_query_v1_nl2sql_rewrite_query_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/QueryRewriteRequest","title":"查询重写请求","description":"需要重写的自然语言查询信息"},"example":{"query_text":"显示上个季度的销售数据","llm_name":"gpt-4","max_variations":3,"preserve_keywords":true}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseSchema"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/nl2sql/nl-to-sql":{"post":{"tags":["nl2sql"],"summary":"将自然语言查询转换为SQL","description":"将自然语言查询转换为对应的SQL查询语句","operationId":"convert_nl_to_sql_v1_nl2sql_nl_to_sql_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NL2SQLRequest","title":"自然语言转SQL请求","description":"需要转换为SQL的自然语言查询信息"},"example":{"query_text":"查询销售额最高的前10个产品","llm_name":"gpt-4","dataset_id_list":["dataset1","dataset2"]}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseSchema"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/nl2sql/sql-templating":{"post":{"tags":["nl2sql"],"summary":"将SQL查询进行模板化处理","description":"将SQL查询进行模板化处理，识别可参数化的内容","operationId":"sql_templating_v1_nl2sql_sql_templating_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SQLTemplatingRequest","title":"SQL模板化请求","description":"需要进行模板化的SQL查询信息"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/nl2sql/fill-sql-template":{"post":{"tags":["nl2sql"],"summary":"填充SQL模板参数","description":"根据用户选择的参数值填充SQL模板","operationId":"fill_sql_template_v1_nl2sql_fill_sql_template_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/FillSQLTemplateRequest","title":"SQL模板填充请求","description":"需要填充参数的SQL模板信息"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseSchema"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/nl2sql/generate-echarts":{"post":{"tags":["nl2sql"],"summary":"生成ECharts配置代码","description":"根据用户问题、SQL查询和查询结果生成ECharts配置代码","operationId":"generate_echarts_v1_nl2sql_generate_echarts_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenerateEChartsRequest","title":"ECharts生成请求","description":"生成ECharts配置的请求信息"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseSchema"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/nl2sql/whole-process":{"post":{"tags":["nl2sql"],"summary":"执行从自然语言到查询结果的全流程处理","description":"执行从自然语言到查询结果的全流程处理，包括自然语言转SQL、执行查询等步骤","operationId":"execute_whole_process_v1_nl2sql_whole_process_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WholeProcessRequest","title":"全流程处理请求","description":"需要执行全流程处理的自然语言问题"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseSchema"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/nl2sql/events/{event_id}":{"get":{"tags":["nl2sql"],"summary":"Subscribe To Event","description":"订阅指定事件ID的SSE端点\n\nArgs:\n    request: FastAPI请求对象\n    event_id: 事件ID\n\nReturns:\n    StreamingResponse: SSE流响应","operationId":"subscribe_to_event_v1_nl2sql_events__event_id__get","parameters":[{"name":"event_id","in":"path","required":true,"schema":{"type":"string","title":"Event Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/nl2sql/re-query":{"post":{"tags":["nl2sql"],"summary":"使用填充后的SQL模板重新查询","description":"根据用户选择的参数值填充SQL模板并执行查询","operationId":"re_query_v1_nl2sql_re_query_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api__apps__nl2sql__ReQueryRequest","title":"SQL重新查询请求","description":"使用填充后的SQL模板重新查询的请求信息"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseSchema"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"LoginManager":[]}]}},"/v1/dataset/":{"post":{"tags":["dataset"],"summary":"创建数据集","operationId":"create_dataset_v1_dataset__post","security":[{"LoginManager":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateDatasetRequest"}}}},"responses":{"200":{"description":"成功创建数据集","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["dataset"],"summary":"列出数据集","description":"列出当前用户可以访问的数据集。\n\n参数:\n- offset (int): 偏移量，默认值为0。\n- count (int): 返回数据集的数量，默认值为-1表示返回所有。\n- orderby (str): 排序字段，默认值为\"create_time\"。\n- desc (bool): 是否降序排列，默认值为True。\n\n返回:\n- JSON: 数据集列表的JSON响应。","operationId":"list_datasets_v1_dataset__get","security":[{"LoginManager":[]}],"parameters":[{"name":"offset","in":"query","required":false,"schema":{"type":"integer","default":0,"title":"Offset"}},{"name":"count","in":"query","required":false,"schema":{"type":"integer","default":-1,"title":"Count"}},{"name":"orderby","in":"query","required":false,"schema":{"type":"string","default":"create_time","title":"Orderby"}},{"name":"desc","in":"query","required":false,"schema":{"type":"boolean","default":true,"title":"Desc"}}],"responses":{"200":{"description":"成功列出数据集","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/dataset/{dataset_id}":{"delete":{"tags":["dataset"],"summary":"删除数据集","description":"删除指定的数据集。\n\n参数:\n- dataset_id (str): 数据集ID。\n\n返回:\n- JSON: 删除操作的结果。","operationId":"remove_dataset_v1_dataset__dataset_id__delete","security":[{"LoginManager":[]}],"parameters":[{"name":"dataset_id","in":"path","required":true,"schema":{"type":"string","title":"Dataset Id"}}],"responses":{"200":{"description":"成功删除数据集","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["dataset"],"summary":"获取数据集详情","description":"获取指定数据集的详细信息。\n\n参数:\n- dataset_id (str): 数据集ID。\n\n返回:\n- JSON: 数据集详细信息的JSON响应。","operationId":"get_dataset_v1_dataset__dataset_id__get","security":[{"LoginManager":[]}],"parameters":[{"name":"dataset_id","in":"path","required":true,"schema":{"type":"string","title":"Dataset Id"}}],"responses":{"200":{"description":"成功获取数据集详情","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"put":{"tags":["dataset"],"summary":"更新数据集","description":"更新指定数据集的信息。\n\n参数:\n- dataset_id (str): 数据集ID。\n- request_body (UpdateDatasetRequest): 请求体，包含更新数据集的信息。\n  - name (Optional[str]): 数据集名称。\n  - embedding_model_id (Optional[str]): 嵌入模型ID。\n  - chunk_method (Optional[str]): 分块方法。\n  - photo (Optional[str]): 图片。\n  - layout_recognize (Optional[bool]): 布局识别。\n  - language (Optional[str]): 语言。\n  - description (Optional[str]): 描述。\n  - permission (Optional[str]): 权限。\n  - token_num (Optional[int]): 令牌数量。\n  - template_type (Optional[str]): 模板类型。\n  - chunk_num (Optional[int]): 分块数量。\n\n返回:\n- JSON: 更新后的数据集详细信息的JSON响应。","operationId":"update_dataset_v1_dataset__dataset_id__put","security":[{"LoginManager":[]}],"parameters":[{"name":"dataset_id","in":"path","required":true,"schema":{"type":"string","title":"Dataset Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateDatasetRequest"}}}},"responses":{"200":{"description":"成功更新数据集","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/dataset/{dataset_id}/documents/":{"post":{"tags":["dataset"],"summary":"上传文件","description":"上传文件到指定的数据集。\n\n参数:\n- dataset_id (str): 数据集ID。\n- files (UploadFile | None): 上传的文件。\n\n返回:\n- JSON: 上传文件的详细信息的JSON响应。","operationId":"upload_documents_v1_dataset__dataset_id__documents__post","security":[{"LoginManager":[]}],"parameters":[{"name":"dataset_id","in":"path","required":true,"schema":{"type":"string","title":"Dataset Id"}}],"requestBody":{"required":true,"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_upload_documents_v1_dataset__dataset_id__documents__post"}}}},"responses":{"200":{"description":"成功上传文件","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["dataset"],"summary":"列出文件","description":"列出指定数据集中的文件。\n\n参数:\n- dataset_id (str): 数据集ID。\n- keywords (str): 关键词，默认值为空。\n- offset (int): 偏移量，默认值为0。\n- count (int): 返回文件的数量，默认值为-1表示返回所有。\n- order_by (str): 排序字段，默认值为\"create_time\"。\n- descend (bool): 是否降序排列，默认值为True。\n\n返回:\n- JSON: 文件列表的JSON响应。","operationId":"list_documents_v1_dataset__dataset_id__documents__get","security":[{"LoginManager":[]}],"parameters":[{"name":"dataset_id","in":"path","required":true,"schema":{"type":"string","title":"Dataset Id"}},{"name":"keywords","in":"query","required":false,"schema":{"type":"string","default":"","title":"Keywords"}},{"name":"offset","in":"query","required":false,"schema":{"type":"integer","default":0,"title":"Offset"}},{"name":"count","in":"query","required":false,"schema":{"type":"integer","default":-1,"title":"Count"}},{"name":"order_by","in":"query","required":false,"schema":{"type":"string","default":"create_time","title":"Order By"}},{"name":"descend","in":"query","required":false,"schema":{"type":"boolean","default":true,"title":"Descend"}}],"responses":{"200":{"description":"成功列出文件","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/dataset/{dataset_id}/documents/{document_id}":{"delete":{"tags":["dataset"],"summary":"删除文件","description":"删除指定的数据集中的文件。\n\n参数:\n- dataset_id (str): 数据集ID。\n- document_id (str): 文件ID。\n\n返回:\n- JSON: 删除操作的结果。","operationId":"delete_document_v1_dataset__dataset_id__documents__document_id__delete","security":[{"LoginManager":[]}],"parameters":[{"name":"dataset_id","in":"path","required":true,"schema":{"type":"string","title":"Dataset Id"}},{"name":"document_id","in":"path","required":true,"schema":{"type":"string","title":"Document Id"}}],"responses":{"200":{"description":"成功删除文件","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"put":{"tags":["dataset"],"summary":"更新文件","description":"更新指定数据集中的文件信息。\n\n参数:\n- dataset_id (str): 数据集ID。\n- document_id (str): 文件ID。\n- request (UpdateDocumentRequest): 更新请求对象，包含更新的详细信息。\n\n返回:\n- JSON: 更新后的文件详细信息的JSON响应。","operationId":"update_document_v1_dataset__dataset_id__documents__document_id__put","security":[{"LoginManager":[]}],"parameters":[{"name":"dataset_id","in":"path","required":true,"schema":{"type":"string","title":"Dataset Id"}},{"name":"document_id","in":"path","required":true,"schema":{"type":"string","title":"Document Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateDocumentRequest"}}}},"responses":{"200":{"description":"成功更新文件","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["dataset"],"summary":"下载文件","description":"下载指定数据集中的文件。\n\n参数:\n- dataset_id (str): 数据集ID。\n- document_id (str): 文件ID。\n\n返回:\n- StreamingResponse: 文件流响应。","operationId":"download_document_v1_dataset__dataset_id__documents__document_id__get","security":[{"LoginManager":[]}],"parameters":[{"name":"dataset_id","in":"path","required":true,"schema":{"type":"string","title":"Dataset Id"}},{"name":"document_id","in":"path","required":true,"schema":{"type":"string","title":"Document Id"}}],"responses":{"200":{"description":"成功下载文件","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/dataset/{dataset_id}/documents/{document_id}/status":{"post":{"tags":["dataset"],"summary":"开始解析文件","description":"开始解析指定数据集中的文件。\n\n参数:\n- dataset_id (str): 数据集ID。\n- document_id (str): 文件ID。\n\n返回:\n- JSON: 解析操作的结果。","operationId":"parse_document_v1_dataset__dataset_id__documents__document_id__status_post","security":[{"LoginManager":[]}],"parameters":[{"name":"dataset_id","in":"path","required":true,"schema":{"type":"string","title":"Dataset Id"}},{"name":"document_id","in":"path","required":true,"schema":{"type":"string","title":"Document Id"}}],"responses":{"200":{"description":"成功开始解析文件","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["dataset"],"summary":"停止解析文件","description":"停止解析指定数据集中的文件。\n\n参数:\n- dataset_id (str): 数据集ID。\n- document_id (str): 文件ID。\n- db (Session): 数据库会话。\n- user: 当前用户信息。\n\n返回:\n- JSON: 停止解析操作的结果。","operationId":"stop_parsing_document_v1_dataset__dataset_id__documents__document_id__status_delete","security":[{"LoginManager":[]}],"parameters":[{"name":"dataset_id","in":"path","required":true,"schema":{"type":"string","title":"Dataset Id"}},{"name":"document_id","in":"path","required":true,"schema":{"type":"string","title":"Document Id"}}],"responses":{"200":{"description":"成功停止解析文件","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["dataset"],"summary":"显示文件解析状态","description":"显示指定数据集中文件的解析状态。\n\n参数:\n- dataset_id (str): 数据集ID。\n- document_id (str): 文件ID。\n- db (Session): 数据库会话。\n- user: 当前用户信息。\n\n返回:\n- JSON: 文件解析状态的JSON响应。","operationId":"show_parsing_status_v1_dataset__dataset_id__documents__document_id__status_get","security":[{"LoginManager":[]}],"parameters":[{"name":"dataset_id","in":"path","required":true,"schema":{"type":"string","title":"Dataset Id"}},{"name":"document_id","in":"path","required":true,"schema":{"type":"string","title":"Document Id"}}],"responses":{"200":{"description":"成功显示文件解析状态","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/dataset/{dataset_id}/documents/status":{"post":{"tags":["dataset"],"summary":"开始解析多个文件","description":"开始解析指定数据集中的多个文件。\n\n参数:\n- dataset_id (str): 数据集ID。\n- doc_ids (List[str]): 文件ID列表。\n- db (Session): 数据库会话。\n- user: 当前用户信息。\n\n返回:\n- JSON: 解析操作的结果。","operationId":"parse_documents_v1_dataset__dataset_id__documents_status_post","security":[{"LoginManager":[]}],"parameters":[{"name":"dataset_id","in":"path","required":true,"schema":{"type":"string","title":"Dataset Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"array","items":{"type":"string"},"title":"Doc Ids"}}}},"responses":{"200":{"description":"成功开始解析多个文件","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["dataset"],"summary":"停止解析多个文件","description":"停止解析指定数据集中的多个文件。\n\n参数:\n- dataset_id (str): 数据集ID。\n- doc_ids (List[str]): 文件ID列表。\n- db (Session): 数据库会话。\n- user: 当前用户信息。\n\n返回:\n- JSON: 停止解析操作的结果。","operationId":"stop_parsing_documents_v1_dataset__dataset_id__documents_status_delete","security":[{"LoginManager":[]}],"parameters":[{"name":"dataset_id","in":"path","required":true,"schema":{"type":"string","title":"Dataset Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"array","items":{"type":"string"},"title":"Doc Ids"}}}},"responses":{"200":{"description":"成功停止解析多个文件","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/auth/token":{"post":{"summary":"获取Access_token","description":"此函数用于处理用户身份验证并生成访问令牌。[目前有效期：1天]\n\n参数:\n- data (OAuth2PasswordRequestForm): 依赖注入的OAuth2密码请求表单数据，包含用户名（电子邮件）和密码。\n- db (Session): 依赖注入的数据库会话，用于与数据库交互。\n\n返回:\n- dict: 包含访问令牌和令牌类型的信息字典，如{\"access_token\": \"generated_token\", \"token_type\": \"bearer\"}。\n\n异常:\n- InvalidCredentialsException: 如果提供的凭据无效或找不到用户，将引发此异常。\n\n使用场景:\n- 当客户端通过POST请求访问'/auth/token'端点时，此函数将被异步调用，以验证用户凭据并生成访问令牌。","operationId":"login_auth_token_post","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Body_login_auth_token_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/":{"get":{"summary":"根目录","operationId":"root__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}}},"components":{"schemas":{"AIBatchTranslateReqBody":{"properties":{"zh_text_list":{"items":{"type":"string"},"type":"array","title":"Zh Text List"},"llm_name":{"type":"string","title":"Llm Name"}},"type":"object","required":["zh_text_list","llm_name"],"title":"AIBatchTranslateReqBody"},"AITranslateReqBody":{"properties":{"zh_text":{"type":"string","title":"Zh Text"},"llm_name":{"type":"string","title":"Llm Name"}},"type":"object","required":["zh_text","llm_name"],"title":"AITranslateReqBody"},"ASRRequest":{"properties":{"audio_file_path":{"type":"string","title":"Audio File Path"},"llm_name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Llm Name"}},"type":"object","required":["audio_file_path"],"title":"ASRRequest"},"AddHistoryRequest":{"properties":{"conversation_id":{"type":"string","title":"Conversation Id","description":"会话ID"},"ask_id":{"type":"string","title":"Ask Id","description":"询问ID"},"data":{"type":"string","title":"Data","description":"历史记录内容, 可以是JSON字符串"}},"type":"object","required":["conversation_id","ask_id","data"],"title":"AddHistoryRequest"},"AddLLMRequest":{"properties":{"llm_factory":{"type":"string","title":"Llm Factory"},"llm_name":{"type":"string","title":"Llm Name"},"mdl_type":{"type":"string","title":"Mdl Type"},"api_key":{"type":"string","title":"Api Key"},"api_base":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Api Base"},"ark_api_key":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Ark Api Key"},"endpoint_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Endpoint Id"},"bedrock_ak":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Bedrock Ak"},"bedrock_sk":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Bedrock Sk"},"bedrock_region":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Bedrock Region"},"fish_audio_ak":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Fish Audio Ak"},"fish_audio_refid":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Fish Audio Refid"},"hunyuan_sid":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Hunyuan Sid"},"hunyuan_sk":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Hunyuan Sk"},"tencent_cloud_sid":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Tencent Cloud Sid"},"tencent_cloud_sk":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Tencent Cloud Sk"},"spark_api_password":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Spark Api Password"},"spark_app_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Spark App Id"},"spark_api_secret":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Spark Api Secret"},"spark_api_key":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Spark Api Key"},"google_project_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Google Project Id"},"google_region":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Google Region"},"google_service_account_key":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Google Service Account Key"}},"type":"object","required":["llm_factory","llm_name","mdl_type"],"title":"AddLLMRequest"},"AnalyzeUserQueryRequest":{"properties":{"conversation_id":{"type":"string","title":"Conversation Id","description":"会话ID"},"ask_id":{"type":"string","title":"Ask Id","description":"用户的提问ID"},"user_query":{"type":"string","title":"User Query","description":"用户查询"},"llm_name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Llm Name","description":"指定使用的模型名称"},"dataset_id_list":{"items":{"type":"string"},"type":"array","title":"数据集ID列表","description":"数据集ID列表","default":[]},"semantic_layer":{"type":"object","title":"语义层","description":"语义层"}},"type":"object","required":["conversation_id","ask_id","user_query","semantic_layer"],"title":"AnalyzeUserQueryRequest"},"AskAboutRequest":{"properties":{"question":{"type":"string","title":"Question"},"kb_ids":{"items":{"type":"string"},"type":"array","title":"Kb Ids"}},"type":"object","required":["question","kb_ids"],"title":"AskAboutRequest"},"BatchBindRequest":{"properties":{"target_id":{"type":"string","title":"Target Id","description":"目标ID（服务ID或标签ID）"},"library_ids":{"items":{"type":"string"},"type":"array","title":"Library Ids","description":"词库ID列表"}},"type":"object","required":["target_id","library_ids"],"title":"BatchBindRequest","description":"批量绑定请求模型"},"BatchCreateItemsRequest":{"properties":{"library_id":{"type":"string","title":"Library Id","description":"词库ID"},"contents":{"items":{"type":"string"},"type":"array","title":"Contents","description":"内容列表"},"content_type":{"type":"string","title":"Content Type","description":"内容类型","default":"text"},"item_metadata":{"type":"object","title":"Item Metadata","description":"元数据"}},"type":"object","required":["library_id","contents"],"title":"BatchCreateItemsRequest","description":"批量创建词库项请求模型"},"BatchCreateSensitiveWordRequest":{"properties":{"words":{"items":{"type":"string"},"type":"array","title":"Words","description":"敏感词列表，不能为空"},"category_id":{"type":"string","title":"Category Id","description":"分类ID，必填"},"level_id":{"type":"string","title":"Level Id","description":"等级ID，必填"},"match_type":{"type":"string","title":"Match Type","description":"匹配类型：exact/partial/regex","default":"exact"},"source":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Source","description":"来源标识，可选"}},"type":"object","required":["words","category_id","level_id"],"title":"BatchCreateSensitiveWordRequest","description":"批量创建敏感词请求模型\n\nExample:\n    {\n        \"words\": [\"敏感词1\", \"敏感词2\", \"敏感词3\"],\n        \"category_id\": \"uuid-string\",\n        \"level_id\": \"uuid-string\",\n        \"match_type\": \"exact\",\n        \"source\": \"batch_import\"\n    }"},"BatchDeleteRequest":{"properties":{"ids":{"items":{"type":"string"},"type":"array","title":"Ids","description":"待删除的ID列表，不能为空"}},"type":"object","required":["ids"],"title":"BatchDeleteRequest","description":"批量删除请求模型\n\nExample:\n    {\n        \"ids\": [\"uuid1\", \"uuid2\", \"uuid3\"]\n    }"},"BatchDetectionRequest":{"properties":{"contents":{"items":{"type":"string"},"type":"array","title":"Contents","description":"待检测的内容列表"},"service_code":{"type":"string","title":"Service Code","description":"服务代码"},"source_type":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Source Type","description":"来源类型","default":"api"}},"type":"object","required":["contents","service_code"],"title":"BatchDetectionRequest","description":"批量检测请求模型"},"BindLabelLibraryRequest":{"properties":{"label_id":{"type":"string","title":"Label Id","description":"标签ID"},"library_id":{"type":"string","title":"Library Id","description":"词库ID"},"priority":{"type":"integer","title":"Priority","description":"优先级","default":0},"enabled":{"type":"boolean","title":"Enabled","description":"是否启用","default":true}},"type":"object","required":["label_id","library_id"],"title":"BindLabelLibraryRequest","description":"标签词库绑定请求模型"},"BindServiceLibraryRequest":{"properties":{"service_id":{"type":"string","title":"Service Id","description":"服务ID"},"library_id":{"type":"string","title":"Library Id","description":"词库ID"},"priority":{"type":"integer","title":"Priority","description":"优先级","default":0},"enabled":{"type":"boolean","title":"Enabled","description":"是否启用","default":true}},"type":"object","required":["service_id","library_id"],"title":"BindServiceLibraryRequest","description":"服务词库绑定请求模型"},"Body_asr_upload_v1_conversation_asr_upload_post":{"properties":{"file":{"type":"string","format":"binary","title":"File"}},"type":"object","required":["file"],"title":"Body_asr_upload_v1_conversation_asr_upload_post"},"Body_component_run_v1_workflow_v2_component_run_post":{"properties":{"node_data_str":{"type":"string","title":"Node Data Str"},"input_str":{"type":"string","title":"Input Str"},"batch_str":{"type":"string","title":"Batch Str"},"files":{"items":{"type":"string","format":"binary"},"type":"array","title":"Files"},"bucket_name":{"type":"string","title":"Bucket Name"}},"type":"object","required":["node_data_str","input_str"],"title":"Body_component_run_v1_workflow_v2_component_run_post"},"Body_convert_v1_docx2zjform_convert_post":{"properties":{"file":{"type":"string","format":"binary","title":"File"}},"type":"object","required":["file"],"title":"Body_convert_v1_docx2zjform_convert_post"},"Body_convert_v1_file2document_convert_post":{"properties":{"kb_ids":{"items":{"type":"string"},"type":"array","title":"Kb Ids"},"file_ids":{"items":{"type":"string"},"type":"array","title":"File Ids"}},"type":"object","required":["kb_ids","file_ids"],"title":"Body_convert_v1_file2document_convert_post"},"Body_fill_docx_v1_custom_fill_docx_post":{"properties":{"file":{"type":"string","format":"binary","title":"File"},"data":{"type":"string","title":"Data"}},"type":"object","required":["file","data"],"title":"Body_fill_docx_v1_custom_fill_docx_post"},"Body_login_auth_token_post":{"properties":{"grant_type":{"anyOf":[{"type":"string","pattern":"^password$"},{"type":"null"}],"title":"Grant Type"},"username":{"type":"string","title":"Username"},"password":{"type":"string","title":"Password"},"scope":{"type":"string","title":"Scope","default":""},"client_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Client Id"},"client_secret":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Client Secret"}},"type":"object","required":["username","password"],"title":"Body_login_auth_token_post"},"Body_parse_reference_material_v1_write_api_reference_materials_parse_post":{"properties":{"chapter_id":{"type":"string","title":"Chapter Id","description":"章节ID"},"title":{"type":"string","title":"Title","description":"参考资料标题（可选）"},"file":{"type":"string","format":"binary","title":"File","description":"上传文件（可选）"},"url":{"type":"string","title":"Url","description":"网页URL（可选）"},"reference":{"type":"string","title":"Reference","description":"文本内容（可选）"}},"type":"object","required":["chapter_id"],"title":"Body_parse_reference_material_v1_write_api_reference_materials_parse_post"},"Body_parse_v1_document_parse_post":{"properties":{"url":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Url","description":"网页URL（可选）"},"files":{"anyOf":[{"items":{"type":"string","format":"binary"},"type":"array"},{"type":"null"}],"title":"Files"}},"type":"object","title":"Body_parse_v1_document_parse_post"},"Body_process_docx_v1_custom_process_docx_post":{"properties":{"file":{"type":"string","format":"binary","title":"File"}},"type":"object","required":["file"],"title":"Body_process_docx_v1_custom_process_docx_post"},"Body_run_v1_workflow_run_post":{"properties":{"workflow_json_str":{"type":"string","title":"Workflow Json Str","description":"工作流请求参数"},"input_data_str":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Input Data Str","description":"入参"},"file":{"anyOf":[{"type":"string","format":"binary"},{"type":"null"}],"title":"File","description":"可选的上传文件"}},"type":"object","required":["workflow_json_str"],"title":"Body_run_v1_workflow_run_post"},"Body_run_v1_workflow_v2_run_post":{"properties":{"schema_data":{"type":"string","title":"Schema Data"},"start_input_values":{"type":"string","title":"Start Input Values"},"workflow_id":{"type":"string","title":"Workflow Id"},"files":{"items":{"type":"string","format":"binary"},"type":"array","title":"Files"},"bucket_name":{"type":"string","title":"Bucket Name"}},"type":"object","required":["schema_data","start_input_values","workflow_id"],"title":"Body_run_v1_workflow_v2_run_post"},"Body_upload_documents_v1_dataset__dataset_id__documents__post":{"properties":{"files":{"items":{"type":"string","format":"binary"},"type":"array","title":"Files"}},"type":"object","required":["files"],"title":"Body_upload_documents_v1_dataset__dataset_id__documents__post"},"Body_upload_v1_document_upload_post":{"properties":{"files":{"items":{"type":"string","format":"binary"},"type":"array","title":"Files"}},"type":"object","required":["files"],"title":"Body_upload_v1_document_upload_post"},"Body_upload_v1_file_upload_post":{"properties":{"files":{"items":{"type":"string","format":"binary"},"type":"array","title":"Files"}},"type":"object","required":["files"],"title":"Body_upload_v1_file_upload_post"},"CacheToolsRequest":{"properties":{"mcp_id":{"type":"string","title":"Mcp Id"},"tools":{"items":{"type":"object"},"type":"array","title":"Tools"}},"type":"object","required":["mcp_id","tools"],"title":"CacheToolsRequest"},"CalcScoreRequest":{"properties":{"rule_description":{"type":"string","title":"Rule Description","description":"评分规则描述文本"},"data":{"items":{"type":"object"},"type":"array","title":"Data","description":"SQL查询结果数据"},"context":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Context","description":"评分上下文信息"},"llm_name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Llm Name","description":"指定用于评分的LLM模型"}},"type":"object","required":["rule_description","data"],"title":"CalcScoreRequest","description":"评分计算请求"},"CalcScoreV2Request":{"properties":{"user_input":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"User Input","description":"用户补充要求"},"rule_description":{"type":"string","title":"Rule Description","description":"评分规则描述文本"},"data":{"items":{"type":"object"},"type":"array","title":"Data","description":"SQL查询结果数据"},"context":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Context","description":"评分上下文信息"},"llm_name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Llm Name","description":"指定用于评分的LLM模型"},"enable_multi_extraction":{"type":"boolean","title":"Enable Multi Extraction","description":"启用多重提取策略","default":true},"score_validation":{"type":"boolean","title":"Score Validation","description":"启用分数合理性验证","default":true},"expected_score_range":{"anyOf":[{"prefixItems":[{"type":"number"},{"type":"number"}],"type":"array","maxItems":2,"minItems":2},{"type":"null"}],"title":"Expected Score Range","description":"期望分数范围 (min, max)"},"extraction_confidence_threshold":{"type":"number","title":"Extraction Confidence Threshold","description":"提取置信度阈值","default":0.8}},"type":"object","required":["rule_description","data"],"title":"CalcScoreV2Request","description":"评分计算请求V2 - 强化版"},"CandidateForm":{"properties":{"form_id":{"type":"integer","title":"Form Id"},"name":{"type":"string","title":"Name"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description","default":""}},"type":"object","required":["form_id","name"],"title":"CandidateForm"},"ChangeAuthRequest":{"properties":{"doc_id":{"type":"string","title":"Doc Id","description":"文档ID"}},"type":"object","required":["doc_id"],"title":"ChangeAuthRequest"},"ChangeParserRequest":{"properties":{"doc_id":{"type":"string","title":"Doc Id","description":"文档ID"},"parser_id":{"type":"string","title":"Parser Id","description":"解析器ID"},"parser_config":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Parser Config","description":"解析器配置"}},"type":"object","required":["doc_id","parser_id"],"title":"ChangeParserRequest"},"ChangeStatusRequest":{"properties":{"doc_ids":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"string"}],"title":"Doc Ids","description":"文档ID或文档ID列表"},"status":{"type":"integer","title":"Status","description":"状态"},"doc_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Doc Id","description":"文档ID（兼容旧版本）"}},"type":"object","required":["doc_ids","status"],"title":"ChangeStatusRequest"},"ChapterRequest":{"properties":{"title":{"type":"string","title":"Title","description":"章节标题"},"summary":{"type":"string","title":"Summary","description":"章节摘要","default":""},"parent_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Parent Id","description":"父章节ID（如果是子章节）"},"order_index":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Order Index","description":"排序索引"}},"type":"object","required":["title"],"title":"ChapterRequest","description":"章节创建/更新请求"},"ChartTypeReqBody":{"properties":{"user_question":{"type":"string","title":"User Question"},"sql_result":{"type":"object","title":"Sql Result"},"llm_name":{"type":"string","title":"Llm Name"}},"type":"object","required":["user_question","sql_result","llm_name"],"title":"ChartTypeReqBody"},"CompletionFAQRequest":{"properties":{"Authorization":{"type":"string","title":"Authorization"},"conversation_id":{"type":"string","title":"Conversation Id"},"word":{"type":"string","title":"Word"}},"type":"object","required":["Authorization","conversation_id","word"],"title":"CompletionFAQRequest"},"ContentFilterRequest":{"properties":{"content":{"type":"string","title":"Content","description":"待检测的文本内容，不能为空"},"strict_mode":{"type":"boolean","title":"Strict Mode","description":"是否启用严格模式，默认false","default":false}},"type":"object","required":["content"],"title":"ContentFilterRequest","description":"内容过滤检测请求模型\n\nExample:\n    {\n        \"content\": \"这是一段需要检测的文本内容\",\n        \"strict_mode\": false\n    }"},"CreateCategoryRequest":{"properties":{"name":{"type":"string","title":"Name","description":"分类名称，不能为空"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description","description":"分类描述，可选"}},"type":"object","required":["name"],"title":"CreateCategoryRequest","description":"创建敏感词分类请求模型\n\nExample:\n    {\n        \"name\": \"政治敏感\",\n        \"description\": \"政治相关敏感词分类\"\n    }"},"CreateChunkRequest":{"properties":{"doc_id":{"type":"string","title":"Doc Id"},"content_with_weight":{"type":"string","title":"Content With Weight"},"question_kwd":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Question Kwd"},"important_kwd":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Important Kwd"}},"type":"object","required":["doc_id","content_with_weight"],"title":"CreateChunkRequest"},"CreateDatasetRequest":{"properties":{"name":{"type":"string","title":"Name","description":"数据集名称"}},"type":"object","required":["name"],"title":"CreateDatasetRequest"},"CreateDimensionRequest":{"properties":{"code":{"type":"string","title":"Code","description":"维度代码"},"name":{"type":"string","title":"Name","description":"维度名称"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description","description":"维度描述"},"enabled":{"type":"boolean","title":"Enabled","description":"是否启用","default":true},"config":{"type":"object","title":"Config","description":"维度配置"},"sort_order":{"type":"integer","title":"Sort Order","description":"排序","default":0}},"type":"object","required":["code","name"],"title":"CreateDimensionRequest","description":"创建维度请求模型"},"CreateDocumentRequest":{"properties":{"name":{"type":"string","title":"Name","description":"文件名"},"kb_id":{"type":"string","title":"Kb Id","description":"知识库ID"}},"type":"object","required":["name","kb_id"],"title":"CreateDocumentRequest"},"CreateKnowledgebaseRequest":{"properties":{"name":{"type":"string","title":"Name"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"permission":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Permission"},"parser_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Parser Id"},"embd_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Embd Id"}},"type":"object","required":["name"],"title":"CreateKnowledgebaseRequest"},"CreateLabelRequest":{"properties":{"dimension_id":{"type":"string","title":"Dimension Id","description":"维度ID"},"code":{"type":"string","title":"Code","description":"标签代码"},"name":{"type":"string","title":"Name","description":"标签名称"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description","description":"标签描述"},"label_type":{"type":"string","title":"Label Type","description":"标签类型: keyword/regex/custom","default":"keyword"},"risk_level":{"type":"string","title":"Risk Level","description":"风险等级: low/medium/high","default":"medium"},"config":{"type":"object","title":"Config","description":"标签配置"},"enabled":{"type":"boolean","title":"Enabled","description":"是否启用","default":true},"sort_order":{"type":"integer","title":"Sort Order","description":"排序","default":0}},"type":"object","required":["dimension_id","code","name"],"title":"CreateLabelRequest","description":"创建标签请求模型"},"CreateLevelRequest":{"properties":{"name":{"type":"string","title":"Name","description":"等级名称，不能为空"},"level":{"type":"integer","maximum":5.0,"minimum":1.0,"title":"Level","description":"等级数值，范围1-5，数值越高越严重"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description","description":"等级描述，可选"},"action":{"type":"string","title":"Action","description":"处理动作：block-阻止，replace-替换，warn-警告","default":"block"},"replacement":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Replacement","description":"替换文本，当action为replace时使用"}},"type":"object","required":["name","level"],"title":"CreateLevelRequest","description":"创建敏感词等级请求模型\n\nExample:\n    {\n        \"name\": \"高危\",\n        \"level\": 5,\n        \"description\": \"高危敏感词等级\",\n        \"action\": \"block\",\n        \"replacement\": \"***\"\n    }"},"CreateLibraryItemRequest":{"properties":{"library_id":{"type":"string","title":"Library Id","description":"词库ID"},"content":{"type":"string","title":"Content","description":"内容"},"content_type":{"type":"string","title":"Content Type","description":"内容类型","default":"text"},"item_metadata":{"type":"object","title":"Item Metadata","description":"元数据"},"sort_order":{"type":"integer","title":"Sort Order","description":"排序","default":0}},"type":"object","required":["library_id","content"],"title":"CreateLibraryItemRequest","description":"创建词库项请求模型"},"CreateLibraryRequest":{"properties":{"library_type":{"type":"string","title":"Library Type","description":"词库类型: blacklist/whitelist/reply/pattern/custom"},"name":{"type":"string","title":"Name","description":"词库名称"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description","description":"词库描述"},"category":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Category","description":"词库分类"},"tags":{"items":{"type":"string"},"type":"array","title":"Tags","description":"标签列表"},"config":{"type":"object","title":"Config","description":"词库配置"}},"type":"object","required":["library_type","name"],"title":"CreateLibraryRequest","description":"创建词库请求模型"},"CreateMCPServerRequest":{"properties":{"name":{"type":"string","title":"Name"},"server_type":{"type":"string","title":"Server Type"},"url":{"type":"string","title":"Url"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"variables":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Variables"},"headers":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Headers"}},"type":"object","required":["name","server_type","url"],"title":"CreateMCPServerRequest"},"CreateRequest":{"properties":{"name":{"type":"string","title":"Name","description":"文件名"},"parent_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Parent Id","description":"父文件夹ID"},"type":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Type","description":"文件类型"}},"type":"object","required":["name"],"title":"CreateRequest"},"CreateSearchRequest":{"properties":{"name":{"type":"string","title":"Name"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"search_config":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Search Config"}},"type":"object","required":["name"],"title":"CreateSearchRequest"},"CreateSensitiveWordRequest":{"properties":{"word":{"type":"string","title":"Word","description":"敏感词内容，不能为空"},"category_id":{"type":"string","title":"Category Id","description":"分类ID，必填"},"level_id":{"type":"string","title":"Level Id","description":"等级ID，必填"},"match_type":{"type":"string","title":"Match Type","description":"匹配类型：exact-精确匹配，partial-部分匹配，regex-正则匹配","default":"exact"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description","description":"词汇描述，可选"},"source":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Source","description":"来源标识，可选"}},"type":"object","required":["word","category_id","level_id"],"title":"CreateSensitiveWordRequest","description":"创建敏感词请求模型\n\nExample:\n    {\n        \"word\": \"敏感词内容\",\n        \"category_id\": \"uuid-string\",\n        \"level_id\": \"uuid-string\",\n        \"match_type\": \"exact\",\n        \"description\": \"词汇说明\",\n        \"source\": \"manual\"\n    }"},"CreateWhitelistRequest":{"properties":{"word":{"type":"string","title":"Word","description":"白名单词汇，不能为空"},"reason":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Reason","description":"加入白名单的原因，可选"}},"type":"object","required":["word"],"title":"CreateWhitelistRequest","description":"创建白名单请求模型\n\nExample:\n    {\n        \"word\": \"正常词汇\",\n        \"reason\": \"误判为敏感词，加入白名单\"\n    }"},"DBConnectionRequest":{"properties":{"db_type":{"type":"string","title":"Db Type"},"database":{"type":"string","title":"Database"},"username":{"type":"string","title":"Username"},"host":{"type":"string","title":"Host"},"port":{"type":"integer","title":"Port"},"password":{"type":"string","title":"Password"}},"type":"object","required":["db_type","database","username","host","port","password"],"title":"DBConnectionRequest"},"DeleteByElementTypeRequest":{"properties":{"element_type":{"$ref":"#/components/schemas/SemanticElementType","title":"元素类型","description":"要删除的元素类型，对应SemanticElementType枚举中的类型"},"original_id":{"type":"string","title":"元素在中台表中的ID","description":"要删除的元素ID"}},"type":"object","required":["element_type","original_id"],"title":"DeleteByElementTypeRequest","description":"删除特定元素类型和ID的向量数据请求模型","example":{"element_type":"METRIC","id":"12345"}},"DeleteByOwnerTypeRequest":{"properties":{"owner_type":{"$ref":"#/components/schemas/OwnerType","title":"实体类型","description":"要删除的实体类型，必须是 MODEL, DATASET 或 THEME_DOMAIN"},"original_id":{"type":"string","title":"实体ID","description":"MODEL, DATASET 或 THEME_DOMAIN 的ID"}},"type":"object","required":["owner_type","original_id"],"title":"DeleteByOwnerTypeRequest","description":"删除特定类型实体相关向量的请求模型","example":{"id":"model_12345","type":"MODEL"}},"DeleteFactoryRequest":{"properties":{"llm_factory":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Llm Factory"}},"type":"object","title":"DeleteFactoryRequest"},"DeleteLLMRequest":{"properties":{"llm_factory":{"type":"string","title":"Llm Factory"},"llm_name":{"type":"string","title":"Llm Name"}},"type":"object","required":["llm_factory","llm_name"],"title":"DeleteLLMRequest"},"DeleteMsgRequest":{"properties":{"conversation_id":{"type":"string","title":"Conversation Id"},"message_id":{"type":"string","title":"Message Id"}},"type":"object","required":["conversation_id","message_id"],"title":"DeleteMsgRequest"},"DeleteTemplateRequest":{"properties":{"qa_ids":{"anyOf":[{"type":"string"},{"items":{"type":"string"},"type":"array"}],"title":"Qa Ids","description":"要删除的QA模板ID，可以是单个ID或ID列表"}},"type":"object","required":["qa_ids"],"title":"DeleteTemplateRequest","description":"删除QA模板请求"},"DenseSearchMode":{"properties":{"type":{"type":"string","enum":["dense"],"const":"dense","title":"Type","default":"dense"}},"type":"object","title":"DenseSearchMode"},"DetectionRequest":{"properties":{"content":{"type":"string","title":"Content","description":"待检测的内容"},"service_code":{"type":"string","title":"Service Code","description":"服务代码"},"request_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Request Id","description":"请求ID"},"chat_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Chat Id","description":"会话ID"},"source_type":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Source Type","description":"来源类型","default":"api"},"source_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Source Id","description":"来源ID"}},"type":"object","required":["content","service_code"],"title":"DetectionRequest","description":"检测请求模型"},"DialogContext":{"properties":{"session_id":{"type":"string","title":"Session Id","description":"会话ID"},"initial_query":{"type":"string","title":"Initial Query","description":"初始查询"},"rounds":{"items":{"$ref":"#/components/schemas/DialogRound"},"type":"array","title":"Rounds","description":"对话轮次"},"matched_template":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Matched Template","description":"已匹配的模板"},"accumulated_params":{"type":"object","title":"Accumulated Params","description":"累积参数"},"missing_params":{"items":{"type":"string"},"type":"array","title":"Missing Params","description":"缺失参数"},"metadata":{"type":"object","title":"Metadata","description":"额外元数据"}},"type":"object","required":["session_id","initial_query"],"title":"DialogContext","description":"对话上下文（调用端维护）"},"DialogRequest":{"properties":{"dialog_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Dialog Id","description":"对话的唯一标识符，如果为空则表示创建新对话"},"name":{"type":"string","maxLength":100,"title":"Name","description":"对话的名称","default":"New Dialog"},"description":{"type":"string","maxLength":500,"title":"Description","description":"对话的描述","default":"A helpful dialog"},"icon":{"type":"string","maxLength":200,"title":"Icon","description":"对话的图标URL","default":""},"top_n":{"type":"integer","maximum":50.0,"minimum":1.0,"title":"Top N","description":"从知识库中返回给用户的最大条目数","default":6},"top_k":{"type":"integer","maximum":10000.0,"minimum":1.0,"title":"Top K","description":"从知识库中检索的最大条目数","default":1024},"rerank_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Rerank Id","description":"重新排序模型的ID，用于对检索结果进行重新排序"},"similarity_threshold":{"type":"number","maximum":1.0,"minimum":0.0,"title":"Similarity Threshold","description":"相似度阈值，低于此阈值的结果将被过滤","default":0.1},"vector_similarity_weight":{"type":"number","maximum":1.0,"minimum":0.0,"title":"Vector Similarity Weight","description":"向量相似度权重，用于重新排序阶段","default":0.3},"llm_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Llm Id","description":"大语言模型的ID，如果不指定则使用租户默认模型"},"llm_setting":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Llm Setting","description":"大语言模型的配置参数"},"prompt_config":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Prompt Config","description":"提示配置字典，建议包含以下字段：\n        - system: 系统提示模板，支持参数插值，例如 {knowledge}\n        - prologue: 对话开场白\n        - parameters: 参数列表，每项包含 key 和 optional 属性\n        - empty_response: 未找到相关内容时的回复\n        "},"kb_ids":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Kb Ids","description":"知识库的ID列表"},"search_mode":{"anyOf":[{"oneOf":[{"$ref":"#/components/schemas/SparseSearchMode"},{"$ref":"#/components/schemas/DenseSearchMode"},{"$ref":"#/components/schemas/api__apps__dialog__HybridSearchMode"},{"$ref":"#/components/schemas/api__apps__dialog__FusionSearchMode"}],"discriminator":{"propertyName":"type","mapping":{"dense":"#/components/schemas/DenseSearchMode","fusion":"#/components/schemas/api__apps__dialog__FusionSearchMode","hybrid":"#/components/schemas/api__apps__dialog__HybridSearchMode","sparse":"#/components/schemas/SparseSearchMode"}}},{"type":"null"}],"title":"Search Mode","description":"检索模式配置，决定对话中检索知识库时使用的策略"}},"type":"object","title":"DialogRequest"},"DialogRound":{"properties":{"round_id":{"type":"integer","title":"Round Id","description":"轮次ID"},"user_input":{"type":"string","title":"User Input","description":"用户输入"},"timestamp":{"type":"string","title":"Timestamp","description":"时间戳"}},"type":"object","required":["round_id","user_input","timestamp"],"title":"DialogRound","description":"单轮对话数据"},"DocumentFilter":{"properties":{"run_status":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Run Status","default":[]},"types":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Types","default":[]},"suffix":{"items":{"type":"string"},"type":"array","title":"Suffix","default":[]}},"type":"object","title":"DocumentFilter"},"DocumentRemoveRequest":{"properties":{"doc_names":{"items":{"type":"string"},"type":"array","title":"Doc Names"},"doc_ids":{"items":{"type":"string"},"type":"array","title":"Doc Ids"}},"type":"object","required":["doc_names","doc_ids"],"title":"DocumentRemoveRequest"},"DynamicChartOptionFunctionReqBody":{"properties":{"user_question":{"type":"string","title":"User Question"},"sql_result":{"type":"object","title":"Sql Result"},"chart_type":{"type":"string","title":"Chart Type"},"llm_name":{"type":"string","title":"Llm Name"}},"type":"object","required":["user_question","sql_result","chart_type","llm_name"],"title":"DynamicChartOptionFunctionReqBody"},"ExportMCPServerRequest":{"properties":{"mcp_ids":{"items":{"type":"string"},"type":"array","title":"Mcp Ids"}},"type":"object","required":["mcp_ids"],"title":"ExportMCPServerRequest"},"FieldMeta":{"properties":{"field_id":{"type":"integer","title":"Field Id"},"name":{"type":"string","title":"Name"},"type":{"type":"string","title":"Type"},"required":{"type":"boolean","title":"Required","default":false},"options":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Options"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"}},"type":"object","required":["field_id","name","type"],"title":"FieldMeta"},"FillFieldsRequest":{"properties":{"user_text":{"type":"string","maxLength":900,"title":"User Text","description":"用户的自然语言输入"},"fields":{"items":{"$ref":"#/components/schemas/FieldMeta"},"type":"array","title":"Fields"},"llm_name":{"type":"string","title":"Llm Name","description":"调用的对话模型名称"},"gen_conf":{"type":"object","title":"Gen Conf"},"retry":{"type":"boolean","title":"Retry","description":"是否允许内部再追问一次","default":true}},"type":"object","required":["user_text","fields","llm_name"],"title":"FillFieldsRequest"},"FillFieldsResponse":{"properties":{"field_values":{"type":"object","title":"Field Values"},"missing":{"items":{"type":"string"},"type":"array","title":"Missing"},"invalid":{"additionalProperties":{"type":"string"},"type":"object","title":"Invalid"}},"type":"object","required":["field_values","missing","invalid"],"title":"FillFieldsResponse"},"FillSQLTemplateRequest":{"properties":{"templated_sql":{"type":"string","title":"SQL模板","description":"需要填充的SQL模板字符串"},"parameter_definitions":{"items":{"type":"object"},"type":"array","title":"参数定义列表","description":"SQL模板中参数的定义列表"},"user_selected_values":{"type":"object","title":"用户选择的值","description":"用户为SQL模板参数选择的值映射"}},"type":"object","required":["templated_sql","parameter_definitions","user_selected_values"],"title":"FillSQLTemplateRequest","description":"SQL模板填充请求的基础模型"},"FilterRequest":{"properties":{"kb_id":{"type":"string","title":"Kb Id","description":"知识库ID"},"keywords":{"type":"string","title":"Keywords","description":"关键词","default":""},"suffix":{"items":{"type":"string"},"type":"array","title":"Suffix","description":"文件后缀过滤","default":[]},"run_status":{"items":{"type":"string"},"type":"array","title":"Run Status","description":"运行状态过滤","default":[]},"types":{"items":{"type":"string"},"type":"array","title":"Types","description":"文件类型过滤","default":[]}},"type":"object","required":["kb_id"],"title":"FilterRequest"},"FinePromptRequest":{"properties":{"prompt":{"type":"string","title":"Prompt"},"llm_name":{"type":"string","title":"Llm Name"},"gen_conf":{"type":"object","title":"Gen Conf"}},"type":"object","required":["prompt","llm_name","gen_conf"],"title":"FinePromptRequest"},"GenerateEChartsRequest":{"properties":{"user_question":{"type":"string","title":"用户问题","description":"用户提出的原始问题，用于理解需要生成的图表类型"},"sql":{"type":"string","title":"SQL查询","description":"执行的SQL查询语句，图表将基于该查询的结果生成"},"column_and_type":{"items":{},"type":"array","title":"列名与类型","description":"SQL查询结果的列名及其数据类型描述"},"sample_data":{"items":{},"type":"array","title":"样本数据","description":"SQL查询结果的样本数据，用于生成图表"},"llm_name":{"type":"string","title":"LLM模型名称","description":"用于生成ECharts配置的LLM模型名称","default":"gpt-4"}},"type":"object","required":["user_question","sql","column_and_type","sample_data"],"title":"GenerateEChartsRequest","description":"ECharts生成请求的基础模型"},"GetMultipleMCPServerRequest":{"properties":{"id_list":{"items":{"type":"string"},"type":"array","title":"Id List"}},"type":"object","required":["id_list"],"title":"GetMultipleMCPServerRequest"},"GetSqlAndTableConfigReq":{"properties":{"user_query":{"type":"string","title":"查询文本","description":"用户提出的自然语言查询文本"},"dataset_id_list":{"items":{"type":"string"},"type":"array","title":"数据集ID列表","description":"数据集ID列表","default":[]},"llm_name":{"type":"string","title":"LLM模型名称","description":"用于将自然语言转换为SQL的LLM模型名称","default":"gpt-4"},"conversation_id":{"type":"string","title":"conversation_id","description":"conversation_id"},"ask_id":{"type":"string","title":"ask_id","description":"用户的提问ID"},"semantic_layer":{"type":"object","title":"语义层","description":"语义层","default":{}}},"type":"object","required":["user_query"],"title":"GetSqlAndTableConfigReq","description":"自然语言转初始SQL请求的基础模型"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"ImportMCPServerRequest":{"properties":{"mcpServers":{"type":"object","title":"Mcpservers"}},"type":"object","required":["mcpServers"],"title":"ImportMCPServerRequest"},"InstallDepRequest":{"properties":{"plugin_id":{"type":"string","title":"Plugin Id"},"package_name":{"type":"string","title":"Package Name"},"package_version":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Package Version"}},"type":"object","required":["plugin_id","package_name"],"title":"InstallDepRequest"},"LLMServiceRequest":{"properties":{"prompt":{"type":"string","title":"Prompt","default":""},"messages":{"items":{"type":"object"},"type":"array","title":"Messages"},"llm_name":{"type":"string","title":"Llm Name"},"stream":{"type":"boolean","title":"Stream","default":false},"gen_conf":{"type":"object","title":"Gen Conf"},"image":{"type":"string","title":"Image","default":""},"tavily_api_key":{"type":"string","title":"Tavily Api Key","default":""}},"type":"object","required":["messages","llm_name","gen_conf"],"title":"LLMServiceRequest"},"LangfuseKeysRequest":{"properties":{"secret_key":{"type":"string","title":"Secret Key"},"public_key":{"type":"string","title":"Public Key"},"host":{"type":"string","title":"Host"}},"type":"object","required":["secret_key","public_key","host"],"title":"LangfuseKeysRequest"},"ListChunkRequest":{"properties":{"doc_id":{"type":"string","title":"Doc Id"},"page":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Page","default":1},"size":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Size","default":30},"keywords":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Keywords","default":""}},"type":"object","required":["doc_id"],"title":"ListChunkRequest"},"ListKbDocsRequest":{"properties":{"kb_name":{"type":"string","title":"Kb Name"},"page":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Page","default":1},"page_size":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Page Size","default":15},"orderby":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Orderby","default":"create_time"},"desc":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Desc","default":true},"keywords":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Keywords","default":""}},"type":"object","required":["kb_name"],"title":"ListKbDocsRequest"},"ListKbsRequest":{"properties":{"owner_ids":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Owner Ids","default":[]}},"type":"object","title":"ListKbsRequest"},"ListMCPServerRequest":{"properties":{"mcp_ids":{"items":{"type":"string"},"type":"array","title":"Mcp Ids","default":[]}},"type":"object","title":"ListMCPServerRequest"},"ListSearchRequest":{"properties":{"owner_ids":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Owner Ids","default":[]}},"type":"object","title":"ListSearchRequest"},"ListToolsRequest":{"properties":{"mcp_ids":{"items":{"type":"string"},"type":"array","title":"Mcp Ids"},"timeout":{"type":"number","title":"Timeout","default":10.0}},"type":"object","required":["mcp_ids"],"title":"ListToolsRequest"},"LoginRequest":{"properties":{"username":{"type":"string","title":"Username"},"password":{"type":"string","title":"Password"}},"type":"object","required":["username","password"],"title":"LoginRequest"},"MindmapRequest":{"properties":{"question":{"type":"string","title":"Question"},"kb_ids":{"items":{"type":"string"},"type":"array","title":"Kb Ids"},"search_mode":{"anyOf":[{"oneOf":[{"$ref":"#/components/schemas/SparseSearchMode"},{"$ref":"#/components/schemas/DenseSearchMode"},{"$ref":"#/components/schemas/api__apps__conversation__HybridSearchMode"},{"$ref":"#/components/schemas/api__apps__conversation__FusionSearchMode"}],"discriminator":{"propertyName":"type","mapping":{"dense":"#/components/schemas/DenseSearchMode","fusion":"#/components/schemas/api__apps__conversation__FusionSearchMode","hybrid":"#/components/schemas/api__apps__conversation__HybridSearchMode","sparse":"#/components/schemas/SparseSearchMode"}}},{"type":"null"}],"title":"Search Mode"}},"type":"object","required":["question","kb_ids"],"title":"MindmapRequest"},"MoveRequest":{"properties":{"src_file_ids":{"items":{"type":"string"},"type":"array","title":"Src File Ids","description":"源文件ID列表"},"dest_file_id":{"type":"string","title":"Dest File Id","description":"目标文件夹ID"}},"type":"object","required":["src_file_ids","dest_file_id"],"title":"MoveRequest"},"NL2SQLReqBody":{"properties":{"user_question":{"type":"string","title":"User Question"},"table_structure":{"type":"string","title":"Table Structure"},"llm_name":{"type":"string","title":"Llm Name"}},"type":"object","required":["user_question","table_structure","llm_name"],"title":"NL2SQLReqBody"},"NL2SQLRequest":{"properties":{"query_text":{"type":"string","title":"查询文本","description":"需要转换为SQL的原始自然语言查询文本"},"llm_name":{"type":"string","title":"LLM模型名称","description":"用于将自然语言转换为SQL的LLM模型名称","default":"gpt-4"},"dataset_id_list":{"items":{"type":"string"},"type":"array","title":"数据集ID列表","description":"用于查询的数据集ID列表"}},"type":"object","required":["query_text","dataset_id_list"],"title":"NL2SQLRequest","description":"自然语言转SQL请求的基础模型","example":{"dataset_id_list":["dataset1","dataset2"],"llm_name":"gpt-4","query_text":"查询销售额最高的前10个产品"}},"NewConversationRequest":{"properties":{"user_id":{"type":"string","title":"User Id"}},"type":"object","required":["user_id"],"title":"NewConversationRequest"},"NewTokenRequest":{"properties":{"tenant_id":{"type":"string","title":"Tenant Id"}},"type":"object","required":["tenant_id"],"title":"NewTokenRequest"},"OutlineRequest":{"properties":{"user_input":{"type":"string","title":"User Input","description":"用户输入的需求"},"content_type":{"type":"string","title":"Content Type","description":"文案类型"},"language_style":{"type":"string","title":"Language Style","description":"语言风格"},"word_count":{"type":"integer","title":"Word Count","description":"文章篇幅/预期字数"},"model":{"type":"string","title":"Model","description":"使用的模型"},"reference":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Reference","description":"用户提供的参考信息"},"custom_outline_md":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Custom Outline Md","description":"用户提供的自定义Markdown大纲模板"}},"type":"object","required":["user_input","content_type","language_style","word_count","model"],"title":"OutlineRequest","description":"大纲生成请求"},"OutlineResponse":{"properties":{"outline_md":{"type":"string","title":"Outline Md","description":"Markdown格式的大纲"},"outline_structure":{"type":"object","title":"Outline Structure","description":"结构化的大纲数据"},"article_id":{"type":"string","title":"Article Id","description":"文章唯一标识符"}},"type":"object","required":["outline_md","outline_structure","article_id"],"title":"OutlineResponse","description":"大纲生成响应"},"OwnerType":{"type":"string","enum":["MODEL","DATASET","THEME_DOMAIN"],"title":"OwnerType"},"QAParamDefinition":{"properties":{"name":{"type":"string","title":"Name","description":"参数名称"},"data_type":{"type":"string","title":"Data Type","description":"数据类型：string, integer, float, boolean, date","default":"string"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description","description":"参数描述"},"required":{"type":"boolean","title":"Required","description":"是否必需","default":true}},"type":"object","required":["name"],"title":"QAParamDefinition","description":"QA参数定义"},"QATemplate":{"properties":{"qa_id":{"type":"string","title":"Qa Id","description":"唯一标识符"},"question_canonical":{"type":"string","title":"Question Canonical","description":"标准问法"},"paraphrases":{"items":{"type":"string"},"type":"array","title":"Paraphrases","description":"同义句列表","default":[]},"needed_params":{"items":{"type":"string"},"type":"array","title":"Needed Params","description":"需要的参数列表"},"sql_template":{"type":"string","title":"Sql Template","description":"SQL模板，使用命名参数"},"rule_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Rule Id","description":"评分规则ID，可为空"}},"type":"object","required":["qa_id","question_canonical","needed_params","sql_template"],"title":"QATemplate","description":"QA模板数据结构 - 保持不变"},"QATemplateV2":{"properties":{"qa_id":{"type":"string","title":"Qa Id","description":"唯一标识符"},"question_canonical":{"type":"string","title":"Question Canonical","description":"标准问法"},"paraphrases":{"items":{"type":"string"},"type":"array","title":"Paraphrases","description":"同义句列表","default":[]},"needed_params_v2":{"items":{"$ref":"#/components/schemas/QAParamDefinition"},"type":"array","title":"Needed Params V2","description":"带类型的参数定义列表"},"sql_template":{"items":{"type":"string"},"type":"array","title":"Sql Template","description":"SQL模板列表，支持多个SQL模板，使用命名参数"},"rule_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Rule Id","description":"评分规则ID，可为空"}},"type":"object","required":["qa_id","question_canonical","needed_params_v2","sql_template"],"title":"QATemplateV2","description":"QA模板数据结构 - 支持带类型的参数定义"},"QueryRewriteRequest":{"properties":{"query_text":{"type":"string","title":"查询文本","description":"需要重写的原始自然语言查询文本"},"llm_name":{"type":"string","title":"LLM模型名称","description":"用于重写查询的LLM模型名称","default":"gpt-4"},"max_variations":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"最大变体数量","description":"生成的查询变体的最大数量","default":5},"preserve_keywords":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"保留关键词","description":"是否在重写过程中保留关键词","default":true}},"type":"object","required":["query_text"],"title":"QueryRewriteRequest","description":"查询重写请求的基础模型","example":{"llm_name":"gpt-4","max_variations":3,"preserve_keywords":true,"query_text":"显示上个季度的销售数据"}},"QuickInterpretRequest":{"properties":{"user_query":{"type":"string","title":"User Query","description":"用户查询"},"table_schemas":{"items":{"$ref":"#/components/schemas/TableSchema"},"type":"array","title":"Table Schemas","description":"表结构"},"llm_name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Llm Name","description":"LLM模型"},"similarity_threshold":{"type":"number","title":"Similarity Threshold","description":"模板匹配阈值","default":0.3},"hybrid_weight":{"type":"number","title":"Hybrid Weight","description":"混合检索权重","default":0.7}},"type":"object","required":["user_query","table_schemas"],"title":"QuickInterpretRequest","description":"快速解释请求（单轮）"},"RAGAnswerRequest":{"properties":{"query":{"type":"string","title":"Query","description":"用户查询"},"kb_id":{"type":"string","title":"Kb Id","description":"知识库ID"},"top_k":{"type":"integer","title":"Top K","description":"检索top-k文档","default":5},"llm_name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Llm Name","description":"指定LLM模型"}},"type":"object","required":["query","kb_id"],"title":"RAGAnswerRequest","description":"RAG回答请求"},"RecognizeIntentRequest":{"properties":{"user_text":{"type":"string","maxLength":900,"title":"User Text","description":"用户的自然语言输入"},"candidate_forms":{"items":{"$ref":"#/components/schemas/CandidateForm"},"type":"array","title":"Candidate Forms","description":"候选表单列表，建议 ≤ 10 个"},"llm_name":{"type":"string","title":"Llm Name","description":"用于意图识别的对话模型名称"},"gen_conf":{"type":"object","title":"Gen Conf","description":"可选的大模型生成参数"}},"type":"object","required":["user_text","candidate_forms","llm_name"],"title":"RecognizeIntentRequest"},"RecognizeIntentResponse":{"properties":{"intent_id":{"type":"integer","title":"Intent Id"},"confidence":{"type":"number","title":"Confidence"}},"type":"object","required":["intent_id","confidence"],"title":"RecognizeIntentResponse"},"RegisterRequest":{"properties":{"email":{"type":"string","title":"Email"},"nickname":{"type":"string","title":"Nickname"},"password":{"type":"string","title":"Password"}},"type":"object","required":["email","nickname","password"],"title":"RegisterRequest"},"RelatedQuestionsRequest":{"properties":{"question":{"type":"string","title":"Question"}},"type":"object","required":["question"],"title":"RelatedQuestionsRequest"},"RemoveCanvasRequest":{"properties":{"canvas_ids":{"items":{"type":"string"},"type":"array","title":"Canvas Ids"}},"type":"object","required":["canvas_ids"],"title":"RemoveCanvasRequest"},"RemoveConversationRequest":{"properties":{"conversation_ids":{"items":{"type":"string"},"type":"array","title":"Conversation Ids"}},"type":"object","required":["conversation_ids"],"title":"RemoveConversationRequest"},"RemoveDialogRequest":{"properties":{"dialog_ids":{"items":{"type":"string"},"type":"array","title":"Dialog Ids"}},"type":"object","required":["dialog_ids"],"title":"RemoveDialogRequest"},"RemoveKnowledgebaseRequest":{"properties":{"kb_id":{"type":"string","title":"Kb Id"}},"type":"object","required":["kb_id"],"title":"RemoveKnowledgebaseRequest"},"RemoveMCPServerRequest":{"properties":{"mcp_ids":{"items":{"type":"string"},"type":"array","title":"Mcp Ids"}},"type":"object","required":["mcp_ids"],"title":"RemoveMCPServerRequest"},"RemoveSearchRequest":{"properties":{"search_id":{"type":"string","title":"Search Id"}},"type":"object","required":["search_id"],"title":"RemoveSearchRequest"},"RemoveTagsRequest":{"properties":{"tags":{"items":{"type":"string"},"type":"array","title":"Tags"}},"type":"object","required":["tags"],"title":"RemoveTagsRequest"},"RemoveTokenRequest":{"properties":{"tokens":{"items":{"type":"string"},"type":"array","title":"Tokens"},"tenant_id":{"type":"string","title":"Tenant Id"}},"type":"object","required":["tokens","tenant_id"],"title":"RemoveTokenRequest"},"RenameTagRequest":{"properties":{"from_tag":{"type":"string","title":"From Tag"},"to_tag":{"type":"string","title":"To Tag"}},"type":"object","required":["from_tag","to_tag"],"title":"RenameTagRequest"},"ResetCanvasRequest":{"properties":{"id":{"type":"string","title":"Id"}},"type":"object","required":["id"],"title":"ResetCanvasRequest"},"ResponseSchema":{"properties":{"status":{"$ref":"#/components/schemas/StatusEnum","default":"success"},"message":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Message"},"data":{"anyOf":[{},{"type":"null"}],"title":"Data"}},"type":"object","title":"ResponseSchema"},"RetrievalTestRequest":{"properties":{"kb_ids":{"items":{"type":"string"},"type":"array","title":"Kb Ids"},"question":{"type":"string","title":"Question"},"page":{"type":"integer","title":"Page","default":1},"size":{"type":"integer","title":"Size","default":30},"doc_ids":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Doc Ids"},"similarity_threshold":{"type":"number","title":"Similarity Threshold","default":0.0},"vector_similarity_weight":{"type":"number","title":"Vector Similarity Weight","default":0.3},"use_kg":{"type":"boolean","title":"Use Kg","default":false},"top_k":{"type":"integer","title":"Top K","default":1024},"rerank_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Rerank Id"},"highlight":{"type":"boolean","title":"Highlight","default":false},"keyword":{"type":"boolean","title":"Keyword","default":false},"search_mode":{"anyOf":[{"oneOf":[{"$ref":"#/components/schemas/SparseSearchMode"},{"$ref":"#/components/schemas/DenseSearchMode"},{"$ref":"#/components/schemas/api__apps__chunk__HybridSearchMode"},{"$ref":"#/components/schemas/api__apps__chunk__FusionSearchMode"}],"discriminator":{"propertyName":"type","mapping":{"dense":"#/components/schemas/DenseSearchMode","fusion":"#/components/schemas/api__apps__chunk__FusionSearchMode","hybrid":"#/components/schemas/api__apps__chunk__HybridSearchMode","sparse":"#/components/schemas/SparseSearchMode"}}},{"type":"null"}],"title":"Search Mode"},"cross_languages":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Cross Languages"}},"type":"object","required":["kb_ids","question"],"title":"RetrievalTestRequest"},"RmChunkRequest":{"properties":{"doc_id":{"type":"string","title":"Doc Id"},"chunk_ids":{"items":{"type":"string"},"type":"array","title":"Chunk Ids"}},"type":"object","required":["doc_id","chunk_ids"],"title":"RmChunkRequest"},"RunCanvasRequest":{"properties":{"id":{"type":"string","title":"Id"},"message":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Message"},"stream":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Stream","default":true}},"type":"object","required":["id"],"title":"RunCanvasRequest"},"RunPluginScriptRequest":{"properties":{"plugin_id":{"type":"string","title":"Plugin Id"},"script":{"type":"string","title":"Script"},"args":{"type":"object","title":"Args"}},"type":"object","required":["plugin_id","script","args"],"title":"RunPluginScriptRequest"},"RunRequest":{"properties":{"doc_ids":{"items":{"type":"string"},"type":"array","title":"Doc Ids","description":"文档ID列表"},"run":{"type":"integer","title":"Run","description":"运行状态"},"delete":{"type":"boolean","title":"Delete","description":"是否删除历史doc记录","default":false}},"type":"object","required":["doc_ids","run"],"title":"RunRequest"},"SQLTemplatingRequest":{"properties":{"original_question":{"type":"string","title":"原始问题","description":"用户提出的原始自然语言问题"},"llm_name":{"type":"string","title":"LLM模型名称","description":"用于SQL模板化的LLM模型名称","default":"gpt-4"},"sql":{"type":"string","title":"SQL查询","description":"需要进行模板化的SQL查询语句"},"semantic_layer":{"type":"object","title":"语义层结构","description":"包含数据集、维度、指标等语义层信息的结构"}},"type":"object","required":["original_question","sql","semantic_layer"],"title":"SQLTemplatingRequest","description":"SQL模板化请求的基础模型"},"SaveCanvasRequest":{"properties":{"id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Id"},"dsl":{"type":"string","title":"Dsl"},"title":{"type":"string","title":"Title"}},"type":"object","required":["id","dsl","title"],"title":"SaveCanvasRequest"},"SearchVectorsRequest":{"properties":{"query_text":{"type":"string","title":"查询文本","description":"用于查询相似向量的文本内容"},"embedding_model":{"type":"string","title":"嵌入模型","description":"用于生成查询向量的嵌入模型名称"},"element_types":{"anyOf":[{"items":{"$ref":"#/components/schemas/SemanticElementType"},"type":"array"},{"type":"null"}],"title":"元素类型列表","description":"用于过滤的元素类型列表，可选"},"theme_domain_ids":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"主题域ID列表","description":"用于过滤的主题域ID列表，可选"},"dataset_ids":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"数据集ID列表","description":"用于过滤的数据集ID列表，可选"},"model_ids":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"模型ID列表","description":"用于过滤的模型ID列表，可选"},"top_k":{"type":"integer","maximum":100.0,"minimum":1.0,"title":"返回结果数量","description":"返回的最大结果数量","default":10},"score_threshold":{"type":"number","maximum":1.0,"minimum":0.0,"title":"相似度阈值","description":"相似度分数阈值，低于该值的结果将被过滤","default":0.82}},"type":"object","required":["query_text","embedding_model"],"title":"SearchVectorsRequest","description":"向量搜索请求模型","example":{"element_types":["DATASET_DESC","MODEL_DESC"],"embedding_model":"sentence-transformers/all-MiniLM-L6-v2","query_text":"气象数据分析","score_threshold":0.7,"theme_domain_ids":["theme_domain_123"],"top_k":5}},"SemanticElementType":{"type":"string","enum":["THEME_DOMAIN","THEME_DOMAIN_EN","DATASET","DATASET_EN","DATASET_DESC","MODEL","MODEL_EN","MODEL_DESC","METRIC","METRIC_EN","METRIC_DESC","METRIC_SYNONYMS","DIMENSION","DIMENSION_EN","DIMENSION_DESC","DIMENSION_SYNONYMS","DIMENSION_VALUE","DIMENSION_VALUE_SYNONYMS","TERM","TERM_DESC","TERM_SYNONYMS"],"title":"SemanticElementType"},"SemanticLayerRequest":{"properties":{"conversation_id":{"type":"string","title":"Conversation Id","description":"会话ID"},"ask_id":{"type":"string","title":"Ask Id","description":"用户的提问ID"},"user_query":{"type":"string","title":"User Query","description":"用户查询"},"llm_name":{"type":"string","title":"LLM模型名称","description":"","default":""},"dataset_id_list":{"items":{"type":"string"},"type":"array","title":"数据集ID列表","description":"数据集ID列表","default":[]}},"type":"object","required":["conversation_id","ask_id","user_query"],"title":"SemanticLayerRequest"},"SetAPIKeyRequest":{"properties":{"llm_factory":{"type":"string","title":"Llm Factory"},"api_key":{"type":"string","title":"Api Key"},"base_url":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Base Url"}},"type":"object","required":["llm_factory","api_key"],"title":"SetAPIKeyRequest"},"SetChunkRequest":{"properties":{"doc_id":{"type":"string","title":"Doc Id"},"chunk_id":{"type":"string","title":"Chunk Id"},"content_with_weight":{"type":"string","title":"Content With Weight"},"important_kwd":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Important Kwd","default":[]},"question_kwd":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Question Kwd","default":[]},"available_int":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Available Int"},"tag_kwd":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Tag Kwd"},"tag_feas":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Tag Feas"}},"type":"object","required":["doc_id","chunk_id","content_with_weight"],"title":"SetChunkRequest"},"SetConversationRequest":{"properties":{"conversation_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Conversation Id"},"dialog_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Dialog Id"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name","default":"New conversation"},"is_new":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Is New"}},"type":"object","title":"SetConversationRequest"},"SetMetaRequest":{"properties":{"doc_id":{"type":"string","title":"Doc Id","description":"文档ID"},"meta":{"type":"object","title":"Meta","description":"元数据对象"}},"type":"object","required":["doc_id","meta"],"title":"SetMetaRequest"},"SetTenantInfoRequest":{"properties":{"tenant_id":{"type":"string","title":"Tenant Id"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"llm_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Llm Id"},"embd_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Embd Id"},"asr_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Asr Id"},"img2txt_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Img2Txt Id"},"rerank_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Rerank Id"},"tts_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Tts Id"}},"type":"object","required":["tenant_id"],"title":"SetTenantInfoRequest"},"SparseSearchMode":{"properties":{"type":{"type":"string","enum":["sparse"],"const":"sparse","title":"Type","default":"sparse"}},"type":"object","title":"SparseSearchMode"},"StatelessInterpretRequest":{"properties":{"current_input":{"type":"string","title":"Current Input","description":"当前用户输入"},"dialog_context":{"anyOf":[{"$ref":"#/components/schemas/DialogContext"},{"type":"null"}],"description":"对话上下文（多轮时提供）"},"table_schemas":{"items":{"$ref":"#/components/schemas/TableSchema"},"type":"array","title":"Table Schemas","description":"数据库表结构"},"system_date":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"System Date","description":"系统日期"},"similarity_threshold":{"type":"number","title":"Similarity Threshold","description":"模板匹配阈值","default":0.3},"hybrid_weight":{"type":"number","title":"Hybrid Weight","description":"混合检索权重","default":0.7},"llm_name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Llm Name","description":"指定LLM模型"},"force_new_template":{"type":"boolean","title":"Force New Template","description":"强制重新匹配模板","default":false},"enable_slot_merge":{"type":"boolean","title":"Enable Slot Merge","description":"启用参数合并","default":true}},"type":"object","required":["current_input","table_schemas"],"title":"StatelessInterpretRequest","description":"无状态查询解释请求"},"StaticChartOptionReqBody":{"properties":{"raw_data":{"type":"string","title":"Raw Data"},"llm_name":{"type":"string","title":"Llm Name"}},"type":"object","required":["raw_data","llm_name"],"title":"StaticChartOptionReqBody"},"StatusEnum":{"type":"string","enum":["success","error"],"title":"StatusEnum"},"StoreTemplatesRequest":{"properties":{"templates":{"items":{"$ref":"#/components/schemas/QATemplate"},"type":"array","title":"Templates","description":"QA模板列表"},"clear_existing":{"type":"boolean","title":"Clear Existing","description":"是否清空现有模板","default":false}},"type":"object","required":["templates"],"title":"StoreTemplatesRequest","description":"存储QA模板请求 - 保持不变"},"StoreTemplatesV2Request":{"properties":{"templates":{"items":{"$ref":"#/components/schemas/QATemplateV2"},"type":"array","title":"Templates","description":"QA模板V2列表"},"clear_existing":{"type":"boolean","title":"Clear Existing","description":"是否清空现有模板","default":false}},"type":"object","required":["templates"],"title":"StoreTemplatesV2Request","description":"存储QA模板V2请求 - 支持类型化参数"},"SuggestionRequest":{"properties":{"llm_name":{"type":"string","title":"Llm Name"},"last_response":{"type":"string","title":"Last Response"},"messages":{"items":{"type":"object"},"type":"array","title":"Messages"},"gen_conf":{"type":"object","title":"Gen Conf"},"num":{"type":"integer","title":"Num","default":3}},"type":"object","required":["llm_name","last_response","messages"],"title":"SuggestionRequest"},"SwitchChunkRequest":{"properties":{"doc_id":{"type":"string","title":"Doc Id"},"chunk_ids":{"items":{"type":"string"},"type":"array","title":"Chunk Ids"},"available_int":{"type":"integer","title":"Available Int"}},"type":"object","required":["doc_id","chunk_ids","available_int"],"title":"SwitchChunkRequest"},"TTSRequest":{"properties":{"text":{"type":"string","title":"Text"},"llm_name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Llm Name"}},"type":"object","required":["text"],"title":"TTSRequest"},"TableSchema":{"properties":{"table_name":{"type":"string","title":"Table Name","description":"表名"},"columns":{"items":{"additionalProperties":{"type":"string"},"type":"object"},"type":"array","title":"Columns","description":"列信息：{name, type, description}"}},"type":"object","required":["table_name","columns"],"title":"TableSchema","description":"数据库表结构信息 - 保持不变"},"TestMCPRequest":{"properties":{"url":{"type":"string","title":"Url"},"server_type":{"type":"string","title":"Server Type"},"timeout":{"type":"number","title":"Timeout","default":10.0},"headers":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Headers"},"variables":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Variables"}},"type":"object","required":["url","server_type"],"title":"TestMCPRequest"},"TestToolRequest":{"properties":{"mcp_id":{"type":"string","title":"Mcp Id"},"tool_name":{"type":"string","title":"Tool Name"},"arguments":{"type":"object","title":"Arguments"},"timeout":{"type":"number","title":"Timeout","default":10.0}},"type":"object","required":["mcp_id","tool_name","arguments"],"title":"TestToolRequest"},"TextItemBase":{"properties":{"text":{"type":"string","title":"文本内容","description":"需要转换为向量的文本内容"},"type":{"$ref":"#/components/schemas/SemanticElementType","title":"文本类型","description":"文本的类型，对应 SemanticElementType 枚举中的类型名称"},"original_id":{"type":"string","title":"original_id","description":"在中台表中的ID"},"model_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"模型id","description":"所属模型id（当为指标、维度相关信息保存向量时需要填写）"},"dataset_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"数据集id","description":"所属数据集id（当为指标、维度相关信息保存向量时需要填写）"},"theme_domain_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"主题域id","description":"所属主题域id（当为指标、维度相关信息保存向量时需要填写）"},"embedding_model":{"type":"string","title":"嵌入模型","description":"嵌入模型的名称"}},"type":"object","required":["text","type","original_id","embedding_model"],"title":"TextItemBase","description":"文本转向量的基础模型","example":{"embedding_model":"sentence-transformers/all-MiniLM-L6-v2","id":"12345","text":"这是一个数据集描述的示例文本，该数据集包含了2010-2020年的气象数据。","type":"DATASET_DESC"}},"ThumbupRequest":{"properties":{"conversation_id":{"type":"string","title":"Conversation Id"},"message_id":{"type":"string","title":"Message Id"},"thumbup":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Thumbup"},"feedback":{"type":"string","title":"Feedback"}},"type":"object","required":["conversation_id","message_id","feedback"],"title":"ThumbupRequest"},"UninstallDepRequest":{"properties":{"plugin_id":{"type":"string","title":"Plugin Id"},"package_name":{"type":"string","title":"Package Name"}},"type":"object","required":["plugin_id","package_name"],"title":"UninstallDepRequest"},"UpdateBindingRequest":{"properties":{"binding_id":{"type":"string","title":"Binding Id","description":"绑定关系ID"},"priority":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Priority","description":"优先级"},"enabled":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Enabled","description":"是否启用"}},"type":"object","required":["binding_id"],"title":"UpdateBindingRequest","description":"更新绑定请求模型"},"UpdateCategoryRequest":{"properties":{"category_id":{"type":"string","title":"Category Id","description":"分类ID，必填"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name","description":"分类名称，可选"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description","description":"分类描述，可选"},"status":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Status","description":"状态：1-启用，0-禁用"}},"type":"object","required":["category_id"],"title":"UpdateCategoryRequest","description":"更新敏感词分类请求模型\n\nExample:\n    {\n        \"category_id\": \"uuid-string\",\n        \"name\": \"更新后的分类名\",\n        \"description\": \"更新后的描述\",\n        \"status\": \"1\"\n    }"},"UpdateDatasetRequest":{"properties":{"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name","description":"数据集名称"},"embedding_model_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Embedding Model Id","description":"嵌入模型ID"},"chunk_method":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Chunk Method","description":"分块方法"},"photo":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Photo","description":"图片"},"layout_recognize":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Layout Recognize","description":"布局识别"},"language":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Language","description":"语言"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description","description":"描述"},"permission":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Permission","description":"权限"},"token_num":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Token Num","description":"令牌数量"},"template_type":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Template Type","description":"模板类型"},"chunk_num":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Chunk Num","description":"分块数量"}},"type":"object","title":"UpdateDatasetRequest"},"UpdateDimensionRequest":{"properties":{"dimension_id":{"type":"string","title":"Dimension Id","description":"维度ID"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name","description":"维度名称"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description","description":"维度描述"},"enabled":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Enabled","description":"是否启用"},"config":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Config","description":"维度配置"},"sort_order":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Sort Order","description":"排序"}},"type":"object","required":["dimension_id"],"title":"UpdateDimensionRequest","description":"更新维度请求模型"},"UpdateDocumentRequest":{"properties":{"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name","description":"文件名"},"enable":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Enable","description":"是否启用"},"template_type":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Template Type","description":"模板类型"}},"type":"object","title":"UpdateDocumentRequest"},"UpdateKnowledgebaseRequest":{"properties":{"kb_id":{"type":"string","title":"Kb Id"},"name":{"type":"string","title":"Name"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"permission":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Permission"},"parser_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Parser Id"},"pagerank":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Pagerank","default":0}},"type":"object","required":["kb_id","name"],"title":"UpdateKnowledgebaseRequest"},"UpdateLabelRequest":{"properties":{"label_id":{"type":"string","title":"Label Id","description":"标签ID"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name","description":"标签名称"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description","description":"标签描述"},"label_type":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Label Type","description":"标签类型"},"risk_level":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Risk Level","description":"风险等级"},"config":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Config","description":"标签配置"},"enabled":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Enabled","description":"是否启用"},"sort_order":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Sort Order","description":"排序"}},"type":"object","required":["label_id"],"title":"UpdateLabelRequest","description":"更新标签请求模型"},"UpdateLevelRequest":{"properties":{"level_id":{"type":"string","title":"Level Id","description":"等级ID，必填"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name","description":"等级名称，可选"},"level":{"anyOf":[{"type":"integer","maximum":5.0,"minimum":1.0},{"type":"null"}],"title":"Level","description":"等级数值，范围1-5"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description","description":"等级描述，可选"},"action":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Action","description":"处理动作：block/replace/warn"},"replacement":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Replacement","description":"替换文本，可选"},"status":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Status","description":"状态：1-启用，0-禁用"}},"type":"object","required":["level_id"],"title":"UpdateLevelRequest","description":"更新敏感词等级请求模型\n\nExample:\n    {\n        \"level_id\": \"uuid-string\",\n        \"name\": \"中危\",\n        \"level\": 3,\n        \"action\": \"replace\",\n        \"replacement\": \"***\",\n        \"status\": \"1\"\n    }"},"UpdateLibraryRequest":{"properties":{"library_id":{"type":"string","title":"Library Id","description":"词库ID"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name","description":"词库名称"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description","description":"词库描述"},"category":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Category","description":"词库分类"},"tags":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Tags","description":"标签列表"},"config":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Config","description":"词库配置"}},"type":"object","required":["library_id"],"title":"UpdateLibraryRequest","description":"更新词库请求模型"},"UpdateMCPServerRequest":{"properties":{"mcp_id":{"type":"string","title":"Mcp Id"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"server_type":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Server Type"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Url"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"variables":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Variables"},"headers":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Headers"}},"type":"object","required":["mcp_id"],"title":"UpdateMCPServerRequest"},"UpdateSearchRequest":{"properties":{"search_id":{"type":"string","title":"Search Id"},"name":{"type":"string","title":"Name"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"search_config":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Search Config"},"tenant_id":{"type":"string","title":"Tenant Id"}},"type":"object","required":["search_id","name","tenant_id"],"title":"UpdateSearchRequest"},"UpdateSensitiveWordRequest":{"properties":{"word_id":{"type":"string","title":"Word Id","description":"敏感词ID，必填"},"word":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Word","description":"敏感词内容，可选"},"category_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Category Id","description":"分类ID，可选"},"level_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Level Id","description":"等级ID，可选"},"match_type":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Match Type","description":"匹配类型，可选"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description","description":"词汇描述，可选"},"source":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Source","description":"来源标识，可选"},"status":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Status","description":"状态：1-启用，0-禁用"}},"type":"object","required":["word_id"],"title":"UpdateSensitiveWordRequest","description":"更新敏感词请求模型\n\nExample:\n    {\n        \"word_id\": \"uuid-string\",\n        \"word\": \"更新后的敏感词\",\n        \"category_id\": \"new-category-id\",\n        \"level_id\": \"new-level-id\",\n        \"match_type\": \"partial\",\n        \"status\": \"1\"\n    }"},"UserUpdateRequest":{"properties":{"password":{"type":"string","title":"Password","description":"Old password"},"new_password":{"type":"string","title":"New Password","description":"New password"},"email":{"type":"string","title":"Email","description":"User's email"},"status":{"type":"string","title":"Status","description":"User status"},"is_superuser":{"type":"boolean","title":"Is Superuser","description":"Superuser flag"},"login_channel":{"type":"string","title":"Login Channel","description":"Login channel"}},"type":"object","title":"UserUpdateRequest"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"},"WebCrawlRequest":{"properties":{"kb_id":{"type":"string","title":"Kb Id","description":"知识库ID"},"name":{"type":"string","title":"Name","description":"文件名"},"url":{"type":"string","title":"Url","description":"URL地址"}},"type":"object","required":["kb_id","name","url"],"title":"WebCrawlRequest"},"WholeProcessRequest":{"properties":{"user_question":{"type":"string","title":"用户问题","description":"用户提出的自然语言问题"},"request_id":{"type":"string","title":"请求ID","description":"请求ID"},"dataset_id_list":{"items":{"type":"string"},"type":"array","title":"数据集ID列表","description":"数据集ID列表","default":[]},"llm_name":{"type":"string","title":"LLM模型名称","description":"用于将自然语言转换为SQL的LLM模型名称","default":"gpt-4"}},"type":"object","required":["user_question","request_id"],"title":"WholeProcessRequest","description":"全流程处理请求的基础模型"},"api__apps__api__CompletionRequest":{"properties":{"conversation_id":{"type":"string","title":"Conversation Id"},"messages":{"items":{"type":"object"},"type":"array","title":"Messages"},"quote":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Quote","default":false},"stream":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Stream","default":true}},"type":"object","required":["conversation_id","messages"],"title":"CompletionRequest"},"api__apps__askdata__ReQueryRequest":{"properties":{"conversation_id":{"type":"string","title":"Conversation Id","description":"会话ID"},"ask_id":{"type":"string","title":"Ask Id","description":"用户的提问ID"},"chart_type":{"type":"string","title":"Chart Type","description":"图表类型"},"table_config":{"type":"object","title":"Table Config","description":"表配置"},"sql_components":{"type":"object","title":"Sql Components","description":"SQL组件"},"model_table_alias_mapping_list":{"items":{"type":"object"},"type":"array","title":"Model Table Alias Mapping List","description":"模型表别名映射列表"},"dataset_id":{"type":"string","title":"Dataset Id","description":"数据集ID"}},"type":"object","required":["conversation_id","ask_id","chart_type","table_config","sql_components","model_table_alias_mapping_list","dataset_id"],"title":"ReQueryRequest"},"api__apps__chunk__FusionSearchMode":{"properties":{"type":{"type":"string","enum":["fusion"],"const":"fusion","title":"Type","default":"fusion"},"weights":{"type":"string","title":"Weights","default":"0.05,0.95"}},"type":"object","title":"FusionSearchMode"},"api__apps__chunk__HybridSearchMode":{"properties":{"type":{"type":"string","enum":["hybrid"],"const":"hybrid","title":"Type","default":"hybrid"},"weight_dense":{"type":"number","maximum":1.0,"minimum":0.0,"title":"Weight Dense","default":0.7},"weight_sparse":{"type":"number","maximum":1.0,"minimum":0.0,"title":"Weight Sparse","default":0.3}},"type":"object","title":"HybridSearchMode"},"api__apps__conversation__CompletionRequest":{"properties":{"conversation_id":{"type":"string","title":"Conversation Id"},"messages":{"items":{"type":"object"},"type":"array","title":"Messages"},"quote":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Quote","default":false},"stream":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Stream","default":true},"filter_condition":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Filter Condition","default":""}},"type":"object","required":["conversation_id","messages"],"title":"CompletionRequest"},"api__apps__conversation__FusionSearchMode":{"properties":{"type":{"type":"string","enum":["fusion"],"const":"fusion","title":"Type","default":"fusion"},"weights":{"type":"string","title":"Weights","default":"0.05,0.95"}},"type":"object","title":"FusionSearchMode"},"api__apps__conversation__HybridSearchMode":{"properties":{"type":{"type":"string","enum":["hybrid"],"const":"hybrid","title":"Type","default":"hybrid"},"weight_dense":{"type":"number","maximum":1.0,"minimum":0.0,"title":"Weight Dense","default":0.7},"weight_sparse":{"type":"number","maximum":1.0,"minimum":0.0,"title":"Weight Sparse","default":0.3}},"type":"object","title":"HybridSearchMode"},"api__apps__dialog__FusionSearchMode":{"properties":{"type":{"type":"string","enum":["fusion"],"const":"fusion","title":"Type","default":"fusion"},"weights":{"type":"string","title":"Weights","description":"文本权重,向量权重","default":"0.05,0.95"}},"type":"object","title":"FusionSearchMode"},"api__apps__dialog__HybridSearchMode":{"properties":{"type":{"type":"string","enum":["hybrid"],"const":"hybrid","title":"Type","default":"hybrid"},"weight_dense":{"type":"number","maximum":1.0,"minimum":0.0,"title":"Weight Dense","description":"向量检索权重","default":0.7},"weight_sparse":{"type":"number","maximum":1.0,"minimum":0.0,"title":"Weight Sparse","description":"全文检索权重","default":0.3}},"type":"object","title":"HybridSearchMode"},"api__apps__document__RemoveRequest":{"properties":{"doc_id":{"items":{"type":"string"},"type":"array","title":"Doc Id","description":"文档ID列表"}},"type":"object","required":["doc_id"],"title":"RemoveRequest"},"api__apps__document__RenameRequest":{"properties":{"doc_id":{"type":"string","title":"Doc Id","description":"文档ID"},"name":{"type":"string","title":"Name","description":"新的文件名"}},"type":"object","required":["doc_id","name"],"title":"RenameRequest"},"api__apps__file__RemoveRequest":{"properties":{"file_ids":{"items":{"type":"string"},"type":"array","title":"File Ids","description":"文件ID列表"}},"type":"object","required":["file_ids"],"title":"RemoveRequest"},"api__apps__file__RenameRequest":{"properties":{"file_id":{"type":"string","title":"File Id","description":"文件ID"},"name":{"type":"string","title":"Name","description":"新的文件名"}},"type":"object","required":["file_id","name"],"title":"RenameRequest"},"api__apps__nl2sql__ReQueryRequest":{"properties":{"templated_sql":{"type":"string","title":"SQL模板","description":"需要填充的SQL模板字符串"},"parameter_definitions":{"items":{"type":"object"},"type":"array","title":"参数定义列表","description":"SQL模板中参数的定义列表"},"user_selected_values":{"type":"object","title":"用户选择的值","description":"用户为SQL模板参数选择的值映射"}},"type":"object","required":["templated_sql","parameter_definitions","user_selected_values"],"title":"ReQueryRequest","description":"SQL重新查询请求的基础模型"}},"securitySchemes":{"LoginManager":{"type":"oauth2","flows":{"password":{"scopes":{},"tokenUrl":"/auth/token"}}}}},"tags":[{"name":"default","description":"🔐 认证授权 - 获取Access Token和用户认证相关接口"},{"name":"llm","description":"🤖 大语言模型 - LLM相关接口，支持多种模型调用和管理","externalDocs":{"description":"问题反馈","url":"https://cake-doom-0c6.notion.site/LLM-1315b7c31d624827a9e5e067475d1a31?pvs=4"}},{"name":"workflow","description":"⚡ 工作流引擎 - 工作流编排、执行和管理相关接口"},{"name":"file","description":"📄 文件管理 - 文件上传、下载、管理和处理相关接口"},{"name":"document","description":"📚 文档处理 - 文档解析、向量化和检索相关接口"},{"name":"api","description":"🔧 API管理 - API配置、监控和管理相关接口"}]}Ò